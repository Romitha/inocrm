- sub_amount = ttotal_tax = total_amount = min_adv_payment = 0

%strong Customer Quotation : #{ quotation.customer_quotation_no.to_s.rjust(6, INOCRM_CONFIG["quotation_no_format"]) }
.row
  .col-md-12
    #paginate_estimation
      %table.table.table-responsive.table-condensed.table-bordered
        %thead
          %tr
            %th
            %th
            %th
            %th
            %th{colspan: 5, class: "text-center"} Estimated amount (#{quotation.ticket.ticket_currency.code})
          %tr
            %th No
            %th Requested at
            %th Description
            %th #{quotation.ticket.ticket_repair_type.code == 'EX' ? 'Repaired by' : 'Quantity' }
            %th #{quotation.ticket.ticket_repair_type.code == 'EX' ? 'Repair' : 'Parts' }
            %th Additional
            %th Tax
            %th Total
            %th Min. adv. payment
            %th Warranty (months)
            %th Status
            %th quoted

        %tbody
          - quotation.ticket_estimations.each_with_index do |estimation, index|
            - estimation_external_present = estimation.ticket_estimation_externals.present?
            - estimation_external_or_part = (estimation.ticket_estimation_externals.first or estimation.ticket_estimation_parts.first)
            - ticket_spare_part = estimation_external_or_part.ticket_spare_part unless estimation_external_present

            %tr.row_class{:style => "background-color:#{estimation.quoted.to_i > 0 ? '#99ff66' : ''};"}
              %td= index+1
              %td= estimation.requested_at.getlocal.try(:strftime, "%b %d, %Y %H:%M")
              %td.has-popover{title: "Description", data: {"toggle" => "popover", "title" => "Popover title", "trigger" => "hover", "content" => (estimation_external_present ? estimation.ticket_estimation_externals.first.description : estimation.ticket_estimation_parts.first.ticket_spare_part.spare_part_description)}}= truncate (estimation_external_present ? estimation.ticket_estimation_externals.first.description : estimation.ticket_estimation_parts.first.ticket_spare_part.spare_part_description), length: 20

              %td
                - if estimation_external_present
                  = estimation_external_or_part.try(:organization).try(:name)
                - else

                  = ticket_spare_part.ticket_spare_part_manufacture.requested_quantity if ticket_spare_part.ticket_spare_part_manufacture.present?

                  - if ticket_spare_part.ticket_spare_part_store.present?
                    - if ticket_spare_part.ticket_spare_part_store.store_request_approved
                      = ticket_spare_part.ticket_spare_part_store.approved_quantity
                    - else
                      = ticket_spare_part.ticket_spare_part_store.requested_quantity

                  - if ticket_spare_part.ticket_spare_part_non_stock.present?
                    - if ticket_spare_part.ticket_spare_part_non_stock.approval_required and ticket_spare_part.ticket_spare_part_non_stock.approved
                      = ticket_spare_part.ticket_spare_part_non_stock.approved_quantity
                    - else
                      = ticket_spare_part.ticket_spare_part_non_stock.requested_quantity
              %td
                - if estimation.approval_required
                  - if estimation_external_present
                    = number_with_precision estimation.ticket_estimation_externals.sum(:approved_estimated_price), precision: 2

                  - else
                    = number_with_precision estimation.ticket_estimation_parts.sum(:approved_estimated_price), precision: 2
                - else
                  - if estimation_external_present
                    = number_with_precision estimation.ticket_estimation_externals.sum(:estimated_price), precision: 2
                  - else
                    = number_with_precision estimation.ticket_estimation_parts.sum(:estimated_price), precision: 2

              %td.additional
                = number_with_precision estimation.ticket_estimation_additionals.send(:sum, (estimation.approval_required ? :approved_estimated_price : :estimated_price )), precision: 2

              %td.tax

                - total_tax = if estimation.approval_required
                  - estimation.ticket_estimation_externals.to_a.sum{|e| e.ticket_estimation_external_taxes.sum(:approved_tax_amount) } + estimation.ticket_estimation_parts.to_a.sum{|e| e.ticket_estimation_part_taxes.sum(:approved_tax_amount) } + estimation.ticket_estimation_additionals.to_a.sum{|e| e.ticket_estimation_additional_taxes.sum(:approved_tax_amount) }

                - else
                  - estimation.ticket_estimation_externals.to_a.sum{|e| e.ticket_estimation_external_taxes.sum(:estimated_tax_amount) } + estimation.ticket_estimation_parts.to_a.sum{|e| e.ticket_estimation_part_taxes.sum(:estimated_tax_amount) } + estimation.ticket_estimation_additionals.to_a.sum{|e| e.ticket_estimation_additional_taxes.sum(:estimated_tax_amount) }

                = number_with_precision(total_tax, precision: 2)
                - ttotal_tax += total_tax

              %td.sub_amount

                - total_est = if estimation.approval_required
                  - estimation.ticket_estimation_externals.sum(:approved_estimated_price) + estimation.ticket_estimation_parts.sum(:approved_estimated_price) + estimation.ticket_estimation_additionals.sum(:approved_estimated_price)

                - else
                  - estimation.ticket_estimation_externals.sum(:estimated_price) + estimation.ticket_estimation_parts.sum(:estimated_price) + estimation.ticket_estimation_additionals.sum(:estimated_price)

                = number_with_precision(total_est + total_tax, precision: 2)
                - total_amount += total_est + total_tax

              %td.min_adv_payment
                = number_with_precision estimation.send(estimation.approval_required ? :approved_adv_pmnt_amount : :advance_payment_amount), precision: 2
                - min_adv_payment += estimation.send(estimation.approval_required ? :approved_adv_pmnt_amount : :advance_payment_amount).to_f

              %td= estimation_external_present ? estimation.ticket_estimation_externals.first.warranty_period : estimation.ticket_estimation_parts.first.warranty_period
              %td= estimation.estimation_status.name

              %td.quoted_value
                = estimation.quoted

.row
  .col-md-6.pull-right
    %table.table.table-striped
      %tbody{class: "text-right"}
        %tr
          %td{colspan: 2} (#{quotation.ticket.ticket_currency.code})
        %tr.hide
          %td Sub.Total
          %td#sub_amount
        %tr
          %td Total tax
          %td#total_tax= ttotal_tax
        %tr
          %td Total amount
          %td#final_total_amount= total_amount
        %tr.hide
          %td Minimum payment
          %td#min_adv_payment= min_adv_payment
.row

  .col-md-1
    = link_to "#", class: "btn btn-sm btn-success", onclick: "Users.request_printer_application('quotation', '#{quotation.id}', 'quotation_request_type', 'print_customer_quotation_tag_value', 'print_customer_quotation'); false;", data: {disable_with: "Printing..."}, class: "btn btn-default" do
      Print

  .col-md-1
    = link_to "Print PDF", quotation_reports_path(quotation_id: quotation.id, format: :pdf), target: "_blank", class: "btn btn-sm btn-info"