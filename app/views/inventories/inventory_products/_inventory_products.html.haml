= paginate @inventory_products, remote: true, method: :get

- if @inventory_products.any?
  %hr
  .row
    .col-md-1.strong{style: "text-align: center;"} No
    .col-md-2.strong Type
    .col-md-2.strong Serial code
    .col-md-2.strong item code
    .col-md-1.strong.text-right Stock Qty
    .col-md-1.strong Currency
    .col-md-1.strong.text-right Available Qty
    .col-md-1.strong.text-right Stock cost
    .col-md-1.strong Action
  %hr

  - @inventory_products.each_with_index do |pr, index|
    - inventories = pr.inventories.map { |i| i if i.store_id.to_i == @store.id }.compact

    - content_for :inventory_p_more, flush: true do
      %ul
        %li
          %strong Unit:
          #{pr.inventory_unit.unit}
        %li
          %strong Manufacture:
          #{pr.inventory_product_info and pr.inventory_product_info.manufacture.try(:manufacture)}
        %li
          %strong Brand:
          #{pr.category1_name}
        %li
          %strong Product:
          #{pr.category2_name}
        %li
          %strong Category:
          = pr.category3_name
        %li
          %strong Model No:
          = pr.model_no
        %li
          %strong Product No:
          = pr.product_no
        %li
          %strong Part No:
          = pr.spare_part_no

      %strong Description:
      #{simple_format pr.description}
      %strong Remarks:
      #{pr.try(:remarks)}

    - content_for :select_result, flush: true do
      %dl.dl-horizontal
        %dt Item code:
        %dd= pr.generated_item_code
        %dt Item description:
        %dd= pr.description
        %dt Order unit
        %dd= pr.inventory_unit.unit
        %dt Stock in hand
        %dd= pr.inventories.map { |i| i.stock_quantity if i.store_id.to_i == @store.id }.compact.join(", ")

    .row
      .col-md-1{ "type"=> "button", "class"=> "btn btn-link has-popover", "data-toggle"=> "popover", "title"=> "Serial No: #{pr.generated_item_code}", "data-content"=> yield(:inventory_p_more), "data-html" => "true", "data-trigger" => "hover", "data-placement" => "right" }= index+1
      .col-md-2= pr.inventory_product_info.need_serial ? "Serial" : pr.inventory_product_info.need_batch ? "Batch" : "Non of Serial or Batch"
      .col-md-2= pr.generated_serial_no
      .col-md-2= pr.generated_item_code
      .col-md-1.text-right= inventories.sum{|i| i.stock_quantity.to_f }
      .col-md-1= pr.inventory_product_info.currency_type
      .col-md-1.text-right= inventories.sum{|i| i.available_quantity.to_f }
      .col-md-1.text-right
        - if pr.inventory_product_info.need_serial
          = pr.grn_serial_items.sum{|g| g.grn_item.current_unit_cost.to_f + g.inventory_serial_item.inventory_serial_items_additional_costs.sum{|c| c.cost.to_f }}

        - elsif pr.inventory_product_info.need_batch
          = pr.grn_batches.sum{|g| g.grn_item.current_unit_cost.to_f * g.remaining_quantity.to_f }

        - else
          = pr.grn_items.sum{|g| g.remaining_quantity.to_f * g.current_unit_cost.to_f }

      - if params[:from_where] == "inventories"
        .col-md-1
          - if pr.inventory_product_info.need_serial
            = link_to "Serial", inventories_admins_searches_path(select_action: "select_serial_items", inv_pro_id: pr.id, store: params[:store_id] ), class: "btn-link"
          - if pr.inventory_product_info.need_batch
            = link_to "Batch", inventories_admins_searches_path(select_action: "select_batches", inv_pro_id: pr.id, store: params[:store_id] ), class: "btn-link"
          - if !(pr.inventory_product_info.need_serial or pr.inventory_product_info.need_batch)
            = link_to "Non", inventories_admins_searches_path(select_action: "select_non_serial_or_batch", inv_pro_id: pr.id, store: params[:store_id] ), class: "btn-link"
      - else
        .col-md-1= link_to "Select", (@select_path || "#"), (@select_options || {}).merge({data: {content: (yield :select_result ), productid: pr.id}})

    %hr
  .row.strong
    .col-md-5.text-right Totals
    .col-md-3.text-right= @total_stock_quantity
    .col-md-2.text-right= @total_available_quantity
    .col-md-1.text-right= @total_sum_of_stock_cost

= paginate @inventory_products, remote: true, method: :get