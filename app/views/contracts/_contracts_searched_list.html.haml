- contracts = @contracts
- organization = @organization
- status_colors = @status_colors
= paginate contracts, remote: true, method: :get
%table.table.table-bordered
  %thead
    %tr
      %th No
      %th Customer
      %th Created At
      %th Contract No
      %th Service Provider
      %th Contract Start Date
      %th Contract End Date
      %th Hold
      %th Active
      %th Amount
      %th Currency
      %th Contract Type
      %th Payments Completed
      %th Action
  %tbody
    - contracts.each_with_index do |con, index|
      - content_for :contracts_brief, flush: true do
        %ul
          %li
            %strong Created By:
            #{con.created_by_user_full_name}
        %ul
          %li
            %strong No Of Products:
            #{con.num_of_products}
      %tr{style: "background-color: #{con.status_color}; font-weight: bold;"}
        %td{ "type"=> "button", "class"=> "btn btn-link has-popover", "data-toggle"=> "popover", "title"=> "Contract No: #{con.contract_no}", "data-content"=> yield(:contracts_brief), "data-html" => "true", "data-trigger" => "hover", "data-placement" => "right" }
          - if params[:page]
            = (index+1)+ 10*(params[:page].to_i-1)
          - else
            = (index+1)
        %td= con.organization.try(:name)
        %td= con.formated_created_at
        %td= con.contract_no
        %td= con.owner_organization.try(:name)
        %td= con.formated_contract_start_at
        %td= con.formated_contract_end_at
        %td
          - chk_hold = boolean_in_word con.hold, "Yes", "No"
          - if chk_hold == "Yes"
            %font{:color => "green"} Yes
          - else
            %font{:color => "red"} No
        %td= boolean_in_word con.dynamic_active, "Yes", "No"
        %td= con.view_context.standard_currency_format(product_amount)
        %td= con.ticket_currency.try(:code)
        %td= con.ticket_contract_type.try(:name)
        %td= boolean_in_word con.payment_completed, "Yes", "No"
        %td
          = link_to "Edit", contracts_path(edit_create_contract: true, contract_id: con.id, customer_id: con.organization.id), remote: true, onclick: "Tickets.ajax_loader(); return false;"

          %br
          = link_to "View", view_contracts_path(contract_id: con.id, customer_id: con.organization.id), target: "_blank", remote: false
          %br
          = link_to_if can?(:contract_payment, Organization), "Payments", view_contracts_path(view_contract: true, new_payments: true, contract_id: con.id, customer_id: con.organization.id),target: "_blank",  remote: false do
            "Not accessed to payment"
          %br
          = link_to "Generate Document", generate_contract_document_contracts_path(contract_id: con.id), method: :post
          / = link_to "Edit", contracts_path(edit_create: true, contract_id: con.id, customer_id: con.organization.id), remote: true, onclick: "Tickets.ajax_loader(); return false;"
          / = link_to "Edit", contracts_path(edit_create: true, contract_id: con.id, customer_id: con.organization.id), remote: true, onclick: "Tickets.ajax_loader(); return false;"
.row{style: "font-weight: bold;"}Status colour code
%br
- status_colors.each_with_index do |color, index|
  .col-md-1
    .col-md-1{style: "background-color: #{color.try(:colour_code)};padding: 8px;"}
    .col-md-2{style: "font-weight: bold;"}= color.try(:name)
.row
.row
.row
.row
.row
.row
  = paginate contracts, remote: true, method: :get