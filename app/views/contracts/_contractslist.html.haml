- organization = @organization

- contract_products = if params[:from_where] == "new_ticket"
  - @contract_products.to_a.select{|c| (c.ticket_contract.contract_start_at.to_date .. c.ticket_contract.contract_end_at.to_date).include?(Date.today)}
- else
  - @contract_products.to_a.uniq{|c| c.contract_id }

%hr
.row
  .col-md-12
    .row
      .col-md-2
        %h4 Customer
      .row
      %br
      .col-md-5
        %dl.dl-horizontal
          %dt Customer Name:
          %dd= organization.name
          %dt Address:
          %dd
            - organization.addresses.primary_address.each do |address|
              = address.full_address
          %dt Account no:
          %dd
          %dt Customer code:
          %dd= organization.code
          %dt Industry type:
          %dd= organization.industry_type.name
      .col-md-5
        %dl.dl-horizontal
          %dt Created at:
          %dd= organization.created_at.try(:strftime, INOCRM_CONFIG['short_date_format'])
          %dt Created by:
          %dd= organization.created_by_user.try(:full_name)
          %dt Under contract:
          %dd
      %br

    %table.table.table-bordered
      %thead
        %tr
          %th No
          %th Created at
          %th Contract no
          %th Owner dep
          %th Start date
          %th Exp date
          %th Hold
          %th Active

          - if params[:from_where] == "new_ticket"
            %th Serial No
            %th Brand
            %th Category
            %th Model No
            %th Product No

          - else
            %th Amount
            %th Currency
            %th Contract type
            %th No Of products
            %th Created by

          %th Action
      %tbody
        - contract_products.each_with_index do |con, index|
          %tr
            %td
              - if params[:page]
                = (index+1)+ 10*(params[:page].to_i-1)
              - else
                = (index+1)
            %td= con.ticket_contract.created_at.try(:strftime, INOCRM_CONFIG['short_date_format'])
            %td= con.ticket_contract.contract_no
            %td= con.ticket_contract.organization.name
            %td= con.ticket_contract.contract_start_at.try(:strftime, INOCRM_CONFIG['short_date_format'])
            %td= con.ticket_contract.contract_end_at.try(:strftime, INOCRM_CONFIG['short_date_format'])
            %td= boolean_in_word con.ticket_contract.hold, "Yes", "No"
            %td= boolean_in_word con.ticket_contract.dynamic_active, "Yes", "No"

            - if params[:from_where] == "new_ticket"
              %td= con.product.serial_no
              %td= con.product.product_brand.name
              %td= con.product.product_category.name
              %td= con.product.model_no
              %td= con.product.product_no

            - else
              %td= con.ticket_contract.amount
              %td= con.ticket_contract.ticket_currency.try(:code)
              %td= con.ticket_contract.ticket_contract_type.name
              %td= con.ticket_contract.products.count
              %td= con.ticket_contract.created_by_user.full_name

            %td
              - if params[:from_where] == "new_ticket"
                / %td= link_to "Select", contracts_path(select_contract: true, contract_id: con.id, customer_id: organization.id), remote: true
                = link_to "Select", find_by_serial_tickets_path(contract_id: con.ticket_contract.id, serial_search: con.product.serial_no), remote: true, method: :post
              - else
                = link_to "Edit", contracts_path(edit_create: true, contract_id: con.ticket_contract.id, customer_id: con.ticket_contract.organization.id), remote: true, onclick: "Tickets.ajax_loader(); return false;"
    %br
    - unless params[:from_where] == "new_ticket"
      = link_to "New Contract", contracts_path(edit_create: true, customer_id: organization.id), remote: true, class: "btn btn-sm btn-warning"
    %br
    %br
#contractedit
#contractselect
