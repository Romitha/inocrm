- products = @products
- organization_for_location = @organization1
- contract_id = @contract_id
- cached_products = @cached_products
%br/
- if products.present?
  / = paginate products, remote: true, method: :get

  = form_tag submit_selected_products_contracts_path(from_where: params[:from_where], new_contract: params[:new_contract]), method: :post, remote: true do
    - if params[:from_where] == "cus_product"
      = submit_tag "Done", :name => "done_cus_product", class: "btn btn-sm btn-success btn-primary"
    - else
      = submit_tag "Done", :name => "done",  class: "btn btn-sm btn-success btn-primary"
      = hidden_field_tag :organization_id, organization_for_location.id
      - if contract_id != nil
        = hidden_field_tag :contract_id, contract_id.id
    .row
      %table.table.table-hover
        %thead
          %tr
            %th No
            %th Serial No
            %th Brand
            %th Category
            %th Model No
            %th Product No
            %th Product Name
            %th Product Description
            - if params[:from_where] == "cus_product"
              %th Customer Name
            %th Action
        %tbody
          - products.each_with_index do |p, index|
            %tr
              %td
                - if params[:page]
                  = (index+1)+ 10*(params[:page].to_i-1)
                - else
                  = (index+1)
              %td= p.serial_no
              %td= p.brand_name
              %td
                .has-tooltip{title: p.category_full_name_index, data: { toggle:"tooltip", placement: "top" } }= p.category_full_name_index.truncate(12)
              %td= p.model_no
              %td= p.product_no
              %td
                - if p.name.present?
                  .has-tooltip{title: p.name, data: { toggle:"tooltip", placement: "top" } }= p.try(:name).truncate(12)
              %td= p.description
              - if params[:from_where] == "cus_product"
                %td= p.owner_customer_name
              / - if p.ticket_contracts.present?
              /   - if p.ticket_contracts.last.present?
              /     %td= p.ticket_contracts.last.organization.try(:name)
              /     %td= boolean_in_word p.ticket_contracts.last.try(:hold), "Yes", "No"
              /     %td
              / - else


              %td
                - if params[:from_where] == "cus_product"
                  = check_box_tag "serial_products_ids[]", p.id, Rails.cache.fetch([:products, request.remote_ip]).to_a.map { |e| e.id }.include?(p.id.to_f)
                - else
                  = check_box_tag "serial_products_ids[]", p.id, Rails.cache.fetch([:contract_products, request.remote_ip]).to_a.map { |e| e.id }.include?(p.id.to_f)
              / %td= check_box_tag "serial_products_ids[]", p.id
  / = paginate products, remote: true, method: :get