- contract = @contract
- organization = @organization
- products = @products
- contract_payment_received = @contract_payment_received
%br
- if params[:new_payments]
  %h3 Payments
-else
  %h3 View Contract
%br
.row
  .col-md-2
    %font{:color => "#4355f2", :size => "4"}
      %strong Customer Information
  .col-md-5
    %dl.dl-horizontal
      %dt Customer Name:
      %dd= organization.try(:name)
      %dt Address:
      %dd
        - organization.addresses.primary_address.each do |address|
          = address.full_address
      %dt Account no:
      %dd= organization.account.account_no
      %dt Customer code:
      %dd= organization.account.try(:code)
  .col-md-5
    %dl.dl-horizontal
      %dt Created at:
      %dd= organization.created_at.try(:strftime, INOCRM_CONFIG['short_date_format'])
      %dt Created by:
      %dd= organization.created_by_user.try(:full_name)
%br
%hr
- chk_hold = boolean_in_word contract.hold, "Yes", "No"
- chk_active = boolean_in_word contract.dynamic_active, "Yes", "No"
.row
  %br
  .col-md-2
    %font{:color => "#4355f2", :size => "4"}
      %strong Contract Information
  .col-md-4
    %dl.dl-horizontal
      - if chk_hold == "No"
        %font{:color => "green", :size => "4"}
          %dt Contract Hold :
        %font{:color => "green", :size => "4"}
          %dd= chk_hold
      - if chk_hold == "Yes"
        %font{:color => "red", :size => "4"}
          %dt Contract Hold :
        %font{:color => "red", :size => "4"}
          %dd= chk_hold
      %br
      %dt Contract No:
      %dd= contract.contract_no
      %hr
      %dt Owner Department:
      %dd= contract.owner_organization.try(:name)
      %hr
      %dt Address Company:
      %dd= contract.organization_contact.try(:name)
      %hr
      %dt Billing Company:
      %dd= contract.organization_bill.try(:name)
      %hr
      %dt Start Date:
      %dd= contract.contract_start_at.try(:strftime, INOCRM_CONFIG["short_date_format"])
      %hr
      %dt Process Date:
      %dd= contract.process_at.try(:strftime, INOCRM_CONFIG["short_date_format"])
      %hr
      %dt Hold:
      %dd= boolean_in_word contract.hold, "Yes", "No"
      %hr
      %dt Currency:
      %dd= contract.ticket_currency.try(:code)
      %hr
      %dt Brand:
      %dd= contract.product_brand.try(:name)
      %hr
      %dt Additional Charges:
      %dd
        - if contract.additional_charges == 1
          Option 1
        - if contract.additional_charges == 2
          Option 2
      %hr
      %dt Accepted Date:
      %dd= contract.accepted_at.try(:strftime, INOCRM_CONFIG["short_date_format"])
      %hr
      %dt Signed Docu. Received:
      %dd=boolean_in_word contract.documnet_received, "Yes", "No"
  .col-md-4
    %dl.dl-horizontal
      - if chk_active == "Yes"
        %font{:color => "green", :size => "4"}
          %dt Contract Active :
        %font{:color => "green", :size => "4"}
          %dd= chk_active
      - if chk_active == "No"
        %font{:color => "red", :size => "4"}
          %dt Contract Active :
        %font{:color => "red", :size => "4"}
          %dd= chk_active
      %br
      %dt Legacy Contract No:
      - products.each do |p|
        - if p.contract_id == contract.id
          %dd= p.product.serial_no
      %hr
      %dt Contact Person:
      %dd= contract.organization_contact_person.try(:name)
      %hr
      %dt Contact Address:
      %dd= contract.contact_address.try(:full_address)
      %hr
      %dt Bill Address:
      %dd= contract.bill_address.try(:full_address)
      %hr
      %dt Exp. Date:
      %dd= contract.contract_end_at.try(:strftime, INOCRM_CONFIG["short_date_format"])
      %hr
      %dt Remind before Expiry:
      %dd= boolean_in_word contract.remind_required, "Yes", "No"
      %hr
      %dt Back to Back Contract:
      %dd= boolean_in_word contract.contract_b2b, "Yes", "No"
      %hr
      %dt Contract Type:
      %dd= contract.ticket_contract_type.try(:name)
      %hr
      %dt Category:
      %dd= contract.product_category.try(:name)
      %hr
      %dt Season:
      %dd
        - if contract.season == 1
          Season 1
        - if contract.season == 2
          Season 2
      %hr
      %dt Payment Type:
      %dd= contract.ticket_contract_payment_type.try(:name)
      %hr
      %dt Remarks:
      %dd=simple_format contract.remarks
- if @contract_products.present?
  %hr
  .row
    %br
    .col-md-2
      %font{:color => "#4355f2", :size => "4"}
        %strong Product Information
    .col-md-10
      %table.table.table-bordered
        %thead
          %tr
            %th No
            %th Serial No
            %th Brand
            %th Category
            %th Model No
            %th Product No
            %th Amount
        %tbody
          - @contract_products.each_with_index do |p, index|
            %tr
              %td
                - if params[:page]
                  = (index+1)+ 10*(params[:page].to_i-1)
                - else
                  = (index+1)
              %td= p.product.serial_no
              %td= p.product.brand_name
              %td= p.product.category_name
              %td= p.product.model_no
              %td= p.product.product_no
              %td= p.amount
- if @contract_payment.present?
  - if params[:new_payments]
    %hr
    .row
      %br
      .col-md-2
        %font{:color => "#4355f2", :size => "4"}
          %strong  Payment Information
      .col-md-10
        %table.table.table-bordered
          %thead
            %tr
              %th No
              %th Date Recieved
              %th Amount
              %th Installment
              %th Invoice No
              %th Remarks

          %tbody
            - @contract_payment.each_with_index do |cp, index|
              %tr
                %td
                  - if params[:page]
                    = (index+1)+ 10*(params[:page].to_i-1)
                  - else
                    = (index+1)
                %td
                  = link_to "#", class: "inline_edit", data: {type: "text", resource: "contract_payment_received", name: "payment_received_at",url: update_payments_contracts_path(payment_id: cp.id), "original-title" => "Update Payment Received At"} do
                    = cp.payment_received_at.try(:strftime, INOCRM_CONFIG["short_date_format"])
                %td
                  = link_to "#", class: "inline_edit", data: {type: "text", resource: "contract_payment_received", name: "amount",url: update_payments_contracts_path(payment_id: cp.id), "original-title" => "Update Amount"} do
                    = number_with_precision cp.amount, precision: 2
                %td
                  = link_to "#", class: "inline_edit", data: {type: "text", resource: "contract_payment_received", name: "payment_installment",url: update_payments_contracts_path(payment_id: cp.id), "original-title" => "Update Payment Installment"} do  
                    = cp.payment_installment
                %td
                  = link_to "#", class: "inline_edit", data: {type: "text", resource: "contract_payment_received", name: "invoice_no",url: update_payments_contracts_path(payment_id: cp.id), "original-title" => "Update Invoice No"} do
                    = cp.invoice_no
                %td
                  = link_to "#", class: "inline_edit", data: {type: "textarea", resource: "contract_payment_received", name: "remarks",url: update_payments_contracts_path(payment_id: cp.id), "original-title" => "Update Remarks"} do
                    = cp.remarks
  - else
    %hr
    .row
      %br
      .col-md-2
        %font{:color => "#4355f2", :size => "4"}
          %strong  Payment Information
      .col-md-10
        %table.table.table-bordered
          %thead
            %tr
              %th No
              %th Date Recieved
              %th Amount
              %th Installment
              %th Invoice No
              %th Remarks

          %tbody
            - @contract_payment.each_with_index do |cp, index|
              %tr
                %td
                  - if params[:page]
                    = (index+1)+ 10*(params[:page].to_i-1)
                  - else
                    = (index+1)
                %td= cp.payment_received_at.try(:strftime, INOCRM_CONFIG["short_date_format"])
                %td= number_with_precision cp.amount, precision: 2
                %td= cp.payment_installment
                %td= cp.invoice_no
                %td= cp.remarks
- if params[:new_payments]
  %hr
  .row
    %br
    .col-md-2
      %font{:color => "#4355f2", :size => "4"}
        %strong  New Payments
    .col-md-10
      = simple_nested_form_for contract_payment_received, url: payments_save_contracts_path(), html: {class: "validate_form"}, method: :post, remote: false, multiple: true do |f|
        = f.hidden_field :contract_id
        .col-md-6
          = f.input :payment_installment, required:true
          = f.input :amount, required:true
        .col-md-6
          = f.input :payment_received_at, as: :string, input_html: {class: "form-control datepicker"}, required:true
          = f.input :invoice_no

          = hidden_field_tag :contract_id, contract.id
          %strong Payment Completed
          = check_box_tag 'payment_completed'
        .col-md-12
          = f.input :remarks
          = f.input :created_at, as: :hidden, input_html: {value: DateTime.now.strftime("%d-%m-%Y %H:%M")}
          = f.submit "Save", class: "btn btn-sm btn-success", remote: true