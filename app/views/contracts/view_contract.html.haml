- contract = @contract
- organization = @organization
- products = @products
- contract_payment_received = @contract_payment_received
%br
- if params[:new_payments]
  %h3 Payments
-else
  %h3 View Contract
%br
.row
  .col-md-2
    %font{:color => "#4355f2", :size => "4"}
      %strong Customer Information
  .col-md-5
    %dl.dl-horizontal
      %dt Customer Name:
      %dd= organization.try(:name)
      %dt Address:
      %dd
        - organization.addresses.primary_address.each do |address|
          = address.full_address
      %dt Account no:
      %dd= organization.account.account_no
      %dt Customer code:
      %dd= organization.account.try(:code)
  .col-md-5
    %dl.dl-horizontal
      %dt Created at:
      %dd= organization.created_at.try(:strftime, INOCRM_CONFIG['short_date_format'])
      %dt Created by:
      %dd= organization.created_by_user.try(:full_name)
%br
%hr
- chk_hold = boolean_in_word contract.hold, "Yes", "No"
- chk_active = boolean_in_word contract.dynamic_active, "Yes", "No"
.row
  %br
  .col-md-2
    %font{:color => "#4355f2", :size => "4"}
      %strong Contract Information
  .col-md-4
    %dl.dl-horizontal
      - if chk_hold == "No"
        %font{:color => "green", :size => "4"}
          %dt Contract Hold :
        %font{:color => "green", :size => "4"}
          %dd= chk_hold
      - if chk_hold == "Yes"
        %font{:color => "red", :size => "4"}
          %dt Contract Hold :
        %font{:color => "red", :size => "4"}
          %dd= chk_hold
      %br
      %dt Contract No:
      %dd= contract.contract_no_genarate
      %hr
      %dt Owner Department:
      %dd= contract.owner_organization.try(:name)
      %hr
      %dt Address Company:
      %dd= contract.organization_contact.try(:name)
      %hr
      %dt Billing Company:
      %dd= contract.organization_bill.try(:name)
      %hr
      %dt Start Date:
      %dd= contract.contract_start_at.try(:strftime, INOCRM_CONFIG["short_date_format"])
      %hr
      %dt Process Date:
      %dd= contract.process_at.try(:strftime, INOCRM_CONFIG["short_date_format"])
      %hr
      %dt Hold:
      %dd= boolean_in_word contract.hold, "Yes", "No"
      %hr
      %dt Currency:
      %dd= contract.ticket_currency.try(:code)
      %hr
      %dt Brand:
      %dd= contract.product_brand.try(:name)
      %hr
      %dt Additional Charges:
      %dd
        - if contract.additional_charges == 1
          Option 1
        - if contract.additional_charges == 2
          Option 2
      %hr
      %dt Accepted Date:
      %dd= contract.accepted_at.try(:strftime, INOCRM_CONFIG["short_date_format"])
      %hr
      %dt Signed Docu. Received:
      %dd=boolean_in_word contract.documnet_received, "Yes", "No"
      %hr

      - ttl_amunt_sum = @contract_products.to_a.sum{|e| e.try(:amount)}
      - ttl_disc_sum = @contract_products.to_a.sum{|e| e.try(:discount_amount)}
      - final_amount = (ttl_amunt_sum - ttl_disc_sum)
      - ttl_recived_amount = @contract_payment.to_a.sum{|e| e.try(:amount)}
      - balance_amount = (final_amount - ttl_recived_amount)

      %font{:color => "red", :size => "2"}
        %dt Total Recieved Amount:
        %dd= number_with_precision ttl_recived_amount, precision: 2
        %br
        %dt Balance Amount:
        %dd= number_with_precision balance_amount, precision: 2
      / - if @contract_products.present?
      /   %hr
      /   - ttl_amunt_sum = @contract_products.to_a.sum{|e| e.amount}
      /   - ttl_disc_sum = @contract_products.to_a.sum{|e| e.discount_amount}
      /   %font{:color => "red", :size => "2"}
      /     %dt Total Recieved Amount:
      /     %dd= number_with_precision (ttl_amunt_sum - ttl_disc_sum), precision: 2
      /     %br
      /     %dt Balance Amount:
      /     %dd


  .col-md-4
    %dl.dl-horizontal
      - if chk_active == "Yes"
        %font{:color => "green", :size => "4"}
          %dt Contract Active :
        %font{:color => "green", :size => "4"}
          %dd= chk_active
      - if chk_active == "No"
        %font{:color => "red", :size => "4"}
          %dt Contract Active :
        %font{:color => "red", :size => "4"}
          %dd= chk_active
      %br
      %dt Legacy Contract No:
      %dd= contract.legacy_contract_no
      %hr
      %dt Contact Person:
      %dd= contract.organization_contact_person.try(:name)
      %hr
      %dt Contact Address:
      %dd= contract.contact_address.try(:full_address)
      %hr
      %dt Bill Address:
      %dd= contract.bill_address.try(:full_address)
      %hr
      %dt Exp. Date:
      %dd= contract.contract_end_at.try(:strftime, INOCRM_CONFIG["short_date_format"])
      %hr
      %dt Remind before Expiry:
      %dd= boolean_in_word contract.remind_required, "Yes", "No"
      %hr
      %dt Back to Back Contract:
      %dd= boolean_in_word contract.contract_b2b, "Yes", "No"
      %hr
      %dt Contract Type:
      %dd= contract.ticket_contract_type.try(:name)
      %hr
      %dt Category:
      %dd= contract.product_category.try(:name)
      %hr
      %dt Season:
      %dd
        - if contract.season == 1
          Season 1
        - if contract.season == 2
          Season 2
      %hr
      %dt Payment Type:
      %dd= contract.ticket_contract_payment_type.try(:name)
      %hr
      %dt Remarks:
      %dd=simple_format contract.remarks
      %hr
      %dt Total Amount:
      %dd=final_amount

- if @contract_products.present?
  - if contract.payment_completed
    %font{:color => "green", :size => "4"}
      Payment Completed
  %hr
  .row
    %br
    .col-md-2
      %font{:color => "#4355f2", :size => "4"}
        %strong Product Information
    .col-md-10
      %table.table.table-bordered
        %thead
          %tr
            %th No
            %th Serial No
            %th Brand
            %th Category
            %th Model No
            %th Product No
            %th Amount(Discounted)
            %th Action
        %tbody
          - @contract_products.each_with_index do |p, index|
            %tr
              %td
                - if params[:page]
                  = (index+1)+ 10*(params[:page].to_i-1)
                - else
                  = (index+1)
              %td= p.product.serial_no
              %td= p.product.brand_name
              %td= p.product.category_name
              %td= p.product.model_no
              %td= p.product.product_no
              - amount_without_discount = p.try(:amount)
              - discount = p.try(:discount_amount)
              - if !(amount_without_discount == "" && discount == "")
                - final_amount = (amount_without_discount - discount)
              -else
                - final_amount = amount_without_discount
              %td= number_with_precision final_amount, precision: 2
              %td= link_to "View", contracts_path(view_product: true, product_id: p.product.id, contract_id:p.id), remote: false, class: "btn btn-sm btn-warning", target: "_blank"
- if !contract.payment_completed
  - if params[:new_payments]
    .completed.hide
      %font{:color => "green", :size => "4"}
        Payment Completed
    .not_completed
      %font{:color => "red", :size => "4"}
        Payment Not Completed
    %hr
    .row
      %br
      .col-md-2
        %font{:color => "#4355f2", :size => "4"}
          %strong  New Payments

      .col-md-10
        = simple_nested_form_for contract_payment_received, url: payments_save_contracts_path(), html: {class: "validate_form"}, method: :post, remote: false, multiple: true do |f|
          = f.hidden_field :contract_id
          .col-md-6
            .col-md-5
              %font{:color => "green", :size => "2"}
                %strong Payment Type:
                = contract.ticket_contract_payment_type.try(:name)
            .col-md-7
              = hidden_field_tag :ticket_contract_payment_type, contract.ticket_contract_payment_type.try(:name)
              - if contract.ticket_contract_payment_type.try(:name) == "Annually"
                %strong Max Payment Installment: 1
              - if contract.ticket_contract_payment_type.try(:name) == "Monthly"
                %strong Max Payment Installment: 12
              - if contract.ticket_contract_payment_type.try(:name) == "Quarterly"
                %strong Max Payment Installment: 4
              - if contract.ticket_contract_payment_type.try(:name) == "Binnually"
                %strong Max Payment Installment: 2
            %br
            %br
            = f.input :payment_installment, required:true, input_html: {oninput: "Tickets.filter_instalments();" }
            = f.input :amount, required:true, input_html: {oninput: "Tickets.balance_count();" }
            = hidden_field_tag :balance_to_pay , balance_amount
          .col-md-6
            %br
            %br
            = f.input :payment_received_at, as: :string, input_html: {class: "form-control datepicker"}, required:true
            = f.input :invoice_no

            = hidden_field_tag :contract_id, contract.id
            = hidden_field_tag "payment_completed", "false"
          .col-md-12
            = f.input :remarks
            = f.input :created_at, as: :hidden, input_html: {value: DateTime.now.strftime("%d-%m-%Y %H:%M")}
            = f.submit "Save", class: "btn btn-sm btn-success", remote: true
- if @contract_payment.present?
  %hr
  .row
    %br
    .col-md-2
      %font{:color => "#4355f2", :size => "4"}
        %strong  Payment Information
    .col-md-10
      %table.table.table-bordered
        %thead
          %tr
            %th No
            %th Date Recieved
            %th Amount
            %th Installment
            %th Invoice No
            %th Remarks

        %tbody
          - @contract_payment.each_with_index do |cp, index|
            %tr
              %td
                - if params[:page]
                  = (index+1)+ 10*(params[:page].to_i-1)
                - else
                  = (index+1)
              %td= cp.payment_received_at.try(:strftime, INOCRM_CONFIG["short_date_format"])
              %td= number_with_precision cp.amount, precision: 2
              %td= cp.payment_installment
              %td= cp.invoice_no
              %td= cp.remarks
- if !params[:new_payments]
  %hr
  .row
    %br
    .col-md-2
      %font{:color => "#4355f2", :size => "4"}
        %strong Contract Attachments
    .col-md-10
      - contract.contract_attachments.each do |d|
        - if d.persisted?
          = link_to d.attachment_url.file.filename, d.attachment_url.url, target: "_blank"
          %br
  %hr
  .row
    %br
    .col-md-2
      %font{:color => "#4355f2", :size => "4"}
        %strong Contract Documents
    .col-md-10
      .row
        .col-md-4.strong Name
        .col-md-4.strong Document
      .row
        - contract.contract_documents.each do |contract_document|
          %div{id: "contract_document_wrapper_#{contract_document.id}"}
            .col-md-4= contract_document.name
            .col-md-4{id: "contract_document_#{contract_document.id}"}= link_to contract_document.document_url.file.filename, contract_document.document_url.url, target: "_blank"
          %br

        .col-md-12
        %br
        %br
          Generated count: #{contract.document_generated_count.to_i}
          |
          Last Generated at: #{contract.last_doc_generated_at.try(:strftime, "%d-%m-%Y")}
          |
          Last Generated by: #{User.find_by_id(contract.last_doc_generated_by).try(:full_name)}
  %hr