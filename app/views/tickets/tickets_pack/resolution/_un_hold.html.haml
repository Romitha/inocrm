- uri = URI(request.url)

- from_template = (uri.path == "/tickets/call_mf_order_template" ? "/tickets/order_manufacture_parts" : uri.path == "/tickets/call_resolution_template" ? "/tickets/resolution" : "")

- uri_path = ["/tickets/resolution", "/tickets/order_manufacture_parts"].include?(uri.path) ? uri.path : from_template.present? ? from_template : "/#{params[:controller].split('/').last}/#{params[:action]}"

- task_id = TaskAction.find_by_action_no(8).id
%fieldset
  %legend Un Hold
  = simple_form_for ticket, url: update_un_hold_ticket_path(ticket), method: :post do |f|
    = hidden_field_tag :engineer_id, params[:engineer_id]

    = hidden_field_tag :process_id, Rails.cache.fetch([uri.path, params[:task_id]])[:process_id]
    = hidden_field_tag :task_id, Rails.cache.fetch([uri.path, params[:task_id]])[:task_id]
    = hidden_field_tag :owner, Rails.cache.fetch([uri.path, params[:task_id]])[:owner]
    - Rails.cache.fetch([uri.path, params[:task_id]])[:bpm_input_variables].each do |bpm_input_variable|
      = hidden_field_tag bpm_input_variable[0], bpm_input_variable[1]

    = f.simple_fields_for "user_ticket_actions_attributes[]", @user_ticket_action do |uf|
      = uf.input :action_id, as: :hidden, input_html: {value: TaskAction.find_by_action_no(9).id}
      = uf.input :action_by, as: :hidden, input_html: {value: current_user.id}
      = uf.input :re_open_index, as: :hidden, input_html: {value: ticket.re_open_count}
      = uf.input :action_engineer_id, as: :hidden, input_html: {value: session[:engineer_id] }

    = f.input :status_hold, as: :hidden, input_html: {value: false}
    .row.col.md-12
      .col-md-4
        %strong Hold at: 
        #{ticket.user_ticket_actions.where(action_id: task_id).last.act_hold.created_at.strftime("%d-%m-%Y %H:%M")}
      .col-md-4
        %strong Hold by: 
        #{User.cached_find_by_id(ticket.user_ticket_actions.where(action_id: task_id).last.action_by).email}
      .col-md-4
        %strong Hold reason: 
        #{ticket.user_ticket_actions.where(action_id: task_id).last.act_hold.reason.reason}
    .row.col.md-12
      .col-md-4
        -if ticket.user_ticket_actions.where(action_id: task_id).last.act_hold.sla_pause == true
          %strong SLA pause: Yes
        -else
          %strong SLA pause: No

      .col-md-4
        %strong Hold time duration:
        #{time_ago_in_words(ticket.user_ticket_actions.where(action_id: task_id).last.act_hold.created_at)}
    = f.submit "Save", class: "btn btn-success"