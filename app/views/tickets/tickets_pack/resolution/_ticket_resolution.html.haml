- present_of_start_ticket_action =  ticket.user_ticket_actions.find_by_action_id(TaskAction.find_by_action_no(5).id).present?
- TicketSparePart
.row
  .col-md-3
    Ticket Type:
    %strong= ticket.ticket_type.name
  .col-md-3
    Warranty type:
    %strong= ticket.warranty_type.name
  .col-md-3
    Customer chargeable:
    -if ticket.cus_chargeable == true
      %strong Yes
    -else
      %strong No
  .col-md-3
    Repair type:
    %strong= ticket.ticket_repair_type.name
.row
  .col-md-12
    .form-group
      %label Activity
      %select{:class => "activity_id", :id => "template_caller"}
        - unless present_of_start_ticket_action
          %option{:value => "start_action"} Start Action
        - unless ticket.job_finished
          %option{:value => "re_assign"} Re Assign
        - if present_of_start_ticket_action and not ticket.job_finished
          %option{:value => "change_ticket_cus_warranty"} Change Ticket Warranty Type or Customer Chargeable
        - if present_of_start_ticket_action and not ticket.job_finished
          %option{:value => "change_ticket_repair_type"} Change Ticket Repair Type
        - if present_of_start_ticket_action and not ticket.status_hold
          %option{:value => "hold"} Hold
        - if present_of_start_ticket_action and ticket.status_hold
          %option{:value => "un_hold"} Un Hold
        - if present_of_start_ticket_action and not ticket.job_finished
          %option{:value => "edit_serial_no_request"} Edit Serial No Request
        - if present_of_start_ticket_action and ticket.ticket_type.code == 'OS'  and not ticket.job_finished
          %option{:value => "create_fsr"} Create FSR
        - if present_of_start_ticket_action and ticket.ticket_fsrs.find_by_approved(:false).present? and not ticket.job_finished
          %option{:value => "edit_fsr"} Edit FSR
        - if present_of_start_ticket_action and not ticket.job_finished
          %option{:value => "terminate_job"} Terminate Job
        - if present_of_start_ticket_action
          %option{:value => "action_taken"} Action Taken
        - if present_of_start_ticket_action and not ticket.job_finished and  ticket.ticket_repair_type.code == "IN" and (ticket.ticket_type.code == 'OS' ? ticket.ticket_fsrs.any? : true)
          %option{:value => "request_spare_part"} Request Spare Part
        - if ticket.ticket_spare_parts.present?
          %option{:value => "request_on_loan_spare_part"} Request On Loan Spare Part
        - if present_of_start_ticket_action
          %option{:value => "hp_case_id"} HP Case Action
        - if present_of_start_ticket_action and not ticket.job_finished
          %option{:value => "resolved_job"} Resolve the Job

        - if present_of_start_ticket_action and ticket.ticket_repair_type.code == "EX" and not (ticket.ticket_deliver_units.any?{|d| !d.received} or ticket.job_finished) and ticket.ticket_estimations.any?{|ts| (ts.status_id == EstimationStatus.find_by_code("EST").id) and (ts.cust_approved or ( !ts.cust_approval_required and ts.approved ) or ( !ts.cust_approval_required and !ts.approval_required ))}
          %option{:value => "deliver_unit"} Deliver Unit

        - if present_of_start_ticket_action and ticket.cus_chargeable and ticket.ticket_repair_type.code=="EX" and not ticket.job_finished
          %option{:value => "job_estimation_request"} Job Estimate Request (External)

        - if present_of_start_ticket_action and ticket.ticket_repair_type.code=="EX" and ticket.ticket_deliver_units.any?{|d| !d.received} and not ticket.job_finished
          %option{:value => "recieve_unit"} Receive Unit

.form-group
  #resolution_templates
    =render "tickets/tickets_pack/resolution/start_action", ticket: ticket unless ticket.user_ticket_actions.find_by_action_id(TaskAction.find_by_action_no(5).id).present?