- uri = URI(request.url)

- from_template = (uri.path == "/tickets/call_mf_order_template" ? "/tickets/order_manufacture_parts" : uri.path == "/tickets/call_resolution_template" ? "/tickets/resolution" : "")

- uri_path = ["/tickets/resolution", "/tickets/order_manufacture_parts"].include?(uri.path) ? uri.path : from_template.present? ? from_template : "/#{params[:controller].split('/').last}/#{params[:action]}"

%fieldset
  %legend Hold
  = simple_form_for ticket, url: update_hold_ticket_path(ticket), method: :post do |f|
    = hidden_field_tag :engineer_id, params[:engineer_id]

    = hidden_field_tag :process_id, Rails.cache.fetch([uri.path, params[:task_id]])[:process_id]
    = hidden_field_tag :task_id, Rails.cache.fetch([uri.path, params[:task_id]])[:task_id]
    = hidden_field_tag :owner, Rails.cache.fetch([uri.path, params[:task_id]])[:owner]
    - Rails.cache.fetch([uri.path, params[:task_id]])[:bpm_input_variables].each do |bpm_input_variable|
      = hidden_field_tag bpm_input_variable[0], bpm_input_variable[1]

    = f.simple_fields_for "user_ticket_actions_attributes[]", @user_ticket_action do |uf|
      = uf.input :action_id, as: :hidden, input_html: {value: TaskAction.find_by_action_no(8).id}
      = uf.input :action_by, as: :hidden, input_html: {value: current_user.id}
      = uf.input :re_open_index, as: :hidden, input_html: {value: ticket.re_open_count}
      = uf.input :action_engineer_id, as: :hidden, input_html: {value: session[:engineer_id] }

      = uf.simple_fields_for :act_hold do |rf|
        / = rf.association :reason, collection: Reason.where(hold: true), label_method: :reason, value_method: :id
        = rf.association :reason, collection: Reason.where(hold: true, active: true).uniq{|e| e.id}.map{|e| [(e.sla_pause == true ? "#{e.reason} ( SLA pause )" : e.reason), e.id]}, include_blank: false
        / = rf.input :un_hold_action_id, as: :hidden, input_html: {value: 100}
    = f.input :status_hold, as: :hidden, input_html: {value: true}
    = f.input :remarks, input_html: {value: nil}
    = simple_format ticket.remarks

    = f.submit "Save", class: "btn btn-success"