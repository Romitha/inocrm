%fieldset
  %legend Resolve the Job (Finish)
  #error_msg
  = simple_form_for ticket, url: update_resolved_job_ticket_path(ticket), method: :post, html: {id: "job_finish_form"} do |f|

    = hidden_field_tag :process_id, Rails.cache.fetch(["/tickets/resolution", params[:task_id]])[:process_id]
    = hidden_field_tag :task_id, Rails.cache.fetch(["/tickets/resolution", params[:task_id]])[:task_id]
    = hidden_field_tag :owner, Rails.cache.fetch(["/tickets/resolution", params[:task_id]])[:owner]
    - Rails.cache.fetch(["/tickets/resolution", params[:task_id]])[:bpm_input_variables].each do |bpm_input_variable|
      = hidden_field_tag bpm_input_variable[0], bpm_input_variable[1]


    = f.simple_fields_for "user_ticket_actions_attributes[]", @user_ticket_action do |uf|
      = uf.input :action_id, as: :hidden, input_html: {value: TaskAction.find_by_action_no(21).id}
      = uf.input :action_by, as: :hidden, input_html: {value: current_user.id}
      = uf.input :re_open_index, as: :hidden, input_html: {value: ticket.re_open_count}
      = uf.input :action_engineer_id, as: :hidden, input_html: {value: Rails.cache.fetch(["/tickets/resolution", params[:task_id]])[:bpm_input_variables].detect{ |e| e.first == "engineer_id" }.second }

      = uf.simple_fields_for :ticket_finish_job do |rf|
        = rf.input :resolution, required: true, input_html: {id: "resolution_text"}
    = f.input :remarks, input_html: {value: nil}
    = simple_format ticket.remarks

    = f.input :resolution_summary, required: true, input_html: {id: "resolution_summary_text"}

    = label_tag "Request to close the Ticket"
    = f.check_box :ticket_close_approval_requested, checked: !(ticket.ticket_fsrs.any? or ticket.ticket_spare_parts.any? or ticket.ticket_on_loan_spare_parts.any?), disabled: !(ticket.ticket_fsrs.any? or ticket.ticket_spare_parts.any? or ticket.ticket_on_loan_spare_parts.any?)

    = f.submit "Save", class: "btn btn-success", id: "job_finish_submit"