%fieldset
  %legend Request Spare Part
  = simple_nested_form_for @ticket_spare_part, url: update_request_spare_part_ticket_path(ticket), method: :post, html: {class: "validate_form"} do |f|

    = hidden_field_tag :process_id, Rails.cache.fetch(["/tickets/resolution", params[:task_id]])[:process_id]
    = hidden_field_tag :task_id, Rails.cache.fetch(["/tickets/resolution", params[:task_id]])[:task_id]
    = hidden_field_tag :owner, Rails.cache.fetch(["/tickets/resolution", params[:task_id]])[:owner]
    - Rails.cache.fetch(["/tickets/resolution", params[:task_id]])[:bpm_input_variables].each do |bpm_input_variable|
      = hidden_field_tag bpm_input_variable[0], bpm_input_variable[1]


    = f.input :ticket_id, as: :hidden
    = f.input :status_action_id, as: :hidden, input_html: {value: SparePartStatusAction.find_by_code("RQT").id}
    = f.input :status_use_id, as: :hidden, input_html: {value: SparePartStatusUse.find_by_code("NAP").id}
    = hidden_field_tag :store_id
    = hidden_field_tag :mst_store_id
    = hidden_field_tag :inv_product_id
    = hidden_field_tag :mst_inv_product_id

    - if ticket.ticket_type.code == 'OS'
      .row
        .col-md-3
          - ticket_workfow = ticket.ticket_workflow_processes.where process_id: Rails.cache.fetch(["/tickets/resolution", params[:task_id]])[:process_id]
          - job_engineers =  ticket.ticket_engineers.where(workflow_process_id: ticket_workfow.first.try(:id))

          = f.association :ticket_fsr, collection: ticket.ticket_fsrs.where(engineer_id: job_engineers.map { |eng| eng.id  }).map{|tf| [tf.ticket_fsr_no.to_s.rjust(6, INOCRM_CONFIG["fsr_no_format"]), tf.id]}, wrapper_html: {class: "col-md-12"}, label: "Ticket FSR", required: true
    .row
      .col-md-3
        = f.input :spare_part_no, wrapper_html: {class: "col-md-12"}, required: true, placeholder: "Part Number"

      .col-md-3
        = f.input :spare_part_description, wrapper_html: {class: "col-md-12"}, label: "Part Description", input_html: {class: "typeahead", autocomplete: "off", spellcheck: "false"}, placeholder: "Part Description", required: true
        %div.col-md-3{class: "#{('hide' if @ticket_spare_part.ticket.cus_chargeable or @ticket_spare_part.ticket.warranty_type.code == 'NW' or @ticket_spare_part.ticket.warranty_type.code == 'UW')}"}
      .not_non_stock
        .col-md-2
          = f.input :faulty_serial_no, wrapper_html: {class: "col-md-12"}, label: "Faulty Serial No"
        .col-md-2
          = f.input :faulty_ct_no, wrapper_html: {class: "col-md-12 "}, label: "Fault CT No"
        .col-md-2
          %button.btn.btn-primary.btn-xs{onclick: "Tickets.check_previous(this); return false;", type: "button", data: {"ticket-id" => ticket.id}} Check Previous Detail

    .row
      .col-md-2
        - chargeable_contract = @ticket_spare_part.ticket.ticket_contract.contract_type.chargeable if @ticket_spare_part.ticket.ticket_contract.present?
        = f.input :cus_chargeable_part, as: :boolean, checked_value: true, unchecked_value: false, wrapper: :append, wrapper_html: {class: "col-md-12 #{'hide' if(@ticket_spare_part.ticket.cus_chargeable or @ticket_spare_part.ticket.warranty_type.code == 'NW' or @ticket_spare_part.ticket.warranty_type.code == 'UW' or chargeable_contract)}"}, input_html: {checked: (true if(@ticket_spare_part.ticket.cus_chargeable or @ticket_spare_part.ticket.warranty_type.code == "NW" or @ticket_spare_part.ticket.warranty_type.code == "UW" or chargeable_contract))}
        - if @ticket_spare_part.ticket.cus_chargeable or @ticket_spare_part.ticket.warranty_type.code == 'NW' or @ticket_spare_part.ticket.warranty_type.code == 'UW' or chargeable_contract
          .col-md-12
            = label_tag "Customer chargeable"
            = check_box_tag :cus_chargeable_part, nil, true, disabled: true

      .col-md-6
        .request_part_request_from
          = f.input :request_from, as: :radio_buttons, collection: {"Manufacture" => "M", "Store" => "S", "Non Stock" => "NS"}, input_html: {class: "request_from_radio_buttons"}, disabled: ("M" if ["NW", "UW"].include?(@ticket_spare_part.ticket.warranty_type.code)), checked: ("S" if @ticket_spare_part.ticket.cus_chargeable or ["NW", "UW"].include?(@ticket_spare_part.ticket.warranty_type.code))
        .spare_part_select
          = link_to "select", inventory_in_modal_inventories_path(select_frame: "request_from"), id: "request_from_select", remote: true, class: "hide"

        .request_from
        .requested_quantity_manufacture_wrapper.col-md-4.hide
          = label_tag "Required Quantity"
          = text_field_tag "requested_quantity", 1, class: "form-control", disabled: true, readonly: true

      .col-md-4.not_non_stock
        .part.hide
          = label_tag "Part of main product"
          %br
          = check_box_tag :part_of_main_product
          = link_to "select", inventory_in_modal_inventories_path(select_frame: "main_product"), id: "part_of_main_product_select", remote: true, class: "hide"

        .main_product

    %br
    .row
      .col-md-6{style: "margin-top:9px;"}
        = f.input :note, label: "Note (Spare part)",wrapper_html: {class: "col-md-12"}
      .col-md-6
        = f.simple_fields_for :ticket do |ft|
          = ft.input :remarks, label: "Remarks (Ticket)", input_html: {value: nil},wrapper_html: {class: "col-md-12 padding0"}
          = simple_format ft.object.remarks
    .row.col-md-12
      .col-md-3
        = f.submit "Save", class: "btn btn-success"

#inventory_modal.modal.fade{tabindex: -1, role: "dialog", "aria-labelledby" => "inventory_modal", "aria-hidden" => true}
  .modal-dialog.modal-lg
    .modal-content

#ticket1_modal.modal.fade{tabindex: -1, role: "dialog", "aria-labelledby" => "ticket1_modal", "aria-hidden" => true}
  .modal-dialog.modal-lg
    .modal-content
