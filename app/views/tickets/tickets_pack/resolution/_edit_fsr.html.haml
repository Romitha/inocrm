%fieldset
  %legend Edit FSR
  - ticket_workfows = ticket.ticket_workflow_processes.where process_id: params["process_id"]
  - ticket_engineers = ticket.ticket_engineers.where(workflow_process_id: ticket_workfows.first.try(:id))

  / = select_tag "select_fsr", options_from_collection_for_select(@select_fsrs, "id", "id")
  = select_tag "select_fsr", options_for_select(ticket.ticket_fsrs.where(approved: false, engineer_id: ticket_engineers.ids ).map { |fsr| [ fsr.ticket_fsr_no.to_s.rjust(6, INOCRM_CONFIG["fsr_no_format"]) , fsr.id] }, params[:select_fsr_id]), {:prompt => "- Select FSR No -", class: "form-control"}
  - if @display_form
    = simple_nested_form_for @ticket_fsr, url: update_edit_fsr_ticket_path(ticket), method: :post do |fsr|
      / = fsr.input :ticket_id, as: :hidden
      = hidden_field_tag :ticket_fsr_id, @ticket_fsr.id

      .row
        .col-md-3
          .row
            .col-md-12
              %strong FSR No:
              = fsr.object.ticket_fsr_no.to_s.rjust(6, INOCRM_CONFIG["fsr_no_format"])
            .col-md-12
              .row
                .col-md-12
                  = fsr.input :form_no
            .col-md-12
              = fsr.input :completion_level, as: :radio_buttons, label: false, collection: {"Full" => "F","Partial" => "P"}, wrapper: :append
            .col-md-12
              = fsr.input :office_out_at, as: :string, input_html: {class: "datetimepicker", id: "out_at", onblur: "Tickets.edit_fsr_travel_hours(this); return false;"}
              %strong Out At:
              = @ticket_fsr.office_out_at.try :strftime, "%d %b, %Y %H:%M"
              %hr
            .col-md-12
              = fsr.input :work_started_at, as: :string, input_html: {class: "datetimepicker", id: "work_started", onblur: "Tickets.edit_fsr_travel_hours(this); return false;", data: {mindate: @ticket.logged_at.strftime("%b %d, %Y %H:%M")}}, disabled: true
              %strong Started at:
              = @ticket_fsr.work_started_at.try :strftime, "%d %b, %Y %H:%M"
              %hr
            .col-md-12
              = fsr.input :work_finished_at, as: :string, input_html: {class: "datetimepicker", id: "work_finished", onblur: "Tickets.edit_fsr_travel_hours(this); return false;"}, disabled: true
              %strong Finished at:
              = @ticket_fsr.work_finished_at.try :strftime, "%d %b, %Y %H:%M"
              %hr
            .col-md-12
              = fsr.input :office_in_at, as: :string, input_html: {class: "datetimepicker", id: "in_at", onblur: "Tickets.edit_fsr_travel_hours(this); return false;"}, disabled: true
              %strong In At:
              = @ticket_fsr.office_in_at.try :strftime, "%d %b, %Y %H:%M"
              %hr

        .col-md-3
          .row
            .col-md-12
              %strong #{@ticket_fsr.ticket_engineer.user.full_name}
              = fsr.input :hours_worked, input_html: {min: "0", class: "only_float", id: "worked_hours", onblur: "Tickets.set_max_support_eng_worked_hours(this);"}, label: "Hours worked (in hours)"
            .col-md-12
              = fsr.input :down_time, input_html: {min: "0", class: "only_float"}, label: "Down time (in hours)"
            .col-md-12
              = fsr.input :travel_hours, input_html: {min: "0", class: "only_float", id: "travelled_hours"}, label: "Travel hours (in hours)"
            .col-md-12
              = fsr.input :engineer_time_travel, input_html: {min: "0", class: "only_float"}, label: "Engineer time travel (in hours)"
            .col-md-12
              = fsr.input :engineer_time_on_site, input_html: {min: "0", class: "only_float"}, label: "Engineer time on site (in hours)"

        .col-md-6
          .col-md-6
            = fsr.input :other_mileage, input_html: {min: "0", class: "only_float"}, label: "Other Charges Mileage"
          .col-md-6
            = fsr.input :other_repairs, input_html: {min: "0", class: "only_float"}, label: "Other Charges Repaires"
          .col-md-12
            = fsr.input :resolution, input_html: {value: nil}
            = simple_format @ticket_fsr.resolution
          .col-md-12
            = fsr.input :remarks, input_html: {value: nil}, label: "Remarks (FSR)"
            = simple_format fsr.object.remarks

      %hr
      .row
        .col-md-6
          %fieldset
            %legend Support Engineers
            = fsr.simple_fields_for :ticket_fsr_support_engineers do |a|
              = a.input :id, as: :hidden
              .col-md-6
                %strong Support Engineer:
                %br/
                = a.object.ticket_support_engineer.user.full_name
              .col-md-5
                = a.input :hours_worked, label: "Hours Worked (In Hours)", input_html: {class: "support_worked_hours", onchange: "Tickets.max_time_support(this); return false;"}

      = fsr.simple_fields_for :ticket do |t|
        .row
          .col-md-12
            = t.input :remarks, as: :text, label: "Remarks (Ticket)", input_html: {value: nil}
            = simple_format t.object.remarks

      .row
        .col-md-12
          = fsr.submit "Save", class: "btn btn-success btn-sm"
          = link_to "#", onclick: "Users.request_printer_application('fsr', '#{@ticket_fsr.id}', 'fsr_request_type', 'print_fsr_tag_value', 'print_fsr'); false;", id: "ticket_print", data: {disable_with: "Printing..."}, class: "btn btn-default" do
            = @ticket_fsr.print_count.to_i > 0 ? "Re-Print" : "Print"