- uri = URI(request.url)
- ticket = @ticket
- product = @product
- warranties = @warranties
- customer = ticket.customer
- histories = @histories
- join_tickets = @join_tickets
- pr_q_and_answers = @q_and_answers
- ge_q_and_as = @ge_q_and_answers

= render "tickets/tickets_pack/ticket_header", ticket: ticket, product: product

= tab_panel do
  = tab_nav_tab({class: "small_scale_margin-bottom2"}, ticket_info: {content: "Ticket info"}, estimate_job: {content: "Estimate external job", active_class: "active"})
  .tab-content
    = tab_content tabpointer: :ticket_info do
      = tab_panel do
        = render "tickets/tickets_pack/ticket_info", ticket: ticket, product: product, customer: customer, warranties: warranties, histories: histories, join_tickets: join_tickets, ge_q_and_as: ge_q_and_as, pr_q_and_as: pr_q_and_answers

    = tab_content tabpointer: :estimate_job, active_class: "active" do
      .row


        .col-md-12
          %strong Type of warranty: #{ticket.warranty_type.name}
        .col-md-12.head_estimated_price_class{style: "margin-top: 20px;"}
          = simple_nested_form_for ticket, url: update_estimate_job_inventories_path, method: :put do |f|
            = hidden_field_tag :ticket_id, ticket.id
            = hidden_field_tag :process_id, Rails.cache.fetch([uri.path, params[:task_id]])[:process_id]
            = hidden_field_tag :task_id, Rails.cache.fetch([uri.path, params[:task_id]])[:task_id]
            = hidden_field_tag :owner, Rails.cache.fetch([uri.path, params[:task_id]])[:owner]
            - Rails.cache.fetch([uri.path, params[:task_id]])[:bpm_input_variables].each do |bpm_input_variable|
              = hidden_field_tag bpm_input_variable[0], bpm_input_variable[1]

            = f.simple_fields_for :ticket_estimations do |t|
              = t.input :current_user_id, as: :hidden, input_html: {value: current_user.id}
              - if t.object.status_id == EstimationStatus.find_by_code("RQS").id and t.object.ticket_estimation_externals.present?
                = hidden_field_tag :ticket_estimation_id, t.object.id

                .estimate_extend_with_tax
                  = t.simple_fields_for :ticket_estimation_externals do |te|
                    .col-md-4
                      %strong Description:
                      = te.object.description
                    - ticket.cached_user_ticket_actions.select{|a| a.action_id == 22}.each do |ticket_action|
                      .col-md-4
                        %strong Delivered Date
                        = ticket_action.action_at.strftime INOCRM_CONFIG["short_date_format"]

                    %hr/
                    .row.head_estimated_price_class
                      = hidden_field_tag :ticket_estimation_external_id, te.object.id
                      .col-md-3
                        = te.association :organization, label: "Repaired by (Organization)", collection: Organization.suppliers

                      .col-md-2
                        = te.input :cost_price, label: "Cost Price (#{ticket.ticket_currency.code})", as: :string, input_html: {data: { initValue: te.object.cost_price.to_f }, min: 0, class: "value_class after_two_decimal", oninput: "Inventories.calculate_cost_price(this);"}
                      .col-md-2
                        = te.input :estimated_price, label: "Estimated Price (#{ticket.ticket_currency.code})", as: :string, input_html: {class: "estimation_value after_two_decimal", oninput: "Inventories.calculate_cost_price(this);", data: { initValue: te.object.estimated_price.to_f }}
                      .col-md-3
                        = te.input :warranty_period, input_html: {class: "after_two_decimal"}, label: "Warranty period (in months)"
                      .col-md-2
                        %strong Profit (%):
                        .append_profit_margin{ data: {estimate: te.object.estimated_price.to_f, cost: te.object.cost_price.to_f}}= (te.object.estimated_price.to_f/te.object.cost_price.to_f - 1)*100 if te.object.cost_price.to_f > 0

                    - if ticket.ticket_deliver_units.any?{|d| !d.received}
                      %strong.red
                        Unit Delivered to: #{ticket.ticket_deliver_units.select{|d| !d.received}.last.try(:organization).try(:name)}

                    .panel-group
                      .panel.panel-success
                        .panel-heading Taxes
                        .panel-body.tax_wrapper
                          = te.simple_fields_for :ticket_estimation_external_taxes do |ee|

                            .row.parent_class_set
                              .add_sign.col-md-3{style: "padding-top:2.5%;"}
                                = ee.link_to_remove class: "remove_c_t_v_link" do
                                  %span.glyphicon.glyphicon-remove-sign

                              .col-md-3
                                = label_tag "Tax"
                                %br/
                                = ee.select :tax_id, Tax.where(active: true).map{|p| ["#{p.tax} (#{p.tax_rates.find_by_active(true).try(:rate).to_f}%)", p.id, {"data-default-amount" => p.tax_rates.find_by_active(true).try(:rate).to_f}]}, {include_blank: true}, {class: "payment_item_select tax_rate_calculation", onchange: "Inventories.payment_amount_select(this); return false;"}

                              .col-md-4
                                = ee.input :estimated_tax_amount, label: "Estimated tax amount (#{ticket.ticket_currency.code})", as: :string, input_html: {class: "estimated_tax_amount_class", oninput: "Inventories.add_tax_value(this)", data: {initvalue: ee.object.estimated_tax_amount.to_f }}
                              .col-md-4
                                = ee.input :tax_rate,  as: :hidden, input_html: {id: "tax_rate_hidden_field_id", class: "payment_item_value"}

                          = te.link_to_add :ticket_estimation_external_taxes, class: "small_scale_padding-right2" do
                            %span.glyphicon.glyphicon-plus-sign
                            Tax

                .row
                  .col-md-12
                    .panel-group
                      .panel.panel-info
                        .panel-heading Estimation additionals
                        .panel-body
                          = t.simple_fields_for :ticket_estimation_additionals do |ta|
                            = ta.input :ticket_id, as: :hidden, input_html: {value: ticket.id}
                            .row.estimate_extend_with_tax
                              .col-md-1.small_scale_padding-top2
                                = ta.link_to_remove class: "remove_c_t_v_link", onclick: "Inventories.remove_cost_estimation(this); return false;" do
                                  %span.glyphicon.glyphicon-remove-sign
                              .col-md-3
                                = label_tag "Additional charge"
                                %br/
                                = ta.select :additional_charge_id, AdditionalCharge.where(active: true).map{|p| [p.additional_charge, p.id, {"data-default-amount" => p.default_cost_price.to_f, "data-estimation-amount" => p.default_estimated_price.to_f}]}, {include_blank: true, required: true}, {class: "payment_item_select form-control", onchange: "Inventories.payment_amount_select(this); return false;", required: true}
                              .col-md-3
                                = ta.input :cost_price, label: "Cost Price (#{ticket.ticket_currency.code})", as: :string, input_html: {data: { initValue: ta.object.cost_price.to_f }, min: 0, class: "value_class payment_item_value only_float", oninput: "Inventories.calculate_cost_price(this);"}

                              .col-md-3
                                = ta.input :estimated_price, label: "Estimated Price (#{ticket.ticket_currency.code})", as: :string, input_html: {min: 0, class: "estimation_value estimated_value est_add_estimated_price only_float", oninput: "Inventories.calculate_cost_price(this);", data: {initvalue: ta.object.estimated_price.to_f }}
                              .col-md-2
                                %strong
                                  Profit(%):
                                  .append_profit_margin{ data: {estimate: ta.object.estimated_price.to_f, cost: ta.object.cost_price.to_f}}= (ta.object.estimated_price.to_f/ta.object.cost_price.to_f - 1)*100 if ta.object.cost_price.to_f > 0

                              .col-md-12
                                .panel-group
                                  .panel.panel-success
                                    .panel-heading Additional taxes
                                    .panel-body
                                      = ta.simple_fields_for :ticket_estimation_additional_taxes do |e|

                                        .row.parent_class_set
                                          .add_sign.col-md-3{style: "padding-top:2.5%;"}
                                            = e.link_to_remove class: "remove_c_t_v_link remove_tax", onclick: "Inventories.remove_tax_from_estimation(this)" do
                                              %span.glyphicon.glyphicon-remove-sign

                                          .col-md-3
                                            = label_tag "Tax"
                                            %br/
                                            = e.select :tax_id, Tax.where(active: true).map{|p| ["#{p.tax} (#{p.tax_rates.find_by_active(true).try(:rate).to_f}%)", p.id, {"data-default-amount" => p.tax_rates.find_by_active(true).try(:rate).to_f}]}, {include_blank: true}, {class: "payment_item_select tax_rate_calculation", onchange: "Inventories.payment_amount_select(this); return false;"}
                                          .col-md-3
                                            = e.input :estimated_tax_amount, label: "Estimated tax amount (#{ticket.ticket_currency.code})",as: :string, input_html: {min: 0, class: "estimated_tax_amount_class only_float", oninput: "Inventories.add_tax_value(this)", data: {initvalue: e.object.estimated_tax_amount.to_f}}
                                          .col-md-3
                                            = e.input :tax_rate,  as: :hidden, input_html: { class: "payment_item_value"}

                                      = ta.link_to_add :ticket_estimation_additional_taxes, class: "small_scale_padding-right2" do
                                        %span.glyphicon.glyphicon-plus-sign
                                        Tax

                          = t.link_to_add :ticket_estimation_additionals do
                            %span.glyphicon.glyphicon-plus-sign
                            Estimation additionals
                .row
                  .col-md-3
                    = t.input :id, as: :hidden
                    = t.input :advance_payment_amount, label: "Advance Payment Amount (#{ticket.ticket_currency.code})", as: :string, input_html: {class: "only_float", oninput: "Inventories.limit_payment_required(this); return false;"}, label: "Required advance payment amount"

                  - total_cost = [t.object.ticket_estimation_parts.sum(:cost_price), t.object.ticket_estimation_additionals.sum(:cost_price), t.object.ticket_estimation_externals.sum(:cost_price)].sum

                  - total_estimation = [t.object.ticket_estimation_parts.sum(:estimated_price), t.object.ticket_estimation_additionals.sum(:estimated_price), t.object.ticket_estimation_externals.sum(:estimated_price)].sum

                  - total_tax = [ t.object.ticket_estimation_parts.to_a.sum{ |p| p.ticket_estimation_part_taxes.sum(:estimated_tax_amount)}, t.object.ticket_estimation_additionals.to_a.sum{ |p| p.ticket_estimation_additional_taxes.sum(:estimated_tax_amount)}, t.object.ticket_estimation_externals.to_a.sum{ |p| p.ticket_estimation_external_taxes.sum(:estimated_tax_amount)}].sum

                  .col-md-3.pull-right
                    %table.table.table-striped
                      %tbody{class: "text-right"}
                        %tr
                          %td Total cost
                          %td#total_cost_price= number_with_precision total_cost, precision: 2
                        %tr
                          %td Total estimation
                          %td#total_estimated_price.for_payment_limit= number_with_precision total_estimation, precision: 2
                        %tr
                          %td Total tax
                          %td#total_tax_price.for_payment_limit{ data: { initValue: "#{total_tax}" } }= number_with_precision total_tax, precision: 2
                        %tr
                          %td Total amount with tax
                          %td#total_amount_with_tax= number_with_precision (total_estimation+total_tax), precision: 2
                        %tr
                          %th{class: "text-right"}
                            Total profit
                            %span (
                            %span#db_margin{style: "font-weight:bold;"}= CompanyConfig.first.try(:sup_external_job_profit_margin).to_f
                            %span %)
                          %th{class: "text-right"}
                            %span#total_margin_price{class: "#{'red' if CompanyConfig.first.try(:sup_external_job_profit_margin).to_f > (total_estimation / total_cost - 1)*100 }"}= (total_estimation / total_cost - 1)*100
                            %span %

                  .col-md-12
                    = t.input :note

                = label_tag "Estimation complete"
                = check_box_tag :estimation_completed

                = f.submit "Save", class: "btn btn-success", data: {disable_with: "Please wait..."}