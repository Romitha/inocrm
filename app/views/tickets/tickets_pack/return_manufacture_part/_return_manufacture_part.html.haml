- uri = URI(request.url)
- request_spare_part_id = (params[:request_spare_part_id] or session[:request_spare_part_id])
- spare_part = TicketSparePart.find request_spare_part_id
- product = @product

%h3 Activity:
.row
  .col-md-4
    %dl.dl-horizontal
      %dt
        Part Status:
      %dd
        = spare_part.spare_part_status_action.name
      %dt
        Spare Part No:
      %dd
        = spare_part.spare_part_no
      %dt
        Status:
      %dd
        = spare_part.spare_part_status_use.name
      %dt
        Product Brand:
      %dd
        = product.product_brand.name

  .col-md-4
    %dl.dl-horizontal
      %dt
        Part Description:
      %dd
        = spare_part.spare_part_description
      %dt
        Un Used Return Reason :
      %dd
        = spare_part.spare_part_description
      %dt
        Received Spare Part  No:
      %dd
        = spare_part.received_spare_part_no
      %dt
        Part Event No:
      %dd
        = spare_part.ticket_spare_part_manufacture.try(:event_no)
  .col-md-4
    %dl.dl-horizontal
      %dt
        Part Serial No:
      %dd
        = spare_part.spare_part_description
      %dt
        Return Part Serial No:
      %dd
        = spare_part.return_part_serial_no
      %dt
        Part CT No:
      %dd
        
      %dt
        Return CT No:
      %dd
        = spare_part.return_part_ct_no

.row
  .col-md-12
    = simple_nested_form_for ticket_spare_part, url: update_return_manufacture_part_tickets_path, method: :post, html: {class: "validate_form"} do |f|
      = f.input :id, as: :hidden
      .accept_returned_part
        = f.input :returned_part_accepted, as: :radio_buttons, collection: {"Accept Returned Part" => true, "Reject Return Part" => false}, label:false, wrapper: :append, checked: true

      = hidden_field_tag :process_id, Rails.cache.fetch([uri.path, params[:task_id]])[:process_id]
      = hidden_field_tag :task_id, Rails.cache.fetch([uri.path, params[:task_id]])[:task_id]
      = hidden_field_tag :owner, Rails.cache.fetch([uri.path, params[:task_id]])[:owner]
      - Rails.cache.fetch([uri.path, params[:task_id]])[:bpm_input_variables].each do |bpm_input_variable|
        = hidden_field_tag bpm_input_variable[0], bpm_input_variable[1]

      #request_spare_parts
        %fieldset
          %legend.font1 Reject Return Part
          #request_spare_parts
            = f.simple_fields_for :request_spare_parts do |rp|
              - if rp.object.new_record?
                = rp.association :reject_return_part_reason, label_method: :reason, value_method: :id, input_html: {name: "manual_reject_return_part_reason_id"}
      #ticket_spare_part_manufacture
        %fieldset
          %legend.font1 Accept and Ready to Bundle
          = f.simple_fields_for :ticket_spare_part_manufacture do |rm|
            = rm.input :event_closed, wrapper: :append, input_html: {checked: true}
            = rm.input :ready_to_bundle, wrapper: :append, input_html: {checked: true}, label: "Ready to bundle (Needs return to manufacturer)"
            = rm.input :payment_expected_manufacture, label: "Payment Expected from Manufacturer (#{product.product_brand.currency.try(:code)}):", input_html: {class: "input_toggler"}, required: true
            = rm.input :po_required, wrapper: :append, label: "PO Required:"

      = f.input :note, input_html: {value: nil}, required: true
      = simple_format ticket_spare_part.note
      = f.submit "Save", class: "btn btn-success"#, onclick: "Tickets.presence_validater(this, {presence: ['#ticket_spare_part_note']}); return false;"
