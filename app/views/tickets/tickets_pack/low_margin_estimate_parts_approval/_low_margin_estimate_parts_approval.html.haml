- uri = URI(request.url)
= simple_nested_form_for estimation, url: update_low_margin_estimate_parts_approval_inventories_path, method: :post do |f|
  - estimate_currency = f.object.currency.code
  = hidden_field_tag :process_id, Rails.cache.fetch([uri.path, params[:task_id]])[:process_id]
  = hidden_field_tag :task_id, Rails.cache.fetch([uri.path, params[:task_id]])[:task_id]
  = hidden_field_tag :owner, Rails.cache.fetch([uri.path, params[:task_id]])[:owner]
  - Rails.cache.fetch([uri.path, params[:task_id]])[:bpm_input_variables].each do |bpm_input_variable|
    = hidden_field_tag bpm_input_variable[0], bpm_input_variable[1]

  = f.input :current_user_id, as: :hidden, input_html: {value: current_user.id}
  = f.simple_fields_for :ticket_estimation_parts do |t|
    %fieldset
      %legend Part No #{t.object.ticket_spare_part.try(:spare_part_no)} (#{t.object.ticket_spare_part.ticket_spare_part_store ? 'Store' : t.object.ticket_spare_part.ticket_spare_part_manufacture.present? ? 'Manufacture' : t.object.ticket_spare_part.ticket_spare_part_non_stock.present? ? 'Non Stock' : ''})

      .row
        - unless t.object.ticket_spare_part.ticket_spare_part_manufacture.present?
          .col-md-3
            %strong Supplier:
            = t.object.try(:supplier).try(:name)
        .col-md-3
          %strong Part No :
          #{t.object.ticket_spare_part.try(:spare_part_no)}
        .col-md-3
          %strong Part Description :
          #{t.object.ticket_spare_part.try(:spare_part_description)}
        .col-md-3
          %strong Warranty Period :
          #{t.object.try(:warranty_period)}

        - unless t.object.ticket_spare_part.ticket_spare_part_non_stock.present?
          .col-md-3
            %strong Requested Qnty:
            = t.object.ticket_spare_part.ticket_spare_part_store.present? ? t.object.ticket_spare_part.ticket_spare_part_store.requested_quantity : t.object.ticket_spare_part.ticket_spare_part_manufacture.present? ? t.object.ticket_spare_part.ticket_spare_part_manufacture.requested_quantity : ""
      %hr
      .row
        - part_store_or_non_stock = t.object.ticket_spare_part.ticket_spare_part_store or t.object.ticket_spare_part.ticket_spare_part_non_stock
        - if part_store_or_non_stock.present?
          .col-md-5
            %h4 Requested part
            .request_from
              %dl.dl-horizontal
                - if part_store_or_non_stock.is_a? TicketSparePartStore
                  %dt Store
                  %dd
                    = part_store_or_non_stock.store.try(:name)
                %dt Item Code
                %dd
                  = part_store_or_non_stock.inventory_product.try(:serial_no)
                %dt Item Description
                %dd
                  = part_store_or_non_stock.inventory_product.try(:description)
                %dt Model No
                %dd
                  = part_store_or_non_stock.inventory_product.try(:model_no)
                %dt Product No
                %dd
                  = part_store_or_non_stock.inventory_product.try(:product_no)
                %dt Part No
                %dd
                  = part_store_or_non_stock.inventory_product.try(:spare_part_no)
                - if part_store_or_non_stock.is_a? TicketSparePartStore
                  %dt Available Qnty
                  %dd
                    = part_store_or_non_stock.try(:inventory_product).try(:inventories).find_by_store_id(t.object.ticket_spare_part.ticket_spare_part_store.store_id).try(:available_quantity)

          .col-md-6
            #paginate_grns
              %table.table
                %thead
                  %tr
                    %th No
                    %th Grn no
                    %th Date Purchased
                    %th Price
                %tbody
                  - if part_store_or_non_stock.inventory_product
                    - part_store_or_non_stock.inventory_product.try(:grn_items).each_with_index do |grn_item, index|
                      %tr
                        %td= index+1
                        %td= grn_item.grn.grn_no
                        %td= grn_item.grn.created_at.try(:strftime, "%d-%m-%Y")
                        %td
                          = number_with_precision grn_item.unit_cost, precision: 2

      - unless t.object.ticket_spare_part.ticket_spare_part_manufacture.present?
        %hr
        .row.estimate_extend_with_tax
          .col-md-2
            %strong Cost Prices (#{t.object.ticket.ticket_currency.code}):
            %span.append_cost_price
              = number_with_precision t.object.cost_price, precision: 2
          .col-md-3
            %strong Requested Est. Price (#{t.object.ticket.ticket_currency.code}):
            %span= number_with_precision t.object.estimated_price, precision: 2
            .append_estimated_price.hide= number_with_precision t.object.estimated_price, precision: 2
          .col-md-2
            %span{style: "font-weight:bold;"} Profit :
            %span.append_profit_margin{style: "font-weight:bold;font-size:125%;"}
            %span (
            %span#db_margin{style: "font-weight:bold;"}= CompanyConfig.first.try(:sup_internal_part_profit_margin).to_f
            %span )
            %span %
          .col-md-5
            = t.input :approved_estimated_price, label: "Approved estimation price (#{ticket.ticket_currency.code})", input_html: {min: "0", class: "estimation_value only_float", oninput: "Inventories.calculate_cost_price(this);", value: t.object.estimated_price}, wrapper_html: {class: "inline-input"}

          .col-md-12
            %hr
            .panel-group
              .panel.panel-success
                .panel-heading Additional taxes
                .panel-body
                  = t.simple_fields_for :ticket_estimation_part_taxes do |ee|
                    = ee.input :tax_rate,  as: :hidden, input_html: {id: "tax_rate_hidden_field_id", class: "payment_item_value"}

                    .row.parent_class_set

                      .col-md-4
                        = label_tag "Tax"
                        %br/
                        = ee.select :tax_id, Tax.all.map{|p| ["#{p.tax} (#{p.tax_rates.find_by_active(true).try(:rate).to_f}%)", p.id, {"data-default-amount" => p.tax_rates.find_by_active(true).try(:rate).to_f}]}, {include_blank: true}, {class: "payment_item_select tax_rate_calculation col-md-12", onchange: "Inventories.payment_amount_select(this); return false;"}

                      .col-md-3
                        %strong{style: "margin-bottom: 5px; display: inline-block;"} Estimated tax amount:
                        .panel.panel-success
                          .panel-body.small_scale_padding2
                            = number_with_precision ee.object.estimated_tax_amount, precision: 2

                      .col-md-4
                        = ee.input :approved_tax_amount, label: "Approved tax amount (#{ticket.ticket_currency.code})", as: :string, input_html: {class: "estimated_tax_amount_class"}
                      .add_sign.col-md-3{style: "padding-top:2.5%;"}
                        = ee.link_to_remove class: "remove_c_t_v_link" do
                          %span.glyphicon.glyphicon-remove-sign

                = t.link_to_add :ticket_estimation_part_taxes, class: "small_scale_padding-right2" do
                  %span.glyphicon.glyphicon-plus-sign
                  Add tax

  .row
    .col-md-12
      %fieldset
        %legend Estimation additionals

        = f.simple_fields_for :ticket_estimation_additionals do |ta|
          = ta.input :ticket_id, as: :hidden, input_html: {value: estimation.ticket.id}
          .col-md-12.head_estimated_price_class.estimate_extend_with_tax
            .row.estimate_extend_with_tax
              .col-md-3.col-xs-3.col-sm-3
                %strong{style: "margin-bottom: 5px; display: inline-block;"} Additional charge (#{ta.object.ticket.ticket_currency.code}):
                .panel.panel-success
                  .panel-body.small_scale_padding2
                    = ta.object.additional_charge.try(:additional_charge)
              .col-md-3.col-xs-3.col-sm-3

                %strong{style: "margin-bottom: 5px; display: inline-block;"} Cost price (#{number_with_precision estimate_currency, precision: 2}):
                .panel.panel-success
                  .panel-body.small_scale_padding2
                    = number_with_precision (ta.object.cost_price.to_f or 0), precision: 2
              .col-md-3.col-xs-3.col-sm-3
                %strong{style: "margin-bottom: 5px; display: inline-block;"} Estimated price (#{number_with_precision estimate_currency, precision: 2}):
                .panel.panel-success
                  .panel-body.small_scale_padding2
                    .est_estimated_amount= number_with_precision ta.object.estimated_price, precision: 2
              .col-md-3.col-xs-3.col-sm-3
                = ta.input :approved_estimated_price, as: :string, input_html: {class: "estimation_value only_float", oninput: "Inventories.calculate_cost_price(this);", value: ta.object.estimated_price }, label: "Approved estimated price (#{estimate_currency})"
                .append_estimated_price.hide
                  = number_with_precision (ta.object.estimated_price.to_f or 0), precision: 2

              .col-md-12
                .panel-group
                  .panel.panel-success
                    .panel-heading Taxes
                    .panel-body.tax_wrapper
                      = ta.simple_fields_for :ticket_estimation_additional_taxes do |e|
                        = e.input :tax_rate,  as: :hidden, input_html: { class: "payment_item_value"}

                        .row.parent_class_set

                          .col-md-4
                            = label_tag "Tax"
                            %br/
                            = e.select :tax_id, Tax.all.map{|p| ["#{p.tax} (#{p.tax_rates.find_by_active(true).try(:rate).to_f}%)", p.id, {"data-default-amount" => p.tax_rates.find_by_active(true).try(:rate).to_f}]}, {include_blank: true}, {class: "payment_item_select tax_rate_calculation col-md-12", onchange: "Inventories.payment_amount_select(this); return false;"}
                          .col-md-3
                            %strong{style: "margin-bottom: 5px; display: inline-block;"} Estimated tax amount:
                            .panel.panel-success
                              .panel-body.small_scale_padding2
                                = number_with_precision e.object.estimated_tax_amount, precision: 2
                          .col-md-4
                            = e.input :approved_tax_amount, as: :string, input_html: {class: "estimated_tax_amount_class", value: e.object.estimated_tax_amount}, label: "Approved tax amount (#{estimate_currency})"
                          .add_sign.col-md-3{style: "padding-top:2.5%;"}
                            = e.link_to_remove class: "remove_c_t_v_link" do
                              %span.glyphicon.glyphicon-remove-sign

                      = ta.link_to_add :ticket_estimation_additional_taxes, class: "small_scale_padding-right2" do
                        %span.glyphicon.glyphicon-plus-sign
                        Add tax
  .row
    .col-md-3
      = f.input :approved_adv_pmnt_amount, as: :string, input_html: {class: "only_float", oninput: "Inventories.limit_payment_required(this); return false;", value: f.object.advance_payment_amount}, label: "Approved advance payment amount (Estimated: #{estimate_currency} #{f.object.advance_payment_amount})"

    .col-md-3.col-md-offset-6
      %strong Total cost price (#{estimate_currency}):
      %span#total_cost_price
        = number_with_precision f.object.ticket_estimation_additionals.sum(:cost_price), precision: 2
      %br
      %strong Total appr. estimated price (#{number_with_precision estimate_currency, precision: 2}):
      %span#total_estimated_price.for_payment_limit
        = number_with_precision estimation.ticket_estimation_additionals.sum(:estimated_price), precision: 2
      %br
      %strong Total profit (%):
      %span#total_margin_price{style: "font-weight:bold;"}
      %span (
      %span#db_margin{style: "font-weight:bold;"}= CompanyConfig.first.try(:sup_external_job_profit_margin).to_f
      %span )

  .row
    .col-md-6
      = f.input :note, input_html: {value: nil}
      = simple_format @estimation.note

  .row
    .col-md-12
      = label_tag "Approval Complete"
      = check_box_tag :approval_complete_check, true, true
      = f.submit "Save", class: "btn btn-success btn-sm"