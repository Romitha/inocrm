- uri = URI(request.url)
= simple_nested_form_for estimation, url: update_low_margin_estimate_parts_approval_inventories_path, method: :post do |f|


  = hidden_field_tag :process_id, Rails.cache.fetch([uri.path, params[:task_id]])[:process_id]
  = hidden_field_tag :task_id, Rails.cache.fetch([uri.path, params[:task_id]])[:task_id]
  = hidden_field_tag :owner, Rails.cache.fetch([uri.path, params[:task_id]])[:owner]
  - Rails.cache.fetch([uri.path, params[:task_id]])[:bpm_input_variables].each do |bpm_input_variable|
    = hidden_field_tag bpm_input_variable[0], bpm_input_variable[1]

  = f.input :current_user_id, as: :hidden, input_html: {value: current_user.id}
  = f.simple_fields_for :ticket_estimation_parts do |t|
    %fieldset
      %legend Part No #{t.object.ticket_spare_part.try(:spare_part_no)} (#{t.object.ticket_spare_part.ticket_spare_part_store ? 'Store' : t.object.ticket_spare_part.ticket_spare_part_manufacture.present? ? 'Manufacture' : t.object.ticket_spare_part.ticket_spare_part_non_stock.present? ? 'Non Stock' : ''})

      .row
        - unless t.object.ticket_spare_part.ticket_spare_part_manufacture.present?
          .col-md-3
            %strong Supplier:
            = t.object.try(:supplier).try(:name)
        .col-md-3
          %strong Part No :
          #{t.object.ticket_spare_part.try(:spare_part_no)}
        .col-md-3
          %strong Part Description :
          #{t.object.ticket_spare_part.try(:spare_part_description)}
        .col-md-3
          %strong Warranty Period :
          #{t.object.try(:warranty_period)}
      - unless t.object.ticket_spare_part.ticket_spare_part_manufacture.present?
        %hr
        .row
          .col-md-2
            %strong Cost Prices :
            %span.low_margin_cost_price= t.object.try(:cost_price)
          .col-md-3
            %strong Requested Estimate Price :
            %span.low_margin_estimated_price #{t.object.try(:estimated_price)}
          .col-md-2
            %strong Profit :
            %span.low_margin_estimate_rate
            %span (
            %span#db_margin{style: "font-weight:bold;"}= CompanyConfig.first.try(:sup_internal_part_profit_margin).to_f
            %span )
            %span %
          .col-md-3
            = t.input :approved_estimated_price, label: "Approved estimated price", input_html: {min: "0",class: "low_margin_approved_estimated_price only_float", oninput: "Inventories.calculate_low_approved_price();"}, wrapper_html: {class: "inline-input"}
          .col-md-2
            %span{style: "font-weight:bold;"} Profit :
            %span.low_margin_approved_estimate_rate
            %span (
            %span#db_margin{style: "font-weight:bold;"}= CompanyConfig.first.try(:sup_internal_part_profit_margin).to_f
            %span )
            %span %

        .row
          .col-md-4.col-md-offset-4
            .below_margine_low_margin_estimate_rate
          .col-md-4
            .below_margine_low_margin_approved_estimate_rate

        %hr

      .row
        - if t.object.ticket_spare_part.ticket_spare_part_store.present?
          .col-md-5
            %h4 Requested part
            .request_from
              %dl.dl-horizontal
                %dt Store
                %dd
                  = t.object.ticket_spare_part.ticket_spare_part_store.store.try(:name)
                %dt Item Code
                %dd
                  = t.object.ticket_spare_part.ticket_spare_part_store.inventory_product.try(:serial_no)
                %dt Item Description
                %dd
                  = t.object.ticket_spare_part.ticket_spare_part_store.inventory_product.try(:description)
                %dt Model No
                %dd
                  = t.object.ticket_spare_part.ticket_spare_part_store.inventory_product.try(:model_no)
                %dt Product No
                %dd
                  = t.object.ticket_spare_part.ticket_spare_part_store.inventory_product.try(:product_no)
                %dt Part No
                %dd
                  = t.object.ticket_spare_part.ticket_spare_part_store.inventory_product.try(:spare_part_no)
                %dt Available Qnty
                %dd
                  = t.object.ticket_spare_part.ticket_spare_part_store.inventory_product.inventories.where(store_id: t.object.ticket_spare_part.ticket_spare_part_store.store_id).try(:sum, :available_quantity)
        .col-md-6
          - if t.object.ticket_spare_part.try(:ticket_spare_part_store).present?
            #paginate_grns
              = paginate grn_items, remote: true, method: :get, params: {controller: "tickets", action: "paginate_ticket_grn_items", per_page: 3}
              %table.table
                %thead
                  %tr
                    %th No
                    %th Grn no
                    %th Date Purchased
                    %th Price
                %tbody
                  - grn_items.each_with_index do |grn_item, index|
                    %tr
                      %td= index+1
                      %td= grn_item.grn.grn_no
                      %td= grn_item.grn.created_at.try(:strftime, "%d-%m-%Y")
                      %td
                        = grn_item.unit_cost
  = f.simple_fields_for :ticket_estimation_additionals do |a|
    .row
      .col-md-3
        %span{style: "font-weight:bold;"} Additional Charges :
        %span #{a.object.try(:additional_charge).try(:additional_charge)}
      .col-md-3
        %span{style: "font-weight:bold;"} Cost Price (#{estimation.currency.code}) :
        %span.add_low_margin_cost_price #{a.object.try(:cost_price)}
      .col-md-3
        %span{style: "font-weight:bold;"} Estimated Price (#{estimation.currency.code}) :
        %span.add_low_margin_estimated_price #{a.object.try(:estimated_price)}
      .col-md-3
        = a.input :approved_estimated_price, input_html: {min: "0",class: "add_low_margin_approved_estimated_price only_float", oninput: "Inventories.calculate_low_approved_price();"}

  .row
    .col-md-3.col-md-offset-3
      %span{style: "font-weight:bold;"} Total Cost (#{estimation.currency.code}) :
      %span.total_low_margin_cost
    .col-md-3
      %span{style: "font-weight:bold;"} Total Estimate (#{estimation.currency.code}) :
      %span.total_low_margin_estimate
    .col-md-3
      %span{style: "font-weight:bold;"} Total Approved Estimate (#{estimation.currency.code}) :
      %span.total_low_margin_app_estimate

  .row
    .col-md-3.col-md-offset-3
    .col-md-3
      %span{style: "font-weight:bold;"} Profit :
      %span.total_estimate_profit
      %span (
      %span#db_margin{style: "font-weight:bold;"}= CompanyConfig.first.try(:sup_internal_part_profit_margin).to_f
      %span )
      %span %
    .col-md-3
      %span{style: "font-weight:bold;"} Profit :
      %span.total_approved_estimate_profit
      %span (
      %span#db_margin{style: "font-weight:bold;"}= CompanyConfig.first.try(:sup_internal_part_profit_margin).to_f
      %span )
      %span %

  .row
    .col-md-3.col-md-offset-3
    .col-md-3
      .margine_below_total_estimate_profit
    .col-md-3
      .margine_below_total_approved_estimate_profit

  .row
    .col-md-3
      = f.input :approved_adv_pmnt_amount, label: "Approved advanced payment (#{estimation.currency.code}): #{f.object.advance_payment_amount}"

  .row
    .col-md-6
      = f.input :note, input_html: {value: nil}
      = simple_format @estimation.note

  .row
    .col-md-12
      = label_tag "Approval Complete"
      = check_box_tag :approval_complete_check, true, true
      = f.submit "Save", class: "btn btn-success btn-sm"