- uri = URI(request.url)

- active_spare_part = onloan_request ? onloan_spare_part : spare_part.ticket_spare_part_store

- srr_item = active_spare_part.try(:srr_item)
- gin_source = srr_item.try(:gin_sources).try(:first)
- serial_part = gin_source.try(:grn_serial_part).try(:inventory_serial_part)
- main_unit_of_serial_part = gin_source.main_part_grn_serial_item
- grn_serial_item = (main_unit_of_serial_part || gin_source.try(:grn_serial_item))
- grn_batch = gin_source.try(:grn_batch)
- grn_item = gin_source.try(:grn_item)

- serial_or_item = ((main_unit_of_serial_part || grn_serial_item).try(:inventory_serial_item) || serial_part)

%h4
  - if serial_part
    - session[:serial_part_item_id] = serial_part.inventory_serial_item.id
    - session[:serial_part_id] = serial_part.id
    Receive Returned Inventory - Serial Part (Part of Main Unit)

  - elsif grn_serial_item
    - session[:serial_item_id] = grn_serial_item.id
    Receive Returned Inventory - Serial Item

  - elsif grn_batch
    - session[:grn_batch_id] = grn_batch.id
    Receive Returned Inventory - Batch Item

  - else
    - session[:grn_item_id] = grn_item.id
    Receive Returned Inventory - Non Serial Non Batch Item

  - if onloan_request
    (On loan)

%h5 Store: #{gin_source.gin_item.gin.store.name}
.row
  .col-md-3
    %strong Date Issued:
    #{active_spare_part.try(:issued_at).try(:strftime, INOCRM_CONFIG['short_date_format'])}
  .col-md-3
    %strong Issued By:
    #{User.cached_find_by_id(active_spare_part.try(:issued_by)).try(:full_name)}
  .col-md-3
    %strong Date Returned:
    #{(onloan_request ? onloan_spare_part : spare_part).try(:part_returned_at).try(:strftime, INOCRM_CONFIG['short_date_format'])}
  .col-md-3
    %strong Returned By:
    #{User.cached_find_by_id((onloan_request ? onloan_spare_part : spare_part).try(:part_returned_by)).try(:full_name)}
%hr
.row
  .col-md-12
    %h4 Issued Part
  .col-md-3
    %strong Part No:
    #{spare_part.try(:spare_part_no)}
  .col-md-3
    %strong Part Description:
    #{spare_part.try(:spare_part_description)}
  .col-md-3
    %strong Returned Qnty:
    #{srr_item.try(:quantity)}

- if serial_or_item
  - issued_serial_no = serial_or_item.serial_no
  %hr
  .row
    - if serial_part
      - issued_serial_no = serial_part.serial_no
      .col-md-6
        %dl.dl-horizontal
          %dt Serial No
          %dd= serial_part.serial_no
          %dt CT No
          %dd= serial_part.ct_no
          %dt Item Code
          %dd= serial_part.inventory_product.generated_item_code

          %dt Item Description
          %dd= serial_part.inventory_product.description

          %dt Unit
          %dd= serial_part.inventory_product.inventory_unit.unit

          %dt Status
          %dd= serial_part.inventory_serial_item_status.name

          %dt GRN Date
          %dd= gin_source.main_part_grn_serial_item.grn_item.grn.created_at.try(:strftime, "#{INOCRM_CONFIG['short_date_format']} #{INOCRM_CONFIG['time_format']}")

          %dt GRN No
          %dd= main_unit_of_serial_part.grn_item.grn.grn_no

          %dt GRN Cost
          %dd= number_with_precision main_unit_of_serial_part.grn_item.unit_cost, precision: 2
          %dt Costs (#{main_unit_of_serial_part.grn_item.currency.code})
          %dd= serial_part.inventory_serial_part_additional_costs.sum(:cost).to_f + gin_source.grn_item.unit_cost.to_f
          %dt Scavange
          %dd= boolean_in_word serial_part.scavenge, "Yes", "No"
          %dt damaged
          %dd= boolean_in_word serial_part.damage, "Yes", "No"
          %dt Remarks
          %dd= serial_part.remarks

        / - content_for :main_part_more_info do
        /   .col-md-12
        /     %strong Batch No:
        /     = serial_part.inventory_serial_item.try(:inventory_batch).try(:batch_no)
        /   .col-md-12
        /     %strong Lot No:
        /     = serial_part.inventory_serial_item.try(:inventory_batch).try(:lot_no)
        /   .col-md-12
        /     %strong= "scavenge" if serial_part.scavenge
        /   .col-md-12
        /     %strong= "damage" if serial_part.damage
        /   .col-md-12
        /     %strong Remarks:
        /     = serial_part.remarks
        / %button{ type: "button", data: {html: "true", trigger: "focus", toggle: "popover", content: yield(:main_part_more_info)}, title: "More info", class: "has-popover btn btn-link"}
        /   More
        / .row

    .col-md-6
      %h4{class: "#{'hide' unless serial_part}"} Main Unit of the Part
      %dl.dl-horizontal
        %dt Serial No :
        %dd= serial_or_item.serial_no
        %dt CT No :
        %dd= serial_or_item.ct_no
        %dt Item Code :
        %dd= serial_or_item.inventory_product.generated_item_code
        %dt Item Description:
        %dd= serial_or_item.inventory_product.description
        %dt Unit
        %dd= serial_or_item.inventory_product.inventory_unit.unit
        %dt Status
        %dd= serial_or_item.inventory_serial_item_status.name
        %dt Condition
        %dd= serial_or_item.product_condition.condition
        %dt Scavange
        %dd= boolean_in_word serial_or_item.scavenge, "Yes", "No"
        %dt Damaged
        %dd= boolean_in_word serial_or_item.damage, "Yes", "No"
        %dt Costs (#{grn_serial_item.grn_item.currency.code})
        %dd= serial_or_item.inventory_serial_items_additional_costs.sum(:cost).to_f + gin_source.grn_item.unit_cost.to_f

  %hr
  .row
    - returned_serial_no = (onloan_request ? onloan_spare_part : spare_part).return_part_serial_no

    / - if (onloan_request and active_spare_part.spare_part_status_use.code == "USD") or ( !onloan_request and active_spare_part.ticket_spare_part.spare_part_status_use.code == "USD") or (issued_serial_no != returned_serial_no)
    - if (issued_serial_no != returned_serial_no)
      - if serial_part
        - form_serial_part_or_item = InventorySerialPart.new(serial_item_id: serial_or_item.id)
      - elsif grn_serial_item
        - form_serial_part_or_item = InventorySerialItem.new
      - update_inventory = false  
    - else
      - form_serial_part_or_item = (serial_part or serial_or_item)
      - update_inventory = true
    .col-md-12
      %h3 Returned Part

      %div{class: "#{'hide' if update_inventory}"}
        =radio_button_tag "radio_part", "add_part", true, data: {uri_path: uri.path, object_class: form_serial_part_or_item.class.to_s, task_id: params[:task_id], owner: params[:owner], process_id: params[:process_id], currency_code: gin_source.grn_item.currency.code, currency_id: gin_source.grn_item.currency_id, grn_cost: gin_source.grn_item.unit_cost, active_spare_part: (onloan_request ? "#{onloan_spare_part.class.to_s}-#{onloan_spare_part.id}" : "#{spare_part.class.to_s}-#{spare_part.id}")}, class: "toggle_add_update"
        =label_tag :type_order, "Add Item"

      %div{class: "#{'hide' if !update_inventory}"}
        =radio_button_tag "radio_part", "update_part", true, data: {uri_path: uri.path, object_class: form_serial_part_or_item.class.to_s, object_id: serial_or_item.id, task_id: params[:task_id], owner: params[:owner], process_id: params[:process_id], currency_code: gin_source.grn_item.currency.code, currency_id: gin_source.grn_item.currency_id, grn_cost: gin_source.grn_item.unit_cost, active_spare_part: (onloan_request ? "#{onloan_spare_part.class.to_s}-#{onloan_spare_part.id}" : "#{spare_part.class.to_s}-#{spare_part.id}")}, class: "toggle_add_update"
        =label_tag :type_order, "Update Item"

      =radio_button_tag "radio_part", "reject", false, data: {reject: true, uri_path: uri.path, task_id: params[:task_id], owner: params[:owner], process_id: params[:process_id], active_spare_part: (onloan_request ? "#{onloan_spare_part.class.to_s}-#{onloan_spare_part.id}" : "#{spare_part.class.to_s}-#{spare_part.id}")}, class: "toggle_add_update"
      =label_tag :type_order, "Reject Item"

  .add_form
    = render "tickets/tickets_pack/return_store_part/serial_or_item_form", form_serial_part_or_item: form_serial_part_or_item, uri: uri, main_part_of_serial_part: (serial_part and serial_part.inventory_serial_item), ticket_spare_part: (onloan_request ? onloan_spare_part : spare_part), currency_code: gin_source.grn_item.currency.code, currency_id: gin_source.grn_item.currency_id, grn_cost: gin_source.grn_item.unit_cost

- elsif grn_batch
  / - if (onloan_request and active_spare_part.spare_part_status_use.code == "USD") or ( !onloan_request and active_spare_part.ticket_spare_part.spare_part_status_use.code == "USD")
  /   - form_inv_batch = InventoryBatch.new
  / - else
  - form_inv_batch = grn_batch.inventory_batch

  .row
    .col-md-6
      %strong Item Code:
      = grn_batch.inventory_batch.try(:inventory_product).try(:generated_item_code)

    .col-md-6
      %strong Item Description:
      = grn_batch.inventory_batch.try(:inventory_product).try(:description)

    .col-md-6
      %strong Unit:
      = grn_batch.inventory_batch.try(:inventory_product).try(:inventory_unit).try(:unit)

    .col-md-6
      %strong Lot No:
      = grn_batch.inventory_batch.lot_no
    .col-md-6
      %strong Batch No:
      = grn_batch.inventory_batch.batch_no
    .col-md-6
      %strong Manufacture Date:
      = grn_batch.inventory_batch.manufatured_date.try(:strftime, "#{INOCRM_CONFIG['short_date_format']} #{INOCRM_CONFIG['time_format']}")
    .col-md-6
      %strong Expiry Date:
      = grn_batch.inventory_batch.expiry_date.try(:strftime, "#{INOCRM_CONFIG['short_date_format']} #{INOCRM_CONFIG['time_format']}")
    .col-md-6
      %strong Remarks:
      = simple_format grn_batch.inventory_batch.remarks
  %hr

  - if grn_batch.inventory_batch.inventory_warranties.present?
    %table.table.table-striped
      %thead
        %tr
          %th Start at
          %th End at
          %th part
          %th labour
          %th onsight
          %th type
          %th remarks
      %tbody
        - grn_batch.inventory_batch.inventory_warranties.each do |inventory_warranty|
          %tr
            %td= inventory_warranty.start_at
            %td= inventory_warranty.end_at
            %td= inventory_warranty.period_part
            %td= inventory_warranty.period_labour
            %td= inventory_warranty.period_onsight
            %td= inventory_warranty.inventory_warranty_type.try(:name)
            %td= simple_format inventory_warranty.remarks

  %h3 Returned Part
  =radio_button_tag "radio_part", "add_batch", ((onloan_request and active_spare_part.spare_part_status_use.code == "USD") or ( !onloan_request and active_spare_part.ticket_spare_part.spare_part_status_use.code == "USD")), data: {uri_path: uri.path, object_class: form_inv_batch.class.to_s, task_id: params[:task_id], owner: params[:owner], process_id: params[:process_id], currency_code: gin_source.grn_item.currency.code, currency_id: gin_source.grn_item.currency_id, grn_cost: gin_source.grn_item.unit_cost, active_spare_part: (onloan_request ? "#{onloan_spare_part.class.to_s}-#{onloan_spare_part.id}" : "#{spare_part.class.to_s}-#{spare_part.id}")}, class: "toggle_add_update"
  =label_tag :type_order, "Add Item"
  =radio_button_tag "radio_part", "update_part", !((onloan_request and active_spare_part.spare_part_status_use.code == "USD") or ( !onloan_request and active_spare_part.ticket_spare_part.spare_part_status_use.code == "USD")), data: {uri_path: uri.path, object_class: form_inv_batch.class.to_s, object_id: grn_batch.inventory_batch.id, task_id: params[:task_id], owner: params[:owner], process_id: params[:process_id], currency_code: gin_source.grn_item.currency.code, currency_id: gin_source.grn_item.currency_id, grn_cost: gin_source.grn_item.unit_cost, active_spare_part: (onloan_request ? "#{onloan_spare_part.class.to_s}-#{onloan_spare_part.id}" : "#{spare_part.class.to_s}-#{spare_part.id}")}, class: "toggle_add_update"
  =label_tag :type_order, "Update Item"
  =radio_button_tag "radio_part", "reject", false, data: {reject: true, uri_path: uri.path, task_id: params[:task_id], owner: params[:owner], process_id: params[:process_id], active_spare_part: (onloan_request ? "#{onloan_spare_part.class.to_s}-#{onloan_spare_part.id}" : "#{spare_part.class.to_s}-#{spare_part.id}")}, class: "toggle_add_update"
  =label_tag :type_order, "Reject"

  .add_form
    = render "tickets/tickets_pack/return_store_part/grn_batch_form", form_inv_batch: form_inv_batch, uri: uri, currency_code: gin_source.grn_item.currency.code, ticket_spare_part: (onloan_request ? onloan_spare_part : spare_part), currency_id: gin_source.grn_item.currency_id

- elsif grn_item
  / - if (onloan_request and active_spare_part.spare_part_status_use.code == "USD") or ( !onloan_request and active_spare_part.ticket_spare_part.spare_part_status_use.code == "USD")
  /   - form_grn_item = GrnItem.new
  / - else
  - form_grn_item = grn_item

  .row
    .col-md-3
      %strong Item Code:
      = grn_item.inventory_product.generated_item_code

    .col-md-3
      %strong Item Description:
      = grn_item.inventory_product.description

    .col-md-3
      %strong Unit:
      = grn_item.inventory_product.inventory_unit.unit
    .col-md-3
      %strong Remarks:
      = simple_format grn_item.remarks
    .col-md-3
      %strong Grn No:
      = grn_item.grn.grn_no

    .col-md-3
      %strong Grn Date:
      = grn_item.grn.created_at.try(:strftime, "#{INOCRM_CONFIG['short_date_format']} #{INOCRM_CONFIG['time_format']}")

    .col-md-3
      %strong Grn Cost (#{grn_item.currency.code}):
      = number_with_precision grn_item.unit_cost, precision: 2

  %hr
  %h3 Returned Part
  .hide
    =radio_button_tag "radio_part", "update_part", !((onloan_request and active_spare_part.spare_part_status_use.code == "USD") or ( !onloan_request and active_spare_part.ticket_spare_part.spare_part_status_use.code == "USD")), data: {uri_path: uri.path, object_class: form_grn_item.class.to_s, object_id: grn_item.id, task_id: params[:task_id], owner: params[:owner], process_id: params[:process_id], currency_code: gin_source.grn_item.currency.code, currency_id: gin_source.grn_item.currency_id, grn_cost: gin_source.grn_item.unit_cost, active_spare_part: (onloan_request ? "#{onloan_spare_part.class.to_s}-#{onloan_spare_part.id}" : "#{spare_part.class.to_s}-#{spare_part.id}")}, class: "toggle_add_update"
    =label_tag :type_order, "Update"

  =radio_button_tag "radio_part", "add_batch", ((onloan_request and active_spare_part.spare_part_status_use.code == "USD") or ( !onloan_request and active_spare_part.ticket_spare_part.spare_part_status_use.code == "USD")), data: {uri_path: uri.path, object_class: form_grn_item.class.to_s, task_id: params[:task_id], owner: params[:owner], process_id: params[:process_id], currency_code: gin_source.grn_item.currency.code, currency_id: gin_source.grn_item.currency_id, grn_cost: gin_source.grn_item.unit_cost, active_spare_part: (onloan_request ? "#{onloan_spare_part.class.to_s}-#{onloan_spare_part.id}" : "#{spare_part.class.to_s}-#{spare_part.id}")}, class: "toggle_add_update"
  =label_tag :type_order, "Add Item"

  =radio_button_tag "radio_part", "reject", false, data: {reject: true, uri_path: uri.path, task_id: params[:task_id], owner: params[:owner], process_id: params[:process_id], active_spare_part: (onloan_request ? "#{onloan_spare_part.class.to_s}-#{onloan_spare_part.id}" : "#{spare_part.class.to_s}-#{spare_part.id}")}, class: "toggle_add_update"
  =label_tag :type_order, "Reject Item"

  .add_form
    = render "tickets/tickets_pack/return_store_part/grn_item_form", form_grn_item: form_grn_item, uri: uri, ticket_spare_part: (onloan_request ? onloan_spare_part : spare_part), currency_code: gin_source.grn_item.currency.code, currency_id: gin_source.grn_item.currency_id, grn_cost: gin_source.grn_item.unit_cost

#inventory_modal.modal.fade{tabindex: -1, role: "dialog", "aria-labelledby" => "inventory_modal", "aria-hidden" => true}
  .modal-dialog.modal-lg
    .modal-content