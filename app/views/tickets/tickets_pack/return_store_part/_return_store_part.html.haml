- uri = URI(request.url)

- active_spare_part = onloan_request ? onloan_spare_part : spare_part.ticket_spare_part_store

- gin_source = active_spare_part.srr_item.gin_sources.first
- serial_part = gin_source.grn_serial_part.try(:inventory_serial_part)
- grn_serial_item = gin_source.grn_serial_item
- grn_batch = gin_source.grn_batch
- grn_item = gin_source.grn_item

- serial_or_item = (serial_part || grn_serial_item.try(:inventory_serial_item))


%h4
  - if serial_part
    Recieve Returned Inventory Serial Part (Part of main product)
  - elsif grn_serial_item
    Recieve Returned Inventory Serial Item
  - elsif grn_batch
    Recieve Returned Inventory Batch Item
  - else
    Recieve Returned Inventory Item

  - if onloan_request
    (On loan)

.row
  .col-md-3
    %strong Date Issued:
    #{active_spare_part.try(:isssued_at).try(:strftime, "%Y-%m-%d")}
  .col-md-3
    %strong Date Returned:
    #{active_spare_part.try(:part_returned_at).try(:strftime, "%Y-%m-%d")}
  .col-md-3
    %strong Issued By:
    #{User.find_by_id(active_spare_part.try(:issued_by)).try(:user_name)}
  .col-md-3
    %strong Returned By:
    #{User.find_by_id(active_spare_part.try(:part_returned_by)).try(:user_name)}
%hr
.row
  .col-md-4
    %strong Issued Part
  .col-md-4
    %strong Part No:
    #{spare_part.try(:spare_part_no)}
  .col-md-4
    %strong Part Description:
    #{spare_part.try(:spare_part_description)}

- if serial_or_item
  %hr
  .row
    .col-md-6
      .row
        .col-md-6
          %strong Item Code :
          = serial_or_item.try(:inventory_product).try(:serial_no)

        .col-md-6
          %strong Item Description:
          #{serial_or_item.try(:inventory_product).try(:description)}

        .col-md-6
          %strong Unit :
          #{serial_or_item.try(:inventory_product).try(:inventory_unit).try(:unit)}

        .col-md-6
          %strong Serial No :
          = serial_or_item.serial_no
        .col-md-6
          %strong CT No :
          = serial_or_item.ct_no
        .col-md-6
          %strong= "scavenge" if serial_or_item.scavenge
        .col-md-6
          %strong= "damage" if serial_or_item.damage
        .col-md-6
          %strong Status:
          = serial_or_item.inventory_serial_item_status.name
        .col-md-6
          - if serial_part
            %strong Costs (#{serial_or_item.inventory_serial_part_additional_costs.first and serial_or_item.inventory_serial_part_additional_costs.first.currency.code}) :
            = serial_or_item.inventory_serial_part_additional_costs.sum(:cost)
          - elsif grn_serial_item
            %strong Costs (#{serial_or_item.inventory_serial_items_additional_costs.first and serial_or_item.inventory_serial_items_additional_costs.first.currency.code}) :
            = serial_or_item.inventory_serial_items_additional_costs.sum(:cost)

    - if serial_part
      .col-md-6
        %h4.margin-top0 Main Product of the Part
        .row

          .col-md-6
            %strong Item Code :
            = serial_part.inventory_serial_item.try(:inventory_product).try(:serial_no)

          .col-md-6
            %strong Item Description:
            = serial_part.inventory_serial_item.try(:inventory_product).try(:description)

          .col-md-6
            %strong Unit :
            = serial_part.inventory_serial_item.try(:inventory_product).try(:inventory_unit).try(:unit)
          .col-md-6
            %strong GRN Date:
            = gin_source.main_part_grn_serial_item.grn_item.grn.created_at.try(:strftime, "%Y-%m-%d %H:%M")
          .col-md-6
            %strong GRN No:
            = gin_source.main_part_grn_serial_item.grn_item.grn.grn_no
          .col-md-6
            %strong Batch No:
            = serial_part.inventory_serial_item.try(:inventory_batch).try(:batch_no)
          .col-md-6
            %strong Lot No:
            = serial_part.inventory_serial_item.try(:inventory_batch).try(:lot_no)
          .col-md-6
            %strong Status:
            = serial_part.inventory_serial_item.inventory_serial_item_status.name
          .col-md-6
            %strong= "scavenge" if serial_part.inventory_serial_item.scavenge
          .col-md-6
            %strong= "damage" if serial_part.inventory_serial_item.damage
          .col-md-6
            %strong Status:
            = serial_part.inventory_serial_item.inventory_serial_item_status.name
          .col-md-6
            %strong Remarks:
            = serial_part.inventory_serial_item.try(:remarks)

  %hr
  .row
    - if (onloan_request and active_spare_part.spare_part_status_use.code == "USD") or ( !onloan_request and active_spare_part.ticket_spare_part.spare_part_status_use.code == "USD")
      - if serial_part
        - form_serial_part_or_item = InventorySerialPart.new
      - elsif grn_serial_item
        - form_serial_part_or_item = InventorySerialItem.new
        
    - else
      - form_serial_part_or_item = serial_or_item
    .col-md-12
      =radio_button_tag "radio_part", "add_part", ((onloan_request and active_spare_part.spare_part_status_use.code == "USD") or ( !onloan_request and active_spare_part.ticket_spare_part.spare_part_status_use.code == "USD")), data: {uri_path: uri.path, object_class: form_serial_part_or_item.class.to_s, object_id: form_serial_part_or_item.id, task_id: params[:task_id], owner: params[:owner], process_id: params[:process_id]}, class: "toggle_add_update"
      =label_tag :type_order, "Add new Serial Part"
      =radio_button_tag "radio_part", "update_part", !((onloan_request and active_spare_part.spare_part_status_use.code == "USD") or ( !onloan_request and active_spare_part.ticket_spare_part.spare_part_status_use.code == "USD")), data: {uri_path: uri.path, object_class: form_serial_part_or_item.class.to_s, object_id: serial_or_item.id, task_id: params[:task_id], owner: params[:owner], process_id: params[:process_id]}, class: "toggle_add_update"
      =label_tag :type_order, "Update Existing Serial Part"
      =radio_button_tag "radio_part", "reject", false, data: {reject: true, uri_path: uri.path, task_id: params[:task_id], owner: params[:owner], process_id: params[:process_id]}, class: "toggle_add_update"
      =label_tag :type_order, "Reject"

  .add_form
    = render "tickets/tickets_pack/return_store_part/serial_or_item_form", form_serial_part_or_item: form_serial_part_or_item, uri: uri

- elsif grn_batch
  - if (onloan_request and active_spare_part.spare_part_status_use.code == "USD") or ( !onloan_request and active_spare_part.ticket_spare_part.spare_part_status_use.code == "USD")
    - form_inv_batch = InventoryBatch.new
  - else
    - form_inv_batch = grn_batch.inventory_batch


  .row
    .col-md-6
      %strong Item Code:
      = grn_batch.inventory_batch.try(:inventory_product).try(:serial_no)

    .col-md-6
      %strong Item Description:
      = grn_batch.inventory_batch.try(:inventory_product).try(:description)

    .col-md-6
      %strong Unit:
      = grn_batch.inventory_batch.try(:inventory_product).try(:inventory_unit).try(:unit)

    .col-md-6
      %strong Lot No:
      = grn_batch.lot_no
    .col-md-6
      %strong Batch No:
      = grn_batch.batch_no
    .col-md-6
      %strong Manufacture Date:
      = grn_batch.manufactured_date.try(:strftime, "%Y-%m-%d %H:%M")
    .col-md-6
      %strong Expiry Date:
      = grn_batch.expiry_date.try(:strftime, "%Y-%m-%d %H:%M")
    .col-md-6
      %strong Remarks:
      = grn_batch.remarks
  %hr

  =radio_button_tag "radio_part", "add_batch", ((onloan_request and active_spare_part.spare_part_status_use.code == "USD") or ( !onloan_request and active_spare_part.ticket_spare_part.spare_part_status_use.code == "USD")), data: {uri_path: uri.path, object_class: form_inv_batch.class.to_s, object_id: form_inv_batch.id, task_id: params[:task_id], owner: params[:owner], process_id: params[:process_id]}, class: "toggle_add_update"
  =label_tag :type_order, "Add new Serial Part"
  =radio_button_tag "radio_part", "update_part", !((onloan_request and active_spare_part.spare_part_status_use.code == "USD") or ( !onloan_request and active_spare_part.ticket_spare_part.spare_part_status_use.code == "USD")), data: {uri_path: uri.path, object_class: form_inv_batch.class.to_s, object_id: grn_batch.inventory_batch.id, task_id: params[:task_id], owner: params[:owner], process_id: params[:process_id]}, class: "toggle_add_update"
  =label_tag :type_order, "Update Existing Serial Part"
  =radio_button_tag "radio_part", "reject", false, data: {reject: true}, class: "toggle_add_update"
  =label_tag :type_order, "Reject"

  .add_form
    = render "tickets/tickets_pack/return_store_part/grn_batch_form", form_inv_batch: form_inv_batch, uri: uri

- elsif grn_item
  - if (onloan_request and active_spare_part.spare_part_status_use.code == "USD") or ( !onloan_request and active_spare_part.ticket_spare_part.spare_part_status_use.code == "USD")
    - form_grn_item = GrnItem.new
  - else
    - form_grn_item = grn_item

  =radio_button_tag "radio_part", "add_batch", ((onloan_request and active_spare_part.spare_part_status_use.code == "USD") or ( !onloan_request and active_spare_part.ticket_spare_part.spare_part_status_use.code == "USD")), data: {uri_path: uri.path, object_class: form_grn_item.class.to_s, object_id: form_grn_item.id, task_id: params[:task_id], owner: params[:owner], process_id: params[:process_id]}, class: "toggle_add_update"
  =label_tag :type_order, "Add new Serial Part"
  =radio_button_tag "radio_part", "update_part", !((onloan_request and active_spare_part.spare_part_status_use.code == "USD") or ( !onloan_request and active_spare_part.ticket_spare_part.spare_part_status_use.code == "USD")), data: {uri_path: uri.path, object_class: form_grn_item.class.to_s, object_id: grn_item.id, task_id: params[:task_id], owner: params[:owner], process_id: params[:process_id]}, class: "toggle_add_update"
  =label_tag :type_order, "Update Existing Serial Part"
  =radio_button_tag "radio_part", "reject", false, data: {reject: true}, class: "toggle_add_update"
  =label_tag :type_order, "Reject"

  .add_form
    = render "tickets/tickets_pack/return_store_part/return_store_part", form_grn_item: form_grn_item, uri: uri

#inventory_modal.modal.fade{tabindex: -1, role: "dialog", "aria-labelledby" => "inventory_modal", "aria-hidden" => true}
  .modal-dialog.modal-lg
    .modal-content