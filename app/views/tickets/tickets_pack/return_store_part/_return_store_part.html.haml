- uri = URI(request.url)
.row
  .col-md-12
    %strong Recieve Returned Part
.row{style: "margin-top:10px;"}
  .col-md-6
    %strong Date Issued:
    #{spare_part.ticket_spare_part_store.try(:store_issued_at).try(:strftime, "%Y-%m-%d")}
  .col-md-6
    %strong Date Returned:
    #{spare_part.try(:part_returned_at).try(:strftime, "%Y-%m-%d")}
  .col-md-6
    %strong Issued By:
    #{User.find_by_id(spare_part.ticket_spare_part_store.try(:store_issued_by)).try(:user_name)}
  .col-md-6
    %strong Returned By:
    #{User.find_by_id(spare_part.try(:part_returned_by)).try(:user_name)}

.row{style: "margin-top:15px;"}
  .col-md-12
    %strong Issued Part
.row{style: "margin-top:10px;"}
  .col-md-12
    %strong Part No:
    #{spare_part.try(:spare_part_no)}
  .col-md-12
    %strong Part Description:
    #{spare_part.try(:spare_part_description)}

.row{style: "margin-top:20px;"}
  .col-md-6
    .row
      .col-md-12
        %strong Store:
        #{spare_part.ticket_spare_part_store.try(:store).try(:name)}
    .row
      .col-md-12
        %strong Item Code :
        #{spare_part.ticket_spare_part_store.try(:inventory_product).try(:serial_no)}
        - # generated_item_code!
    .row
      .col-md-12
        %strong Item Description:
        #{spare_part.ticket_spare_part_store.try(:inventory_product).try(:description)}
    .row
      .col-md-12
        %strong Unit :
        #{spare_part.ticket_spare_part_store.try(:inventory_product).try(:inventory_unit).try(:unit)}

    .row
      .col-md-4
        %strong Serial No :
        #{spare_part.ticket_spare_part_store.try(:inventory_product).try(:serial_no)}
        / #{spare_part.try(:ticket_spare_part_store).try(:main_inventory_product).try(:serial_no)}
      .col-md-4
        %strong CT No :

    .row
      .col-md-12
        .row
          .col-md-12
            %a{"data-toggle" => "collapse", "href"=>"#issued_part"}
              more info

        .row.small_scale_margin-bottom1
          #issued_part.collapse
            .col-md-12
              %fieldset
                .row
                  .col-md-12  
                    %strong GRN Date: 
                    #{spare_part.try(:ticket_spare_part_store).try(:gin_item).try(:gin_sources).first.try(:grn_item).try(:grn).try(:created_at).try(:strftime, "%Y-%m-%d %H:%M")}
                .row
                  .col-md-12
                    %strong Batch No:
                    #{spare_part.try(:ticket_spare_part_store).try(:srr_item).srr_item_sources.first.gin_source.grn_serial_item.try(:inventory_serial_item).try(:inventory_batch).try(:batch_no)}
                  .col-md-6
                    %strong Lot No:
                    #{spare_part.try(:ticket_spare_part_store).try(:srr_item).srr_item_sources.first.gin_source.grn_serial_item.try(:inventory_serial_item).try(:inventory_batch).try(:lot_no)}
                .row
                  .col-md-12
                    %strong Status:
                    #{spare_part.try(:ticket_spare_part_store).try(:srr_item).srr_item_sources.first.gin_source.grn_serial_item.try(:inventory_serial_item).try(:inventory_serial_item_status).try(:name)}
                .row
                  .col-md-6
                    %strong Scavenge:
                    #{spare_part.try(:ticket_spare_part_store).try(:srr_item).srr_item_sources.first.gin_source.grn_serial_item.try(:inventory_serial_item).try(:scavenge) ? "Scavenge" : ""}
                  .col-md-6
                    %strong Parts Completed:
                    #{spare_part.try(:ticket_spare_part_store).try(:srr_item).srr_item_sources.first.gin_source.grn_serial_item.try(:inventory_serial_item).try(:parts_not_completed) ? "Not completed" : ""}
                .row
                  .col-md-12
                    %strong Damage:
                    #{spare_part.try(:ticket_spare_part_store).try(:srr_item).srr_item_sources.first.gin_source.grn_serial_item.try(:inventory_serial_item).try(:damage) ? "Damaged" : ""}
                .row
                  .col-md-12
                    %strong Repaired:
                    #{spare_part.try(:ticket_spare_part_store).try(:srr_item).srr_item_sources.first.gin_source.grn_serial_item.try(:inventory_serial_item).try(:repaired) ? "Repaired" : ""}
                .row
                  .col-md-12
                    %strong Remarks:
                    #{spare_part.try(:ticket_spare_part_store).try(:srr_item).srr_item_sources.first.gin_source.grn_serial_item.try(:inventory_serial_item).try(:remarks)}
  .col-md-6
    .row
      .col-md-12
        %strong
          %u Main Product of the Part

    .row
      .col-md-12
        %strong Item Code:
        #{spare_part.ticket_spare_part_store.try(:inventory_product).try(:serial_no)}
    .row
      .col-md-12
        %strong Item Description:
        #{spare_part.ticket_spare_part_store.try(:inventory_product).try(:description)}
    .row
      .col-md-12
        %strong Unit :
        #{spare_part.ticket_spare_part_store.try(:inventory_product).try(:inventory_unit).try(:unit)}
    .row
      .col-md-4
        %strong Serial No :
        #{spare_part.ticket_spare_part_store.try(:inventory_product).try(:serial_no)}
      .col-md-4
        %strong CT No :
        #{spare_part.try(:return_part_ct_no)}

    .row
      .col-md-12
        .row
          .col-md-6
            %a{"data-toggle" => "collapse", "href"=>"#main_part"}
              more info

        .row.small_scale_margin-bottom1
          #main_part.collapse
            .col-md-12
              %fieldset
                .row
                  .col-md-12
                    %strong GRN Date: 
                    #{spare_part.try(:ticket_spare_part_store).try(:gin_item).try(:gin_sources).first.try(:grn_item).try(:grn).try(:created_at).try(:strftime, "%Y-%m-%d %H:%M")}
                .row
                  .col-md-12
                    %strong Batch No:
                    #{spare_part.try(:ticket_spare_part_store).try(:srr_item).srr_item_sources.first.gin_source.grn_serial_item.try(:inventory_serial_item).try(:inventory_batch).try(:batch_no)}
                  .col-md-6
                    %strong Lot No:
                    #{spare_part.try(:ticket_spare_part_store).try(:srr_item).srr_item_sources.first.gin_source.grn_serial_item.try(:inventory_serial_item).try(:inventory_batch).try(:lot_no)}
                .row
                  .col-md-12
                    %strong Status:
                    / #{SparePartStatusAction.find_by_id(onloan_spare_part.try(:status_action_id)).try(:name)}
                    #{spare_part.try(:ticket_spare_part_store).try(:srr_item).srr_item_sources.first.gin_source.grn_serial_item.try(:inventory_serial_item).try(:inventory_serial_item_status).try(:name)}
                .row
                  .col-md-6
                    %strong Scavenge:
                    #{spare_part.try(:ticket_spare_part_store).try(:srr_item).srr_item_sources.first.gin_source.grn_serial_item.try(:inventory_serial_item).try(:scavenge) ? "Scavenge" : ""}
                  .col-md-6
                    %strong Parts Completed:
                    #{spare_part.try(:ticket_spare_part_store).try(:srr_item).srr_item_sources.first.gin_source.grn_serial_item.try(:inventory_serial_item).try(:parts_not_completed) ? "Not completed" : ""}
                .row
                  .col-md-12
                    %strong Damage:
                    #{spare_part.try(:ticket_spare_part_store).try(:srr_item).srr_item_sources.first.gin_source.grn_serial_item.try(:inventory_serial_item).try(:damage) ? "Damaged" : ""}
                    / #{Reason.find_by_id(spare_part.ticket_spare_part_store.try(:return_part_damage_reason_id)).try(:reason)}
                .row
                  .col-md-12
                    %strong Repaired:
                    #{spare_part.try(:ticket_spare_part_store).try(:srr_item).srr_item_sources.first.gin_source.grn_serial_item.try(:inventory_serial_item).try(:repaired) ? "Repaired" : ""}
                .row
                  .col-md-12
                    %strong Remarks:
                    #{spare_part.try(:ticket_spare_part_store).try(:srr_item).srr_item_sources.first.gin_source.grn_serial_item.try(:inventory_serial_item).try(:remarks)}
.row
  .col-md-12
    .row
      .col-md-6
        %strong
          %u Returned Part
    .row
      .col-md-4
        %strong Serial No :
        #{spare_part.try(:return_part_serial_no)}
      .col-md-4
        %strong CT No :
        #{spare_part.try(:return_part_ct_no)}

    .row.small_scale_margin-bottom1
      .col-md-4
        %strong Use Status of the part: 
        #{Reason.find_by_id(spare_part.try(:status_use_id)).try(:reason)}

      .col-md-4
        %strong Un Used Reason:
        #{Reason.find_by_id(spare_part.try(:unused_reason_id)).try(:reason)}

- if spare_part.ticket_spare_part_store.try(:srr_item).try(:srr_item_sources).try(:first).try(:gin_source).try(:serial_part_id).present?

  =radio_button("radio_part", "radio_part", "add_part", checked: true, :class => "add_new_part")
  =label_tag :type_order, "Add new Serial Part"
  =radio_button("radio_part", "radio_part", "update_part", :class => "update_part")
  =label_tag :type_order, "Update Existing Serial Part"

  .add_part
    - i = InventorySerialPart.new
    = simple_form_for i, url: "#" do |f|
      .row.col-md.12
        .col-md-4
          = label_tag "Product condition"
          = f.select :product_condition_id, ProductCondition.all.collect { |p| [ p.condition, p.id ] }, include_blank: true
        .col-md-2
          = f.input :scavenge, as: :boolean, wrapper: :append
        .col-md-2
          = f.input :parts_not_completed, as: :boolean, wrapper: :append
        .col-md-2
          = f.input :used, as: :boolean, wrapper: :append
        .col-md-2
          = f.input :repaired, as: :boolean, wrapper: :append
      .row.col-md-12
        .col-md-4
          = f.input :damage, as: :boolean, wrapper: :append
        .col-md-8
          = f.simple_fields_for :damages do |d|
            = label_tag "Damage Reason"
            = d.select :damage_reason_id, InventoryReason.all.where(damage: true).map{|r| [r.reason, r.id]}, include_blank: true
      .row.col-md.12
        .col-md-6
          = f.input :remarks, label: "Inventory Serial Part Remarks"
        .col-md-6

      / above common for add or update..

      .row.col-md-12
        .col-md-3
          = f.input :serial_no 
        .col-md-3
          = f.input :ct_no
        .col-md-3
          = f.input :manufatured_date, as: :string, input_html: {class: "datepicker"}
        .col-md-3
          = f.input :expiry_date, as: :string, input_html: {class: "datepicker"}
      .row.col-md-12
        = f.simple_fields_for :inventory_serial_part_additional_costs do |addi_cost|
          .col-md-3
            = addi_cost.input :cost
          .col-md-3
            = label_tag "currency"
            = addi_cost.select :currency_id, Currency.all.collect { |curr| [ curr.currency, curr.id ] }, include_blank: true  
          .col-md-6
            = addi_cost.input :note
      .row.col-md-12
        = f.simple_fields_for :inventory_serial_part_warranties do |spw|
          = spw.simple_fields_for :inventory_warranty do |w|
            %fieldset
              %legend
                Inventory Serial Part Warranty
              .col-md-3
                = w.input :start_at, as: :string, input_html: {class: "datepicker"}
              .col-md-3
                = w.input :end_at, as: :string, input_html: {class: "datepicker"}
              .col-md-2
                = w.input :period_part
              .col-md-2
                = w.input :period_labour
              .col-md-2
                = w.input :period_onsight
              .col-md-4
                = label_tag "Warranty Type"
                = w.select :warranty_type_id, WarrantyType.all.collect { |p| [ p.name, p.id ] }, include_blank: true
              .col-md-8
                = w.input :remarks, label: "Inventory Serial Part Warranty Remarks"
      .row.col-md-12
        = f.submit "Add Serial Part", class: "btn btn-success"
  .update_part_class.hide
    - serial = spare_part.ticket_spare_part_store.try(:srr_item).try(:srr_item_sources).try(:first).try(:gin_source).try(:serial_part_id)
    - i = InventorySerialPart.find(serial)
    = simple_form_for i, url: "#" do |f|
      .row.col-md.12
        .col-md-4
          = label_tag "Product condition"
          = f.select :product_condition_id, ProductCondition.all.collect { |p| [ p.condition, p.id ] }, include_blank: true
        .col-md-2
          = f.input :scavenge, as: :boolean, wrapper: :append
        .col-md-2
          = f.input :parts_not_completed, as: :boolean, wrapper: :append
        .col-md-2
          = f.input :used, as: :boolean, wrapper: :append
        .col-md-2
          = f.input :repaired, as: :boolean, wrapper: :append  
      .row.col-md-12
        .col-md-4
          = f.input :damage, as: :boolean, wrapper: :append
        .col-md-8
          = f.simple_fields_for :damages do |d|
            = label_tag "Damage Reason"
            = d.select :damage_reason_id, InventoryReason.all.where(damage: true).map{|r| [r.reason, r.id]}, include_blank: true
      .row.col-md.12
        .col-md-6
          = f.input :remarks, label: "Inventory Serial Part Remarks"
        .col-md-6
      .row.col-md.12
        = f.submit "Update Serial Part", class: "btn btn-success"

- else
  - if spare_part.ticket_spare_part_store.try(:srr_item).try(:srr_item_sources).try(:first).try(:gin_source).try(:grn_serial_item_id).present?
    =radio_button("radio_item", "radio_item", "add_item", checked: true, :class => "add_new_item")
    =label_tag :type_order, "Add new Serial Item"
    =radio_button("radio_item", "radio_item", "update_item", :class => "update_item")
    =label_tag :type_order, "Update Existing Serial Item"

    .add_item
      - i = InventorySerialItem.new
      = simple_form_for i, url: "#" do |f|
        .row.col-md.12
          .col-md-4
            = label_tag "Product condition"
            = f.select :product_condition_id, ProductCondition.all.collect { |p| [ p.condition, p.id ] }, include_blank: true
          .col-md-2
            = f.input :scavenge, as: :boolean, wrapper: :append
          .col-md-2
            = f.input :parts_not_completed, as: :boolean, wrapper: :append
          .col-md-2
            = f.input :used, as: :boolean, wrapper: :append
          .col-md-2
            = f.input :repaired, as: :boolean, wrapper: :append
        .row.col-md-12
          .col-md-4
            = f.input :damage, as: :boolean, wrapper: :append
          .col-md-8 
            = f.simple_fields_for :grn_serial_items do |grn_serial_item|
              = grn_serial_item.simple_fields_for :damages do |d|
                = label_tag "Damage Reason"
                = d.select :damage_reason_id, InventoryReason.all.where(damage: true).map{|r| [r.reason, r.id]}, include_blank: true
        .row.col-md.12
          .col-md-6
            = f.input :remarks, label: "Inventory Serial Item Remarks"
          .col-md-6

        / above common for add or update..

        .row.col-md-12
          .col-md-3
            = f.input :serial_no 
          .col-md-3
            = f.input :ct_no
          .col-md-3
            = f.input :manufatured_date, as: :string, input_html: {class: "datepicker"}
          .col-md-3
            = f.input :expiry_date, as: :string, input_html: {class: "datepicker"}
        .row.col-md-12
          = f.simple_fields_for :grn_items do |grn_item|
            .col-md-3
              = grn_item.input :unit_cost
            .col-md-3
              = label_tag "currency"
              = grn_item.select :currency_id, Currency.all.collect { |curr| [ curr.currency, curr.id ] }, include_blank: true  
            .col-md-6
        .row.col-md-12
          = f.simple_fields_for :inventory_serial_warrantys do |sw|
            = sw.simple_fields_for :inventory_warranty do |w|
              %fieldset
                %legend
                  Inventory Serial Item Warranty
                .col-md-3
                  = w.input :start_at, as: :string, input_html: {class: "datepicker"}
                .col-md-3
                  = w.input :end_at, as: :string, input_html: {class: "datepicker"}
                .col-md-2
                  = w.input :period_part
                .col-md-2
                  = w.input :period_labour
                .col-md-2
                  = w.input :period_onsight
                .col-md-4
                  = label_tag "Warranty Type"
                  = w.select :warranty_type_id, WarrantyType.all.collect { |p| [ p.name, p.id ] }, include_blank: true
                .col-md-8
                  = w.input :remarks, label: "Inventory Serial Warranty Remarks"
        .row.col-md-12
          = f.submit "Add Serial Item", class: "btn btn-success"
    .update_item_class.hide
      - grn_serial_item = spare_part.ticket_spare_part_store.try(:srr_item).try(:srr_item_sources).try(:first).try(:gin_source).try(:grn_serial_item_id)
      - i = InventorySerialItem.find(grn_serial_item)
      = simple_form_for i, url: "#" do |f|
        .row.col-md.12
          .col-md-4
            = label_tag "Product condition"
            = f.select :product_condition_id, ProductCondition.all.collect { |p| [ p.condition, p.id ] }, include_blank: true
          .col-md-2
            = f.input :scavenge, as: :boolean, wrapper: :append
          .col-md-2
            = f.input :parts_not_completed, as: :boolean, wrapper: :append
          .col-md-2
            = f.input :used, as: :boolean, wrapper: :append
          .col-md-2
            = f.input :repaired, as: :boolean, wrapper: :append
        .row.col-md-12
          .col-md-4
            = f.input :damage, as: :boolean, wrapper: :append
          .col-md-8 
            = f.simple_fields_for :grn_serial_items do |grn_serial_item|
              = grn_serial_item.simple_fields_for :damages do |d|
                = label_tag "Damage Reason"
                = d.select :damage_reason_id, InventoryReason.all.where(damage: true).map{|r| [r.reason, r.id]}, include_blank: true
        .row.col-md.12
          .col-md-6
            = f.input :remarks, label: "Inventory Serial Item Remarks"
          .col-md-6
        .row.col-md.12
          = f.submit "Update Serial Item", class: "btn btn-success"
  - else
    - if spare_part.ticket_spare_part_store.try(:srr_item).try(:srr_item_sources).try(:first).try(:gin_source).try(:grn_batch_id).present?
      =radio_button("radio_batch", "radio_batch", "add_batch", checked: true, :class => "add_new_bundle")
      =label_tag :type_order, "Add New Batch"
      = radio_button("radio_batch", "radio_batch", "update_batch", :class => "update_bundle")
      =label_tag :type_order, "Update Existing Batch"

      .add_batch
        - i = InventoryBatch.new
        = simple_form_for i, url: "#" do |f|
          .row.col-md.12
            = f.simple_fields_for :inventory_serial_items do |isi|
              .col-md-6
                / = isi.input :damage, as: :boolean, wrapper: :append
              .col-md-6
                = isi.simple_fields_for :grn_serial_items do |grn_serial_item|
                  = grn_serial_item.simple_fields_for :damages do |d|
                    / = label_tag "Damage Reason"
                    / = d.select :damage_reason_id, InventoryReason.all.where(damage: true).map{|r| [r.reason, r.id]}, include_blank: true
          / above is common for add and update
          .row.col-md.12
            .col-md-3
              = f.input :lot_no
            .col-md-3
              = f.input :batch_no
            .col-md-3
              = f.input :manufatured_date, as: :string, input_html: {class: "datepicker"} 
            .col-md-3
              = f.input :expiry_date, as: :string, input_html: {class: "datepicker"}
          .row.col-md-12
            .col-md-6
              = f.input :remarks, label: "Inventory Batch Remarks", input_html: {value: nil}
          .row.col-md-12
            = f.simple_fields_for :inventory_serial_items do |isi|
              = isi.simple_fields_for :grn_items do |grn_item|
                .col-md-4
                  = grn_item.input :unit_cost
                .col-md-4
                  = label_tag "currency"
                  = grn_item.select :currency_id, Currency.all.collect { |curr| [ curr.currency, curr.id ] }, include_blank: true  
                .col-md-4
          .row.col-md-12
            = f.submit "Add Batch", class: "btn btn-success"
      .update_batch.hide
        - grn_batch_id = spare_part.ticket_spare_part_store.try(:srr_item).try(:srr_item_sources).try(:first).try(:gin_source).try(:grn_batch_id)
        - i = InventoryBatch.find(grn_batch_id)
        = simple_form_for i, url: "#" do |f|
          .row.col-md.12
            = f.simple_fields_for :inventory_serial_items do |isi|
              .col-md-6
                / = isi.input :damage, as: :boolean, wrapper: :append
              .col-md-6
                / = isi.simple_fields_for :grn_serial_items do |grn_serial_item|
                /   = grn_serial_item.simple_fields_for :damages do |d|
                /     = label_tag "Damage Reason"
                /     = d.select :damage_reason_id, InventoryReason.all.where(damage: true).map{|r| [r.reason, r.id]}, include_blank: true
          .row.col-md.12
            = f.submit "Update Batch", class: "btn btn-success"
    - else
      - if spare_part.ticket_spare_part_store.try(:srr_item).try(:srr_item_sources).try(:first).try(:gin_source).try(:grn_item_id).present?
        - grn_item_id = spare_part.ticket_spare_part_store.try(:srr_item).try(:srr_item_sources).try(:first).try(:gin_source).try(:grn_item_id)
        - i = GrnItem.find(grn_item_id)
        = simple_form_for i, url: "#" do |f|
          / damage boolean value not in grn item table.
          / = f.simple_fields_for :damages do |d|
          /   = label_tag "Damage Reason"
          /   = d.select :damage_reason_id, InventoryReason.all.where(damage: true).map{|r| [r.reason, r.id]}, include_blank: true
          = f.submit "Save", class: "btn btn-success"