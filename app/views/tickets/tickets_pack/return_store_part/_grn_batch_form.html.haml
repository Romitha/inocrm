= simple_form_for form_inv_batch, url: "#", html: {class: "form_inv_batch"} do |f|

  = hidden_field_tag :process_id, Rails.cache.fetch([uri.path, params[:task_id]])[:process_id]
  = hidden_field_tag :task_id, Rails.cache.fetch([uri.path, params[:task_id]])[:task_id]
  = hidden_field_tag :owner, Rails.cache.fetch([uri.path, params[:task_id]])[:owner]
  - Rails.cache.fetch([uri.path, params[:task_id]])[:bpm_input_variables].each do |bpm_input_variable|
    = hidden_field_tag bpm_input_variable[0], bpm_input_variable[1]
  - if f.object.new_record?
    = link_to "change product", inventory_in_modal_inventories_path(select_frame: "request_from"), id: "request_from_select", remote: true
    .request_from
    = f.input :product_id, as: :hidden, input_html: {id: "inv_product_id"}
  = f.input :inventory_batch_id, as: :hidden, input_html: {value: f.object.id}


  - if ticket_spare_part.is_a?(TicketOnLoanSparePart)
    - if ticket_spare_part.return_part_damage
      .col-md-3
        %strong Return part damage:
        %br/
        = ticket_spare_part.return_part_damage_reason.try(:reason)
  - else
    - if ticket_spare_part.ticket_spare_part_store.return_part_damage
      .col-md-3
        %strong Return part damage:
        %br/
        = ticket_spare_part.ticket_spare_part_store.return_part_damage_reason.try(:reason)
  .col-md-4
    .damage_reason_wrapper
      = label_tag "Damage"
      = check_box_tag :damage_reason_check, true, false, class: "damage_reason_check"
      = label_tag "Damage reason", "Damage reason", class: "damage_reason_label"
      = select_tag :damage_reason, options_from_collection_for_select(InventoryReason.where(damage: true), "id", "reason"), class: "damage_reason"

  .col-md-8
    = f.input :remarks, label: "Remarks", input_html: {value: nil}

  - if f.object.new_record?
    .row
      .col-md-3
        = f.input :lot_no
      .col-md-3
        = f.input :batch_no
      .col-md-3
        = f.input :manufatured_date, as: :string, input_html: {class: "datepicker"} 
      .col-md-3
        = f.input :expiry_date, as: :string, input_html: {class: "datepicker"}

      .col-md-3
        %label{for: "inventory_serial_part_unit_cody", class: "text optional control-label"}
          Unit cost (#{currency_code})
        %input{type: "number", id: "grn_item_unit_cost", name: "grn_item[unit_cost]", class: "numeric decimal optional form-control"}
    .row
      .col-md-12
        %hr
        = check_box_tag :warranty_check, true, false, class: "warranty_check"
        = label_tag "New warranty required", "New warranty required", class: "warranty_check_label"
        %hr
      = simple_form_for InventoryWarranty.new, url: "#" do |w|
        %fieldset.new_warranty.hide
          %legend New Warranty
          .col-md-3
            = w.input :start_at, as: :string, input_html: {class: "datepicker"}
          .col-md-3
            = w.input :end_at, as: :string, input_html: {class: "datepicker"}
          .col-md-3
            = w.input :period_part
          .col-md-3
            = w.input :period_labour
          .col-md-4
            = w.input :period_onsight
          .col-md-4
            = label_tag "Warranty Type"
            = w.select :warranty_type_id, WarrantyType.all.collect { |p| [ p.name, p.id ] }, include_blank: true
          .col-md-4
            = w.input :remarks

  .row
    .col-md-12
      = label_tag "Remarks"
      %textarea{class: "text optional form-control", name: "note"}
      = simple_format ticket_spare_part.note
    .col-md-12
      = link_to "Save", "#", onclick: "Inventories.submit_form('.form_inv_batch'); return false;", class: "btn btn-success"