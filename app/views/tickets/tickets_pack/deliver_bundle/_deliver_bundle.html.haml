- uri = URI(request.url)
.row
  .col-md-3
    %strong Bundle No:
    #{return_bundle.bundle_no}
  .col-md-3
    %strong Bundled Date:
    #{return_bundle.created_at.try(:strftime, "%Y-%m-%d")}
  .col-md-3
    %strong Brand Name:
    #{return_bundle.try(:product_brand).try(:name)}
  .col-md-3
    %strong Bundled By:
    #{User.cached_find_by_id(return_bundle.created_by).try(:email)}

.row.small_scale_margin-top1
  .col-md-3
    %strong Bundled Parts
    - if return_bundle.delivered
      .label.label-danger= "Delivered" 
.small_scale_margin-top1
  %table.table.table-bordered
    %thead
      %tr
        %th No
        %th Date Returned
        %th Part No
        %th Description
        %th Serial No
        %th Part Status
        %th Eventl No
        %th Ticket No
    %tbody
      - return_bundle_manufactures.each_with_index do |bundle_part, index|
        %tr
          %th=index+1
          %td=bundle_part.return_parts_bundle.try(:created_at).try(:strftime, "%m-%d-%Y")
          %td=bundle_part.ticket_spare_part.spare_part_no
          %td=bundle_part.ticket_spare_part.spare_part_description
          %td= bundle_part.ticket_spare_part.return_part_serial_no
          %td=SparePartStatusAction.find_by_id(bundle_part.ticket_spare_part.status_action_id).try(:name)
          %td=bundle_part.event_no
          %td=bundle_part.ticket_spare_part.ticket.ticket_no.to_s.rjust(6, INOCRM_CONFIG["ticket_no_format"])
.row.small_scale_margin-top1
  .col-md-12
    = simple_form_for return_bundle, url: update_deliver_bundle_tickets_path, method: :post do |f|

      = hidden_field_tag :process_id, Rails.cache.fetch([uri.path, params[:task_id]])[:process_id]
      = hidden_field_tag :task_id, Rails.cache.fetch([uri.path, params[:task_id]])[:task_id]
      = hidden_field_tag :owner, Rails.cache.fetch([uri.path, params[:task_id]])[:owner]
      - Rails.cache.fetch([uri.path, params[:task_id]])[:bpm_input_variables].each do |bpm_input_variable|
        = hidden_field_tag bpm_input_variable[0], bpm_input_variable[1]

      = f.input :id, as: :hidden
      = f.input :note, input_html: {value: nil}
      %P= return_bundle.note
      - if f.object.persisted?
        = link_to "#", onclick: "Users.request_printer_application('bundle_hp', '#{f.object.id}', 'bundle_hp_request_type', 'print_bundle_tag_value', 'print_bundle'); false;", data: {disable_with: "Printing..."}, class: "btn btn-default" do
            Print Bundle
      = f.submit "#{return_bundle.delivered ? 'continue' : 'deliver bundle'}", class: "btn btn-success btn-sm"
