- ticket = @ticket
- product = @product
- warranties = @warranties
- customer = ticket.customer
- histories = @histories
- join_tickets = @join_tickets
- pr_q_and_answers = @q_and_answers
- ge_q_and_as = @ge_q_and_answers
- uri = URI(request.url)
= render "tickets/tickets_pack/ticket_header", ticket: ticket, product: product

= tab_panel do
  = tab_nav_tab({class: "small_scale_margin-bottom2"}, ticket_info: {content: "Ticket info"}, assign_ticket: {content: "Assign ticket", active_class: "active"})
  .tab-content
    = tab_content tabpointer: :ticket_info do
      = tab_panel do
        = render "tickets/tickets_pack/ticket_info", ticket: ticket, product: product, customer: customer, warranties: warranties, histories: histories, join_tickets: join_tickets, ge_q_and_as: ge_q_and_as, pr_q_and_as: pr_q_and_answers
    = tab_content tabpointer: :assign_ticket, active_class: "active" do

      = simple_nested_form_for ticket, url: update_assign_ticket_tickets_path, method: :post do |f|
        = hidden_field_tag :process_id, Rails.cache.fetch([uri.path, params[:task_id]])[:process_id]
        = hidden_field_tag :task_id, Rails.cache.fetch([uri.path, params[:task_id]])[:task_id]
        = hidden_field_tag :owner, Rails.cache.fetch([uri.path, params[:task_id]])[:owner]
        - Rails.cache.fetch([uri.path, params[:task_id]])[:bpm_input_variables].each do |bpm_input_variable|
          = hidden_field_tag bpm_input_variable[0], bpm_input_variable[1]

        = f.simple_fields_for "user_ticket_actions_attributes[]", @user_ticket_action do |u|

          / = u.input :action_at, as: :hidden#, input_html: {value: DateTime.now.strftime("#{INOCRM_CONFIG['short_date_format']} #{INOCRM_CONFIG['time_format']}")}
          = u.input :action_id, as: :hidden
          = u.input :action_by, as: :hidden, input_html: {value: current_user.id}
          = u.input :re_open_index, as: :hidden, input_html: {value: ticket.re_open_count}

          = u.simple_fields_for "assign_regional_support_centers_attributes[]", @assign_regional_support_center do |ar|
            = u.simple_fields_for :user_assign_ticket_action do |ua|
              .row
                .col-md-3.small_scale_padding-top2
                  = ua.input :recorrection, wrapper: :append, input_html: {id: "pass_to_re_correction"}
                .col-md-3.small_scale_padding-top2.pass_to_recorrection_hiddible
                  = f.input :regional_support_job, label: "Regional Support Job", wrapper: :append
                .col-md-2
                  = f.association :ticket_type, as: :radio_buttons, wrapper: :append, input_html: {class: "ticket_type"}
                .col-md-2
                  = f.association :onsite_type, include_blank: false

                .col-md-2
                  .strong Job type
                  = f.select :job_type_id, options_from_collection_for_select(JobType.all, :id, :name), {}, {class: "form-control"}

              .pass_to_recorrection_hiddible
                .row
                  .regional_visible
                    .col-md-6
                      = ar.association :regional_support_center, collection: RegionalSupportCenter.where(active: true).collect{|r| [r.organization.name, r.id]}, input_html: {id: "regional_support_center"}
                    .col-md-6
                      = label_tag "Engineer", nil, class: "assign_to_for_regional_label"
                      = ua.select :assign_to, option_groups_from_collection_for_select(RegionalSupportCenter.all, :engineers, :id, :id, :full_name), {include_blank: false}, id: "assign_to_for_regional", class: "form-control"

                  .regional_hiddible
                    .col-md-6
                      %strong Assign SBU
                      = ua.select :sbu_id, options_from_collection_for_select(Sbu.all, :id, :sbu), {include_blank: true}, id: "assign_sbu", class: "form-control"
                    .col-md-6
                      %strong Engineer
                      = ua.select :assign_to, option_groups_from_collection_for_select(Sbu.all, :engineers, :sbu, :id, :full_name), {include_blank: false}, id: "assign_to", class: "form-control"

        .row
          .col-md-12
            = f.input :remarks, input_html: {value: nil}, placeholder: "Please enter remarks"
            %p= simple_format ticket.remarks

        = f.submit "Save", data: {disable_with: "Please wait..."}, class: "btn btn-success small_scale_margin-top1 small_scale_margin-bottom1"



%script{ type: "text/x-handlebars", id: "index"}
  %h2 Welcome to index
  <button class="btn btn-link" {{action "showGroupForm" }} > New group </button>
  {{#link-to "index"}} go to index {{/link-to}}

  {{outlet}}

  {{#if showGroupFormBool}}
  {{ new-group obj=newObj selectArray=selectArray ticketId="#{ticket.id}"  }}
  {{/if}}

%script{ type: "text/x-handlebars", id: "groups" }
  {{new-group}}


%script{type: "text/x-handlebars", id: "components/new-group"}
  %h2 Assign Engineer
  = form_tag "#" do
    {{obj.ticket_id}}
    .row
      .col-sm-6
        {{select-box optionArray=selectArray click=(action (mut obj.assignSbu) value="target.value") }}
        {{obj.assignSbu}}
      .col-sm-6
        {{select-box optionArray=selectArray click=(action (mut obj.assignTo) value="target.value") }}
        {{obj.assignTo}}

      .col-sm-12
        .row
          {{obj.subEng.length}}
          %h2 Support Engineers

          {{#each obj.subEng as |se|}}
          .col-sm-5
            {{select-box optionArray=selectArray click=(action (mut se.assignSbu) value="target.value") }}
            {{se.assignSbu}}
          .col-sm-5
            {{select-box optionArray=selectArray click=(action (mut se.assignTo) value="target.value") }}
            
          .col-sm-2
            <button {{action 'removeSubEng' se }}>Remove</button>

          {{/each}}

      .col-sm-6
        <button {{action 'addSubEng' obj }}>Add Sub Engineer</button>

    = submit_tag "save"

%script{type: "text/x-handlebars", id: "components/select-box"}
  {{optionArray}}
  {{#each optionArray as |option|}}
  <option value={{ option.id }} > {{option.name}} </option>
  {{/each}}