- ticket = @ticket
- product = @product
- warranties = @warranties
- customer = ticket.customer
- histories = @histories
- join_tickets = @join_tickets
- pr_q_and_answers = @q_and_answers
- ge_q_and_as = @ge_q_and_answers
- uri = URI(request.url)
= render "tickets/tickets_pack/ticket_header", ticket: ticket, product: product

= tab_panel do
  = tab_nav_tab({class: "small_scale_margin-bottom2"}, ticket_info: {content: "Ticket info"}, assign_ticket: {content: "Assign ticket", active_class: "active"})
  .tab-content
    = tab_content tabpointer: :ticket_info do
      = tab_panel do
        = render "tickets/tickets_pack/ticket_info", ticket: ticket, product: product, customer: customer, warranties: warranties, histories: histories, join_tickets: join_tickets, ge_q_and_as: ge_q_and_as, pr_q_and_as: pr_q_and_answers
    = tab_content tabpointer: :assign_ticket, active_class: "active" do
      .row
        = simple_nested_form_for ticket, url: update_assign_ticket_tickets_path, method: :post do |f|
          = hidden_field_tag :ticket_id, params[:ticket_id]

          = hidden_field_tag :process_id, Rails.cache.fetch([uri.path, params[:task_id]])[:process_id]
          = hidden_field_tag :task_id, Rails.cache.fetch([uri.path, params[:task_id]])[:task_id]
          = hidden_field_tag :owner, Rails.cache.fetch([uri.path, params[:task_id]])[:owner]
          - Rails.cache.fetch([uri.path, params[:task_id]])[:bpm_input_variables].each do |bpm_input_variable|
            = hidden_field_tag bpm_input_variable[0], bpm_input_variable[1]

          = f.simple_fields_for "user_ticket_actions_attributes[]", @user_ticket_action do |u|

            = u.input :action_at, as: :hidden, input_html: {value: DateTime.now.strftime("%Y-%m-%d %H:%M")}
            = u.input :action_id, as: :hidden
            = u.input :action_by, as: :hidden, input_html: {value: current_user.id}
            = u.input :re_open_index, as: :hidden, input_html: {value: ticket.re_open_count}

            .row
              .col-md-5.padding0
                = f.association :ticket_type, as: :radio_buttons, wrapper_html: {class: "col-md-6"}, wrapper: :append, input_html: {class: "ticket_type"}
                = f.input :regional_support_job, label: "Regional Support Job", wrapper_html: {class: "col-md-6"}, wrapper: :append
              .col-md-6
                .strong Job type
                = f.select :job_type_id, options_from_collection_for_select(JobType.all, :id, :name)#, {},{class: "col-md-11"}
            .row
              .col-md-4
                = u.simple_fields_for :user_assign_ticket_action do |ua|
                  = ua.input :recorrection, wrapper: :append
                  = label_tag "Engineer", nil, class: "assign_to_for_regional_label"
                  = ua.select :assign_to, option_groups_from_collection_for_select(RegionalSupportCenter.all, :engineers, :id, :id, :user_name), {include_blank: false}, id: "assign_to_for_regional"
                  .pass_to_recorrection_hiddable
                    .row
                      .col-md-6{style: "width: 50%;"}
                        %strong Assign SBU
                        = ua.select :sbu_id, options_from_collection_for_select(Sbu.all, :id, :sbu), {include_blank: true}, id: "assign_sbu", class: "col-md-12"
                      .col-md-6{style: "width: 50%;"}
                        %strong Engineer
                        = ua.select :assign_to, option_groups_from_collection_for_select(Sbu.all, :engineers, :sbu, :id, :user_name), {include_blank: false}, id: "assign_to", class: "col-md-12"
                .pass_to_recorrection_hiddable
                  = u.simple_fields_for "assign_regional_support_centers_attributes[]", @assign_regional_support_center do |ar|
                    .row
                      .col-md-12
                        = ar.association :regional_support_center, collection: RegionalSupportCenter.all.collect{|r| [r.organization.name, r.id]}, input_html: {id: "regional_support_center"}
          .row
            .col-md-12
              = f.input :remarks, input_html: {value: nil}, placeholder: "Please enter remarks"
              %p= simple_format ticket.remarks

          = f.submit "Save", data: {disable_with: "Please wait..."}, class: "btn btn-success small_scale_margin-top2 small_scale_margin-bottom2"