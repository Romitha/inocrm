- if params[:onloan_request] == "Y"
  - request_part = @onloan_spare_part
  .row
    .col-md-12
      %strong ON-LOAN Part Request
- else
  - request_part = spare_part.ticket_spare_part_store

.row
  .col-md-3
    %strong Part No: 
    #{spare_part.spare_part_no}
  .col-md-3
    %strong Part Status:
    #{spare_part.spare_part_status_action.try(:name)}
  .col-md-3
    %strong Part Description:
    #{spare_part.spare_part_description} 
  .col-md-3
    - if spare_part.cus_chargeable_part
      %strong Customer chargeable
    - else
      %strong Not customer chargeable

%h4 Requested spare part
%dl.dl-horizontal
  %dt Store
  %dd
    = request_part.store.name
  %dt Item Code
  %dd
    = request_part.inventory_product.serial_no
  %dt Item Description
  %dd
    = request_part.inventory_product.description
  %dt Model No
  %dd
    = request_part.inventory_product.model_no
  %dt Product No
  %dd
    = request_part.inventory_product.product_no
  %dt Part No
  %dd
    = request_part.inventory_product.spare_part_no
  %dt Available Qnty
  %dd
    = request_part.inventory_product.inventories.sum(:available_quantity)

%fieldset
  %legend Approve store part
  = simple_nested_form_for spare_part, url: update_approve_store_parts_tickets_path, method: :post, html: {id: "new_ticket_spare_part"} do |f|

    = f.simple_fields_for (params[:onloan_request] == "Y" ? "ticket_on_loan_spare_parts_attributes[]" : "ticket_spare_part_store_attributes"), (params[:onloan_request] == "Y" ? @onloan_spare_part : spare_part.ticket_spare_part_store) do |sto|
      = sto.input :store_id, as: :hidden, input_html: {id: "store_id"}
      = hidden_field_tag :mst_store_id, sto.object.store_id, id: "mst_store_id"
      = sto.input :inv_product_id, as: :hidden, input_html: {id: "inv_product_id"}
      - if params[:onloan_request] == "Y"
        = sto.input :main_inv_product_id, as: :hidden, input_html: {id: "mst_inv_product_id"}
      - else
        = sto.input :mst_inv_product_id, as: :hidden, input_html: {id: "mst_inv_product_id"}

      .row
        = f.input :close_approved, as: :radio_buttons, collection: {"Approved" => true, "Reject" => false}, wrapper: :append, label: false, wrapper_html: {class: "col-md-6"}
        = sto.input :part_of_main_product, as: :radio_buttons, collection: {"Part of a Main Product" => true, "Seperate Product" => false}, wrapper: :append, wrapper_html: {class: "col-md-6"}, label: false
      .row
        .col-md-6
          = link_to "Select", inventory_in_modal_inventories_path(select_frame: "request_from"), id: "request_from_select", remote: true
          .request_from
            %dl.dl-horizontal
              %dt Store
              %dd
                = sto.object.store.name
              %dt Item Code
              %dd
                = sto.object.inventory_product.serial_no
              %dt Item Description
              %dd
                = sto.object.inventory_product.description
              %dt Model No
              %dd
                = sto.object.inventory_product.model_no
              %dt Product No
              %dd
                = sto.object.inventory_product.product_no
              %dt Part No
              %dd
                = sto.object.inventory_product.spare_part_no
              %dt Available Qnty
              %dd
                = sto.object.inventory_product.inventories.sum(:available_quantity)
        .col-md-6
          = link_to "Select", inventory_in_modal_inventories_path(select_frame: "main_product"), id: "part_of_main_product_select", remote: true
          .main_product
            %dl.dl-horizontal
              %dt Store
              %dd
                = sto.object.store.name
              %dt Item Code
              %dd
                = sto.object.main_inventory_product.try(:serial_no)
              %dt Item Description
              %dd
                = sto.object.main_inventory_product.try(:description)
              %dt Model No
              %dd
                = sto.object.main_inventory_product.try(:model_no)
              %dt Product No
              %dd
                = sto.object.main_inventory_product.try(:product_no)
              %dt Part No
              %dd
                = sto.object.main_inventory_product.try(:spare_part_no)
              %dt Available Qnty
              %dd
                = sto.object.main_inventory_product.try(:inventories).try :sum, :available_quantity
    .row
      .col-md-12
        = f.input :note
        = f.submit "Save", class: "btn btn-success btn-sm"

#inventory_modal.modal.fade{tabindex: -1, role: "dialog", "aria-labelledby" => "inventory_modal", "aria-hidden" => true}
  .modal-dialog.modal-lg
    .modal-content