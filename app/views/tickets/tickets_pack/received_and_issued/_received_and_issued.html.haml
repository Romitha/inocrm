- uri = URI(request.url)
- request_spare_part_id = (params[:request_spare_part_id] or session[:request_spare_part_id])
- spare_part = TicketSparePart.find request_spare_part_id
- ticket_for_sp = spare_part.ticket


.row
  .col-md-12
    .btn-group.pull-right{"data-toggle"=>"buttons"}
      %label.btn.btn-warning{class: "#{ticket.status_hold ? 'active' : ''}"}
        %input#hold_button{type: "checkbox", value: "#{ticket.status_hold ? 'un_hold' : 'hold'}"}
          - if ticket.status_hold
            Un Hold
          - else
            Hold
.row
  .col-md-4
    %strong Activity: #{spare_part.ticket_spare_part_manufacture.try(:received_manufacture) ? "Issue part" : "Receive part"}


.row{style: "margin-top:5px;"}
  .col-md-4
    %strong Part Status:
    #{spare_part.spare_part_status_action.name}
  .col-md-4
    %strong Spare Part No:
    #{spare_part.spare_part_no}
  .col-md-4
    %strong Product Brand:
    #{spare_part.spare_part_brand_name}

.row
  .col-md-4
    %strong Part Description:
    #{spare_part.spare_part_description}
  .col-md-4
    %strong Faulty Serial No:
    #{spare_part.faulty_serial_no}
  .col-md-4
    %strong Faulty CT No:
    #{spare_part.faulty_ct_no}

.row
  .col-md-4
    %strong Order No:
    #{spare_part.ticket_spare_part_manufacture.try(:order_no)}
  .col-md-4
    %strong Event No:
    #{spare_part.ticket_spare_part_manufacture.try(:event_no)}
  .col-md-4
    %strong Requested quantity:
    = spare_part.ticket_spare_part_manufacture.try(:requested_quantity)
  .col-md-3
    %strong Requested By:
    = User.cached_find_by_id(spare_part.requested_by).try(:full_name)
  .col-md-3
    %strong Requested at:
    = spare_part.requested_at.try(:strftime, INOCRM_CONFIG['short_date_format'])

.row{style: "margin-top:10px;"}
  = simple_nested_form_for spare_part, url: update_received_and_issued_tickets_path, method: :post do |f|

    / = hidden_field_tag :process_id, session[:process_id]
    / = hidden_field_tag :task_id, session[:task_id]
    / = hidden_field_tag :owner, session[:owner]
    / - session[:bpm_input_variables].each do |bpm_input_variable|
    /   = hidden_field_tag bpm_input_variable[0], bpm_input_variable[1]

    = hidden_field_tag :process_id, Rails.cache.fetch([uri.path, params[:task_id]])[:process_id]
    = hidden_field_tag :task_id, Rails.cache.fetch([uri.path, params[:task_id]])[:task_id]
    = hidden_field_tag :owner, Rails.cache.fetch([uri.path, params[:task_id]])[:owner]
    - Rails.cache.fetch([uri.path, params[:task_id]])[:bpm_input_variables].each do |bpm_input_variable|
      = hidden_field_tag bpm_input_variable[0], bpm_input_variable[1]

    = f.input :received_part_serial_no, wrapper_html: {class: "col-md-6"}
    = f.input :received_part_ct_no, wrapper_html: {class: "col-md-6"}
    = f.input :note, wrapper_html: {class: "col-md-12"}, input_html: {value: nil}, label: "Spare Part Note"

    .col-md-12
      = f.input :part_terminated, wrapper: :append, input_html: {class: "part_terminated_reason_check"}

      .part_terminated_reason.hide

        = f.label "Part terminate reason"
        = f.select :part_terminated_reason_id, Reason.where(terminate_spare_part: true).map{|r| [r.reason, r.id]}, {include_blank: false}, {class: "part_terminated_select"}

    .col-md-12
      = simple_format f.object.note
    .col-md-12
      - if !spare_part.ticket_spare_part_manufacture.try(:received_manufacture)
        = label_tag "Issue", "Issue"
        = check_box_tag "issue", true, false

      %div{title: "#{'Part not yet collected' unless spare_part.ticket_spare_part_manufacture.try(:collected_manufacture)}"}= f.submit "Save", class: "btn btn-success", data: {disable_with: "Please wait..."}, disabled: (!spare_part.ticket_spare_part_manufacture.try(:collected_manufacture) or (spare_part.part_terminated))


#hold_modal.modal.fade{tabindex: -1, role: "dialog", "aria-labelledby" => "hold_modal", "aria-hidden" => true}
  .modal-dialog
    .modal-content
      .modal-header
        = link_to "X", "#", class: "close", data: {dismiss: "modal"}, "aria-label"=>"Close"
        %h4.modal-title Hold and Unhold
      .modal-body

= javascript_tag do
  var check_test = function() {
  if($(".part_terminated_reason_check").length > 0) {
  if($(".part_terminated_reason_check").is(":checked")) {
  $("input[type='submit']").prop('disabled', false);
  $("input[name='issue']").prop('disabled', true);
  } else {
  $("input[type='submit']").prop('disabled', true);
  $("input[name='issue']").prop('disabled', false);
  }
  };
  };

  check_test();

  $(".part_terminated_reason_check").change(check_test);