- ticket_estimation_parts = estimation.ticket_estimation_parts
- ticket_estimation_additionals = estimation.ticket_estimation_additionals

- total_additional_cost = ticket_estimation_additionals.to_a.sum{|e| estimation.approval_required ? e.approved_estimated_price : e.estimated_price }
- total_additional_tax = ticket_estimation_additionals.to_a.sum{|e| estimation.approval_required ? e.ticket_estimation_additional_taxes.sum(:approved_tax_amount) : e.ticket_estimation_additional_taxes.sum(:estimated_tax_amount) }

- total_part_cost = ticket_estimation_parts.to_a.sum{|e| estimation.approval_required ? e.approved_estimated_price : e.estimated_price }
- total_part_tax = ticket_estimation_parts.to_a.sum{|e| estimation.approval_required ? e.ticket_estimation_part_taxes.sum(:approved_tax_amount) : e.ticket_estimation_part_taxes.sum(:estimated_tax_amount) }

- final_tot_tax = total_part_tax + total_additional_tax
- total_estimation = total_part_cost + total_additional_cost

.row
  .col-md-4
    %strong Quotation No:
    - estimation.customer_quotations.where(canceled: false).each do |q|
      = q.customer_quotation_no
  .col-md-4
    %strong Status : #{estimation.estimation_status.name}
  .col-md-4
    %strong Customer Approval : #{estimation.cust_approved ? 'Approved' : (estimation.cust_approved.nil? ? '' : 'Rejected') }
%hr

- ticket_estimation_parts.each do |estimation_part|
  - part_store_or_non_stock = estimation_part.ticket_spare_part.ticket_spare_part_store or estimation_part.ticket_spare_part.ticket_spare_part_non_stock

  %h3 Part No: #{estimation_part.ticket_spare_part.try(:spare_part_no)}

  .row
    .col-md-2
      %h4 Estimation part
    .col-md-10
      %dl.dl-horizontal
        %dt Supplier
        %dd= estimation_part.supplier.try :name
        %dt Part No
        %dd= estimation_part.ticket_spare_part.try(:spare_part_no)
        %dt Part Description
        %dd= estimation_part.ticket_spare_part.try(:spare_part_description)
        %dt Cost Price (#{estimation.ticket.ticket_currency.code})
        %dd= standard_currency_format estimation_part.cost_price
        %dt Estimate Price (#{estimation.ticket.ticket_currency.code})
        %dd
          - if estimation.approval_required
            = standard_currency_format estimation_part.approved_estimated_price
          - else
            = standard_currency_format estimation_part.estimated_price

        %dt Required Qnty
        %dd= (estimation_part.ticket_spare_part.ticket_spare_part_store or estimation_part.ticket_spare_part.ticket_spare_part_manufacture or estimation_part.ticket_spare_part.ticket_spare_part_non_stock).requested_quantity
  %hr
  - if part_store_or_non_stock.present?
    .row
      .col-md-2
        %h4 Store item
      .col-md-4
        .request_from
          %dl.dl-horizontal
            - if part_store_or_non_stock.is_a? TicketSparePartStore
              %dt Store
              %dd
                = part_store_or_non_stock.store.try(:name)
            %dt Item Code
            %dd
              = part_store_or_non_stock.inventory_product.try(:generated_item_code)
            %dt Item Description
            %dd
              = part_store_or_non_stock.inventory_product.try(:description)
            %dt Model No
            %dd
              = part_store_or_non_stock.inventory_product.try(:model_no)
            %dt Product No
            %dd
              = part_store_or_non_stock.inventory_product.try(:product_no)
            %dt Part No
            %dd
              = part_store_or_non_stock.inventory_product.try(:spare_part_no)
            - if part_store_or_non_stock.is_a? TicketSparePartStore
              %dt Available Qnty
              %dd= part_store_or_non_stock.inventory_product and part_store_or_non_stock.inventory_product.inventories.find_by_store_id(estimation_part.ticket_spare_part.ticket_spare_part_store.store_id).try(:available_quantity)

            %dt Unit
            %dd= part_store_or_non_stock.inventory_product and part_store_or_non_stock.inventory_product.inventory_unit.unit

      - if part_store_or_non_stock.approved_inventory_product
        .col-md-2
          %h4 Part or main product
        .col-md-4
          .request_from
            %dl.dl-horizontal
              - if part_store_or_non_stock.is_a? TicketSparePartStore
                %dt Store
                %dd
                  = part_store_or_non_stock.store.try(:name)
              %dt Item Code
              %dd
                = part_store_or_non_stock.approved_inventory_product.try(:generated_item_code)
              %dt Item Description
              %dd
                = part_store_or_non_stock.approved_inventory_product.try(:description)
              %dt Model No
              %dd
                = part_store_or_non_stock.approved_inventory_product.try(:model_no)
              %dt Product No
              %dd
                = part_store_or_non_stock.approved_inventory_product.try(:product_no)
              %dt Part No
              %dd
                = part_store_or_non_stock.approved_inventory_product.try(:spare_part_no)
              - if part_store_or_non_stock.is_a? TicketSparePartStore
                %dt Available Qnty
                %dd= part_store_or_non_stock.approved_inventory_product and part_store_or_non_stock.approved_inventory_product.inventories.find_by_store_id(estimation_part.ticket_spare_part.ticket_spare_part_store.store_id).try(:available_quantity)

              %dt Unit
              %dd= part_store_or_non_stock.approved_inventory_product and part_store_or_non_stock.approved_inventory_product.inventory_unit.unit


  - if estimation_part.ticket_estimation_part_taxes.present?
    .row
      .col-md-2
        %h4 Estimation part taxes
      .col-md-10
        %table.table.table-striped
          %thead
            %tr
              %th Tax
              %th Tax rate(%)
              %th Tax amount (#{estimation.ticket.ticket_currency.code})
          %tbody
            - estimation_part.ticket_estimation_part_taxes.each do |part_tax|
              %tr
                %td= part_tax.tax.tax
                %td= part_tax.tax_rate
                %td
                  - if estimation.approval_required
                    = standard_currency_format part_tax.approved_tax_amount
                  - else
                    = standard_currency_format part_tax.estimated_tax_amount

  .row
    .col-md-12
      %strong Note :
      #{simple_format estimation_part.ticket_spare_part.try(:note)}
  %hr

.row
  .col-md-2
    %h4 Estimation part additionals
  .col-md-10
    - ticket_estimation_additionals.each do |ticket_estimation_additional|
      .panel-group
        .panel.panel-default
          .panel-heading
            .row
              .col-md-4
                %strong Additional Charges
                = ticket_estimation_additional.additional_charge.try(:additional_charge)
              .col-md-4
                %strong Cost Price(#{estimation.ticket.ticket_currency.code})
                = standard_currency_format ticket_estimation_additional.cost_price
              .col-md-4
                %strong Estimate Price (#{estimation.ticket.ticket_currency.code})
                - if estimation.approval_required
                  = standard_currency_format ticket_estimation_additional.approved_estimated_price
                - else
                  = standard_currency_format ticket_estimation_additional.estimated_price
          - if ticket_estimation_additional.ticket_estimation_additional_taxes.present?
            .panel-body
              %table.table.table-striped
                %thead
                  %tr
                    %th Tax
                    %th Tax rate (%)
                    %th Tax amount (#{estimation.ticket.ticket_currency.code})
                %tbody
                  - ticket_estimation_additional.ticket_estimation_additional_taxes.each do |additional_tax|
                    %tr
                      %td= additional_tax.tax.tax
                      %td= additional_tax.tax_rate
                      %td
                        - if estimation.approval_required
                          = standard_currency_format additional_tax.approved_tax_amount
                        - else
                          = standard_currency_format additional_tax.estimated_tax_amount


.row
  .col-md-2
    %h4 Final
  .col-md-10
    %table.table.table-striped{class: "text-right"}
      %thead
        %tr
          %th{colspan: 2, class: "text-right"} in (#{estimation.ticket.ticket_currency.code})

      %tbody
        %tr
          %td Total part estimated cost
          %td= standard_currency_format total_part_cost
        %tr
          %td Total additional estimated cost
          %td= standard_currency_format total_additional_cost
        %tr
          %td Total tax
          %td= standard_currency_format final_tot_tax
        %tr
          %td Total part estimated cost with tax (+ #{standard_currency_format(total_part_tax)})
          %td= standard_currency_format(total_part_cost + total_part_tax)
        %tr
          %td Total additional estimated cost with tax (+ #{standard_currency_format(total_additional_tax)})
          %td= standard_currency_format(total_additional_cost + total_additional_tax)
        %tr
          %th{class: "text-right"} Total amount
          %th{class: "text-right"}= standard_currency_format(total_estimation + final_tot_tax)
        %tr
          %td Min.advance payment
          %td= standard_currency_format estimation.advance_payment_amount
        %tr
          %td Advance payment recieved
          %td= standard_currency_format estimation.ticket.ticket_payment_receiveds.where(type_id: TicketPaymentReceivedType.find_by_code("AD").id).sum(:amount).to_i

.row
  .col-md-12
    - unless (estimation.estimation_status.code == "EST") and estimation.cust_approval_required and estimation.cust_approved.nil?
      %hr
      %strong Estimation note:
      = simple_format estimation.note

- if params[:template_action] != "ajax_show"
  - if (estimation.estimation_status.code == "EST") and estimation.cust_approval_required and !estimation.cust_approved and !estimation.ticket.job_finished
    %fieldset
      %legend Estimation customer approval
      = simple_form_for estimation, url: update_estimation_part_customer_approval_inventories_path do |f|

        = hidden_field_tag :process_id, Rails.cache.fetch(["/tickets/resolution", params[:task_id]])[:process_id]
        = hidden_field_tag :task_id, Rails.cache.fetch(["/tickets/resolution", params[:task_id]])[:task_id]
        = hidden_field_tag :owner, Rails.cache.fetch(["/tickets/resolution", params[:task_id]])[:owner]
        - Rails.cache.fetch(["/tickets/resolution", params[:task_id]])[:bpm_input_variables].each do |bpm_input_variable|
          = hidden_field_tag bpm_input_variable[0], bpm_input_variable[1]

        = f.input :id, as: :hidden

        = f.input :cust_approved_by, as: :hidden, input_html: {value: current_user.id}

        = f.input :cust_approved, as: :radio_buttons, collection: {approved: true, rejected: false}, wrapper: :append, label: false, input_html: {class: "approve_radio_button"}
        = f.input :note, input_html: {value: nil}
        = simple_format estimation.note

        - if estimation.ticket_estimation_parts.present? and not estimation.ticket_estimation_parts.first.ticket_spare_part.ticket_spare_part_non_stock.present?
          .request_part_check
            = label_tag "Request part"
            = check_box_tag :request_spare_part, true, (estimation.advance_payment_amount.to_f == 0)
        = f.submit "Save", class: "btn btn-success btn-sm"