- uri = URI(request.url)
- ticket = @ticket
- inform_email = []


- if  !@continue and @ticket_payment_received.new_record?
  = simple_nested_form_for @ticket_payment_received, url: update_customer_feedback_invoices_path, method: :post, remote: true, html: { class: "validate_form" } do |f|

    = hidden_field_tag :process_id, Rails.cache.fetch([uri.path, params[:task_id]])[:process_id]
    = hidden_field_tag :task_id, Rails.cache.fetch([uri.path, params[:task_id]])[:task_id]
    = hidden_field_tag :owner, Rails.cache.fetch([uri.path, params[:task_id]])[:owner]
    - Rails.cache.fetch([uri.path, params[:task_id]])[:bpm_input_variables].each do |bpm_input_variable|
      = hidden_field_tag bpm_input_variable[0], bpm_input_variable[1]

    .row
      - unless ticket.ticket_terminated
        .row
          .col-md-2
            = label_tag "Re-open"
            = check_box_tag :re_opened
          .col-md-6.hide#reopen_to_engineer
            = label_tag "Re-Open to Engineer"
            - ticket_engineer_by_channel = ticket.ticket_engineers.where(re_open_index: 0 ).group_by{|t| t.channel_no}.inject({}){|i, (k, v)| i.merge("channel_no:#{k}" => v.map { |e| [e.user.full_name, e.id] })}

            = select_tag :start_engineer_id, grouped_options_for_select(ticket_engineer_by_channel), class: "form-control", include_blank: "Root"

        %br/
      #unit_dispatch_wrapper
        .col-md-3
          = label_tag "Unit Returned to Customer"
          = check_box_tag :unit_return_customer, true, (ticket.ticket_type.code == 'IH'), disabled: (ticket.ticket_type.code != 'IH')
          %br/
          = label_tag "Dispatch method"
          = select_tag :dispatch_method_id, options_from_collection_for_select(DispatchMethod.all, :id, :name)
        .col-md-3
          = label_tag "Feedback"
          %br
          = select_tag :feedback_id, options_from_collection_for_select(Feedback.all, :id, :feedback), include_blank: true
        .col-md-4
          = label_tag "Feedback description"
          %br
          = text_area_tag :feedback_description, nil, class: "form-control"

    - if ticket.cus_payment_required
      %fieldset#ticket_payment_reciever_wrapper
        %legend Final Payment Required

        .row
          .col-md-3
            %strong Final Amount to be Paid (#{ticket.ticket_currency.code}):
            = number_with_precision ticket.final_amount_to_be_paid.to_f, precision: 2
            #final_amount_to_be_paids.hide= ticket.final_amount_to_be_paid.to_f
          .col-md-4
            = f.input :amount, input_html: {value: 0}, label: "Received amount"
          .col-md-4
            = f.input :receipt_description
          .col-md-2
            = label_tag "Payment type"
            = f.select :payment_type, INOCRM_CONFIG['TicketPaymentReceivedType'], class: "form-control"

          .col-md-4
            = f.input :payment_note, label: "Payment note (Ex: credit card no, cheque no, bank, etc...)"
          .col-md-5
            = f.input :note, input_html: {value: nil}
        .row
          .col-md-4
            = label_tag "Payment completed"
            = check_box_tag :payment_completed
        .row{style: "margin-top: 10px; margin-bottom: 10px;"}
          - inform_email << @ticket.send("contact_person#{@ticket.inform_cp}").contact_person_contact_types.find_by_contact_type_id(ContactType.find_by_name("E-mail").id).try(:value)
          - InformCustomer.where(ticket_action_id: @ticket.user_ticket_action_ids).each do |i|
            .row
              .col-md-3
                %strong Informed to customer:
                = i.ticket_contact_type.name
                / = i.contact_address
              .col-md-3
                %strong Informed at:
                = i.user_ticket_action.action_at.try(:strftime, "#{INOCRM_CONFIG['short_date_format']} #{INOCRM_CONFIG['time_format']}")
              .col-md-3
                %strong Informed by:
                = User.cached_find_by_id(i.user_ticket_action.action_by).full_name
              .col-md-3
                %strong Informed Note:
                = i.note

    - if EmailTemplate.find_by_code("CLOSED_JOB").try(:active)
      .col-md-12
        = check_box_tag "send_email", true, EmailTemplate.find_by_code("CLOSED_JOB").try(:default_enable)
        = label_tag "Send Email"
      .col-md-4
        = text_field_tag "email_to", inform_email.map{ |e| "to:#{e}" }.join(","), placeholder: "Enter email like 'to:a@email.com, cc:b@email.com'", class: "form-control small_scale_margin-bottom2"
        .hint
          Enter email like to:a@email.com, cc:b@email.com, cc:c@email.com. It can be multiple occurance. But to:... email must be one occurance. Please avoid space after to: and cc:
    = f.submit "Save", class: "btn btn-success", data: {disable_with: "Please wait..."}

- else
  .col-md-4
    - if @ticket_payment_received and @ticket_payment_received.persisted?
      .row
        .col-md-12
          = link_to "Print reciept", "#", class: "btn btn-sm btn-success", onclick: "Users.request_printer_application('receipt', '#{@ticket_payment_received.id}', 'receipt_request_type', 'print_receipt_tag_value', 'print_receipt', this); false;"

    - if ticket.try(:ticket_type_code) != "OS"
      .row
        .col-md-12
          = link_to "Print delivery", "#", class: "btn btn-sm btn-success", onclick: "Users.request_printer_application('ticket_complete', '#{ticket.try(:id)}', 'ticket_complete_request_type', 'print_ticket_delivery_note_tag_value', 'print_ticket_delivery_note', this); false;" if not params[:re_opened].present?