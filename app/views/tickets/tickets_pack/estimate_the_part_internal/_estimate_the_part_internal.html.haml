- uri = URI(request.url)
= simple_nested_form_for estimation, url: update_estimate_the_part_internal_inventories_path, method: :post do |f|

  = hidden_field_tag :process_id, Rails.cache.fetch([uri.path, params[:task_id]])[:process_id]
  = hidden_field_tag :task_id, Rails.cache.fetch([uri.path, params[:task_id]])[:task_id]
  = hidden_field_tag :owner, Rails.cache.fetch([uri.path, params[:task_id]])[:owner]
  - Rails.cache.fetch([uri.path, params[:task_id]])[:bpm_input_variables].each do |bpm_input_variable|
    = hidden_field_tag bpm_input_variable[0], bpm_input_variable[1]

  = f.simple_fields_for :ticket_estimation_parts do |t|
    .estimate_extend_with_tax

      %fieldset
        %legend Part No: #{t.object.ticket_spare_part.try(:spare_part_no)} (#{t.object.ticket_spare_part.ticket_spare_part_store ? 'Store' : t.object.ticket_spare_part.ticket_spare_part_manufacture.present? ? 'Manufacture' : t.object.ticket_spare_part.ticket_spare_part_non_stock.present? ? 'Non Stock' : ''})
        .row
          .col-md-3
            %strong Part No:
            #{t.object.ticket_spare_part.try(:spare_part_no)}
          .col-md-3
            %strong Part description:
            #{t.object.ticket_spare_part.try(:spare_part_description)}
          .col-md-3
            %strong Part status:
            #{t.object.ticket_spare_part.try(:spare_part_status_action).try(:name)}
        %hr
        - part_store_or_non_stock = (t.object.ticket_spare_part.ticket_spare_part_store or t.object.ticket_spare_part.ticket_spare_part_non_stock)
        / - paginate_grn_items = part_store_or_non_stock.inventory_product.grn_items.page(params[:page]).per(3)
        - if part_store_or_non_stock.present?
          .row
            .col-md-5
              %h4 Requested part
              .request_from
                %dl.dl-horizontal
                  - if part_store_or_non_stock.is_a? TicketSparePartStore
                    %dt Store
                    %dd
                      = part_store_or_non_stock.store.try(:name)
                  %dt Item Code
                  %dd
                    = part_store_or_non_stock.inventory_product.try(:serial_no)
                  %dt Item Description
                  %dd
                    = part_store_or_non_stock.inventory_product.try(:description)
                  %dt Model No
                  %dd
                    = part_store_or_non_stock.inventory_product.try(:model_no)
                  %dt Product No
                  %dd
                    = part_store_or_non_stock.inventory_product.try(:product_no)
                  %dt Part No
                  %dd
                    = part_store_or_non_stock.inventory_product.try(:spare_part_no)
                  - if part_store_or_non_stock.is_a? TicketSparePartStore
                    %dt Available Qnty
                    %dd
                      = part_store_or_non_stock.inventory_product.inventories.find_by_store_id(t.object.ticket_spare_part.ticket_spare_part_store.store_id).try(:available_quantity)

              .spare_part_select.pull-left
                = link_to "Change part", inventory_in_modal_inventories_path(select_frame: "request_from"), id: "request_from_select", remote: true

            .col-md-7
              #paginate_grns
                = paginate @paginate_grn_items, remote: false, method: :get, params: {controller: "tickets", action: "estimate_the_part_internal", per_page: 10}
                %table.table
                  %thead
                    %tr
                      %th No
                      %th GRN No.
                      %th Date Purchased
                      %th Price
                  %tbody
                    - @paginate_grn_items.each_with_index do |grn_item, index|
                      %tr
                        %td
                          - if params[:page]
                            = (index+1)+ 10**(params[:page].to_i-1)
                          - else
                            = (index+1)
                        %td= grn_item.grn.grn_no
                        %td= grn_item.grn.created_at.try(:strftime, "%d-%m-%Y")
                        %td
                          = number_with_precision grn_item.unit_cost, precision: 2
                          (#{grn_item.currency.code})

        .row
          .col-md-3
            = t.simple_fields_for :ticket_spare_part do |p|
              = p.input :current_user_id, as: :hidden, input_html: {value: current_user.id}
              = p.input :note, input_html: {value: nil}
              = simple_format p.object.note

          - unless t.object.ticket_spare_part.ticket_spare_part_manufacture.present?
            .col-md-9.head_estimated_price_class
              .row
                .col-md-2
                  = t.association :supplier, collection: Organization.suppliers, input_html: {class: "est_internal_supplier"}
                .col-md-3
                  = t.input :cost_price, label: "Cost Price (#{ticket.ticket_currency.code})", input_html: {min: 0, class: "value_class only_float", oninput: "Inventories.calculate_cost_price(this);"}
                  .append_cost_price.hide
                    = number_with_precision (t.object.cost_price.to_f or 0), precision: 2
                .col-md-3
                  = t.input :estimated_price, label: "Est. Price (#{ticket.ticket_currency.code})", input_html: {min: 0, class: "estimation_value only_float", oninput: "Inventories.calculate_cost_price(this);"}, label: "Est. price"
                  .append_estimated_price.hide
                    = number_with_precision (t.object.estimated_price or 0), precision: 2
                .col-md-2
                  = t.input :warranty_period, input_html: {min: 0, class: "only_float"}, label: "Warranty(Months)"
                .col-md-2
                  %strong Profit (%):
                  .append_profit_margin{style: "font-weight:bold;font-size:125%;"}

              .panel-group
                .panel.panel-success
                  .panel-heading Taxes
                  .panel-body.tax_wrapper
                    = t.simple_fields_for :ticket_estimation_part_taxes do |ee|

                      .row.parent_class_set
                        .add_sign.col-md-3{style: "padding-top:2.5%;"}
                          = ee.link_to_remove class: "remove_c_t_v_link" do
                            %span.glyphicon.glyphicon-remove-sign

                        .col-md-3
                          = label_tag "Tax"
                          %br/
                          = ee.select :tax_id, Tax.all.map{|p| ["#{p.tax} (#{p.tax_rates.find_by_active(true).try(:rate).to_f}%)", p.id, {"data-default-amount" => p.tax_rates.find_by_active(true).try(:rate).to_f}]}, {include_blank: true}, {class: "payment_item_select tax_rate_calculation", onchange: "Inventories.payment_amount_select(this); return false;"}

                        .col-md-4
                          = ee.input :estimated_tax_amount, label: "Estimated tax amount (#{ticket.ticket_currency.code})", as: :string, input_html: {class: "estimated_tax_amount_class"}
                        .col-md-4
                          = ee.input :tax_rate,  as: :hidden, input_html: {id: "tax_rate_hidden_field_id", class: "payment_item_value"}

                    = t.link_to_add :ticket_estimation_part_taxes, class: "small_scale_padding-right2" do
                      %span.glyphicon.glyphicon-plus-sign
                      Tax


  .row
    .col-md-12
      .panel-group
        .panel.panel-info
          .panel-heading Estimation additionals
          .panel-body
            = f.simple_fields_for :ticket_estimation_additionals do |ta|
              = ta.input :ticket_id, as: :hidden, input_html: {value: ticket.id}
              .row.estimate_extend_with_tax
                .col-md-1.small_scale_padding-top2
                  = ta.link_to_remove class: "remove_c_t_v_link", onclick: "Inventories.remove_cost_estimation(this); return false;" do
                    %span.glyphicon.glyphicon-remove-sign
                .col-md-3
                  = label_tag "Additional charge"
                  %br/
                  = ta.select :additional_charge_id, AdditionalCharge.all.map{|p| [p.additional_charge, p.id, {"data-default-amount" => p.default_cost_price.to_f, "data-estimation-amount" => p.default_estimated_price.to_f}]}, {include_blank: true}, {class: "payment_item_select", onchange: "Inventories.payment_amount_select(this); return false;"}
                .col-md-3
                  = ta.input :cost_price, label: "Cost Price (#{ticket.ticket_currency.code})", input_html: { min: 0, class: "value_class payment_item_value only_float", oninput: "Inventories.calculate_cost_price(this);"}
                  .append_cost_price.hide
                    = number_with_precision (ta.object.cost_price.to_f or 0), precision: 2

                .col-md-3
                  = ta.input :estimated_price, label: "Estimated Price (#{ticket.ticket_currency.code})", input_html: {min: 0, class: "estimation_value estimated_value est_add_estimated_price only_float", oninput: "Inventories.calculate_cost_price(this);"}
                  .append_estimated_price.hide
                    = number_with_precision (ta.object.estimated_price.to_f or 0), precision: 2
                .col-md-2
                  %strong Profit(%):
                  .append_profit_margin{style: "font-weight:bold;font-size:125%;"}
                .col-md-12
                  .panel-group
                    .panel.panel-success
                      .panel-heading Additional taxes
                      .panel-body
                        = ta.simple_fields_for :ticket_estimation_additional_taxes do |e|

                          .row.parent_class_set
                            .add_sign.col-md-3{style: "padding-top:2.5%;"}
                              = e.link_to_remove class: "remove_c_t_v_link" do
                                %span.glyphicon.glyphicon-remove-sign

                            .col-md-3
                              = label_tag "Tax"
                              %br/
                              = e.select :tax_id, Tax.all.map{|p| ["#{p.tax} (#{p.tax_rates.find_by_active(true).try(:rate).to_f}%)", p.id, {"data-default-amount" => p.tax_rates.find_by_active(true).try(:rate).to_f}]}, {include_blank: true}, {class: "payment_item_select tax_rate_calculation", onchange: "Inventories.payment_amount_select(this); return false;"}
                            .col-md-3
                              = e.input :estimated_tax_amount, label: "Estimated tax amount (#{ticket.ticket_currency.code})", input_html: {min: 0, class: "estimated_tax_amount_class only_float"}
                            .col-md-3
                              = e.input :tax_rate,  as: :hidden, input_html: { class: "payment_item_value"}

                        = ta.link_to_add :ticket_estimation_additional_taxes, class: "small_scale_padding-right2" do
                          %span.glyphicon.glyphicon-plus-sign
                          Tax

            = f.link_to_add :ticket_estimation_additionals do
              %span.glyphicon.glyphicon-plus-sign
              Estimation additionals

  .row

  .row
    .col-md-3
      = f.input :id, as: :hidden
      = f.input :advance_payment_amount, as: :string, input_html: {class: "only_float", oninput: "Inventories.limit_payment_required(this); return false;"}, label: "Required advance payment amount"

    .col-md-3.col-md-offset-6
      %strong Total cost price:
      %span#total_cost_price= number_with_precision [f.object.ticket_estimation_parts.sum(:cost_price), f.object.ticket_estimation_additionals.sum(:cost_price)].sum, precision: 2
      %br
      %strong Total estimated price:
      %span#total_estimated_price.for_payment_limit= number_with_precision [f.object.ticket_estimation_parts.sum(:estimated_price), f.object.ticket_estimation_additionals.sum(:estimated_price)].sum, precision: 2
      %br
      %strong Total profit (%):
      %span#total_margin_price{style: "font-weight:bold;"}
      %span (
      %span#db_margin{style: "font-weight:bold;"}= CompanyConfig.first.try(:sup_external_job_profit_margin).to_f
      %span )

    .col-md-12
      = hidden_field_tag :estimate_low_margin, id: "estimate_low_margin"
      = f.input :note, input_html: {value: nil}
      = simple_format estimation.note


  .row{style: "margin-bottom:10px;"}
    .col-md-12
      = label_tag "Estimation complete"
      = check_box_tag :estimation_complete_check, true, true
      = f.submit "Save", class: "btn btn-success btn-sm", onclick: "Tickets.presence_validater(this, {presence: ['.est_internal_supplier', '.est_internal_cost_price', '.est_internal_estimated_price', '.est_internal_warranty']}); return false;"

#inventory_modal.modal.fade{tabindex: -1, role: "dialog", "aria-labelledby" => "inventory_modal", "aria-hidden" => true}
  .modal-dialog.modal-lg
    .modal-content