- uri = URI(request.url)
= simple_nested_form_for estimation, url: update_estimate_the_part_internal_inventories_path, method: :post do |f|

  = hidden_field_tag :process_id, Rails.cache.fetch([uri.path, params[:task_id]])[:process_id]
  = hidden_field_tag :task_id, Rails.cache.fetch([uri.path, params[:task_id]])[:task_id]
  = hidden_field_tag :owner, Rails.cache.fetch([uri.path, params[:task_id]])[:owner]
  - Rails.cache.fetch([uri.path, params[:task_id]])[:bpm_input_variables].each do |bpm_input_variable|
    = hidden_field_tag bpm_input_variable[0], bpm_input_variable[1]

  = f.simple_fields_for :ticket_estimation_parts do |t|

    %fieldset
      %legend Part No: #{t.object.ticket_spare_part.try(:spare_part_no)} (#{t.object.ticket_spare_part.ticket_spare_part_store ? 'Store' : t.object.ticket_spare_part.ticket_spare_part_manufacture.present? ? 'Manufacture' : t.object.ticket_spare_part.ticket_spare_part_non_stock.present? ? 'Non Stock' : ''})
      .row
        .col-md-3
          %strong Part No:
          #{t.object.ticket_spare_part.try(:spare_part_no)}
        .col-md-3
          %strong Part description:
          #{t.object.ticket_spare_part.try(:spare_part_description)}
        .col-md-3
          %strong Part status:
          #{t.object.ticket_spare_part.try(:spare_part_status_action).try(:name)}
      %hr
      - if t.object.ticket_spare_part.ticket_spare_part_store.present?
        .row
          .col-md-5
            %h4 Requested part
            .request_from
              %dl.dl-horizontal
                %dt Store
                %dd
                  = t.object.ticket_spare_part.ticket_spare_part_store.store.try(:name)
                %dt Item Code
                %dd
                  = t.object.ticket_spare_part.ticket_spare_part_store.inventory_product.try(:serial_no)
                %dt Item Description
                %dd
                  = t.object.ticket_spare_part.ticket_spare_part_store.inventory_product.try(:description)
                %dt Model No
                %dd
                  = t.object.ticket_spare_part.ticket_spare_part_store.inventory_product.try(:model_no)
                %dt Product No
                %dd
                  = t.object.ticket_spare_part.ticket_spare_part_store.inventory_product.try(:product_no)
                %dt Part No
                %dd
                  = t.object.ticket_spare_part.ticket_spare_part_store.inventory_product.try(:spare_part_no)
                %dt Available Qnty

            .spare_part_select.pull-left
              = link_to "Change part", inventory_in_modal_inventories_path(select_frame: "request_from"), id: "request_from_select", remote: true

          .col-md-7
            #paginate_grns
              = paginate grn_items, remote: true, method: :get, params: {controller: "tickets", action: "paginate_ticket_grn_items", per_page: 3}
              %table.table
                %thead
                  %tr
                    %th No
                    %th Grn no
                    %th Date Purchased
                    %th Price
                %tbody
                  - grn_items.each_with_index do |grn_item, index|
                    %tr
                      %td= index+1
                      %td= grn_item.grn.grn_no
                      %td= grn_item.grn.created_at.try(:strftime, "%d-%m-%Y")
                      %td
                        = grn_item.unit_cost
                        (#{grn_item.currency.code})

      .row
        .col-md-4
          = t.simple_fields_for :ticket_spare_part do |p|
            = p.input :current_user_id, as: :hidden, input_html: {value: current_user.id}
            = p.input :note, input_html: {value: nil}
            = simple_format p.object.note

        - unless t.object.ticket_spare_part.ticket_spare_part_manufacture.present?
          .col-md-8.head_estimated_price_class
            .row
              .col-md-10
                = t.association :supplier, input_html: {class: "est_internal_supplier"}
              .col-md-3
                = t.input :cost_price, input_html: {min: "0", class: "est_internal_cost_price only_float", oninput: "Inventories.calculate_internal_cost_price();"}, label: false, placeholder: "Cost price"
                .append_cost_price_internal.hide
              .col-md-3
                = t.input :estimated_price, input_html: {min: "0", class: "est_internal_estimated_price est_estimated_amount only_float", oninput: "Inventories.calculate_internal_cost_price();"}, label: false, placeholder: "entimated price"
                .append_estimated_price_internal.hide
              .col-md-4
                = t.input :warranty_period, input_html: {min: "0", class: "est_internal_warranty only_float"}, label: false, placeholder: "Warranty period in months"
              .col-md-2
                %strong Profit:
                %span.append_profit_margin_internal{style: "font-weight:bold;"}
              .col-md-4
                .below_margine_append_profit_margin_internal

            .col-md-12
              .col-md-1
              .col-md-11
                = t.simple_fields_for :ticket_estimation_part_taxes do |ee|

                  .row.parent_class_set
                    .add_sign.col-md-3{style: "padding-top:2.5%;"}
                      = ee.link_to_remove class: "remove_c_t_v_link" do
                        %span.glyphicon.glyphicon-remove-sign

                    .col-md-3
                      = label_tag "Tax"
                      %br/
                      = ee.select :tax_id, Tax.all.map{|p| ["#{p.tax} (#{p.tax_rates.find_by_active(true).try(:rate).to_f}%)", p.id, {"data-default-amount" => p.tax_rates.find_by_active(true).try(:rate).to_f}]}, {include_blank: true}, {class: "payment_item_select tax_rate_calculation", onchange: "Inventories.payment_amount_select(this); return false;"}

                    .col-md-4
                      - if t.object.approval_required == true
                        = ee.input :approved_tax_amount, as: :string, input_html: {class: "estimated_tax_amount_class"}
                      - else
                        = ee.input :estimated_tax_amount, as: :string, input_html: {class: "estimated_tax_amount_class"}
                    .col-md-4
                      = ee.input :tax_rate,  as: :hidden, input_html: {id: "tax_rate_hidden_field_id", class: "payment_item_value"}

                = t.link_to_add :ticket_estimation_part_taxes, class: "small_scale_padding-right2" do
                  %span.glyphicon.glyphicon-plus-sign
                  Add tax


  .row
    .col-md-12
      .panel-group
        .panel.panel-info
          .panel-heading Estimation additionals
          .panel-body
            = f.simple_fields_for :ticket_estimation_additionals do |ta|
              = ta.input :ticket_id, as: :hidden, input_html: {value: ticket.id}
              .row.estimate_extend_with_tax
                .col-md-1.small_scale_padding-top2
                  = ta.link_to_remove class: "remove_c_t_v_link" do
                    %span.glyphicon.glyphicon-remove-sign
                .col-md-3
                  = label_tag "Additional charge"
                  %br/
                  = ta.select :additional_charge_id, AdditionalCharge.all.map{|p| [p.additional_charge, p.id, {"data-default-amount" => p.default_cost_price.to_f, "data-estimation-amount" => p.default_estimated_price.to_f}]}, {include_blank: true}, {class: "payment_item_select", onchange: "Inventories.payment_amount_select(this); return false;"}
                .col-md-3
                  = ta.input :cost_price, as: :string, input_html: {class: "value_class payment_item_value", oninput: "Inventories.calculate_cost_price(this);"}
                  .append_cost_price.hide
                    = ta.object.cost_price.to_f

                .col-md-3
                  = ta.input :estimated_price, as: :string, input_html: {class: "estimation_value estimated_value est_add_estimated_price", oninput: "Inventories.calculate_cost_price(this);"}
                  .append_estimated_price.hide
                    = ta.object.estimated_price.to_f
                .col-md-2
                  %strong Profit(%):
                  .append_profit_margin{style: "font-weight:bold;font-size:125%;"}
                .col-md-12
                  .panel-group
                    .panel.panel-success
                      .panel-heading Additional taxes
                      .panel-body
                        = ta.simple_fields_for :ticket_estimation_additional_taxes do |e|

                          .row.parent_class_set
                            .add_sign.col-md-3{style: "padding-top:2.5%;"}
                              = e.link_to_remove class: "remove_c_t_v_link" do
                                %span.glyphicon.glyphicon-remove-sign

                            .col-md-3
                              = label_tag "Tax"
                              %br/
                              = e.select :tax_id, Tax.all.map{|p| ["#{p.tax} (#{p.tax_rates.find_by_active(true).try(:rate).to_f}%)", p.id, {"data-default-amount" => p.tax_rates.find_by_active(true).try(:rate).to_f}]}, {include_blank: true}, {class: "payment_item_select tax_rate_calculation", onchange: "Inventories.payment_amount_select(this); return false;"}
                            .col-md-3
                              - if t.object.approval_required == true
                                = e.input :approved_tax_amount, as: :string, input_html: {class: "estimated_tax_amount_class"}
                              - else
                                = e.input :estimated_tax_amount, as: :string, input_html: {class: "estimated_tax_amount_class"}
                            .col-md-3
                              = e.input :tax_rate,  as: :hidden, input_html: { class: "payment_item_value"}

                        = ta.link_to_add :ticket_estimation_additional_taxes, class: "small_scale_padding-right2" do
                          %span.glyphicon.glyphicon-plus-sign
                          Tax

            = t.link_to_add :ticket_estimation_additionals do
              %span.glyphicon.glyphicon-plus-sign
              Estimation additionals

  .row
    .col-md-2

      %strong Total Cost:
      %span#total_internal_cost_price

    .col-md-2

      %strong Total Estimate:
      %span#total_internal_estimated_price

    .col-md-3
      %strong Total profit:
      %span#total_internal_margin_price{style: "font-weight:bold;"}
      %span (
      %span#db_margin{style: "font-weight:bold;"}= CompanyConfig.first.try(:sup_internal_part_profit_margin).to_f
      %span )
      %span %
    .col-md-5
      .below_margine_total_internal_margin_price
      = hidden_field_tag :estimate_low_margin
  %hr

  .row
    .col-md-3
      = f.input :advance_payment_amount, input_html: {min: "0", class: "only_float", value: 0}

  .row
    .col-md-5
      = f.input :note, input_html: {value: nil}
      = simple_format estimation.note

  .row{style: "margin-bottom:10px;"}
    .col-md-12
      = label_tag "Estimation complete"
      = check_box_tag :estimation_complete_check, true, true
      = f.submit "Save", class: "btn btn-success btn-sm", onclick: "Tickets.presence_validater(this, {presence: ['.est_internal_supplier', '.est_internal_cost_price', '.est_internal_estimated_price', '.est_internal_warranty']}); return false;"

#inventory_modal.modal.fade{tabindex: -1, role: "dialog", "aria-labelledby" => "inventory_modal", "aria-hidden" => true}
  .modal-dialog.modal-lg
    .modal-content