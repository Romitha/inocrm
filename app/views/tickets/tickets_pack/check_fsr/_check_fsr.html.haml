- uri = URI(request.url)
- engineer_id = params["supp_engr_user"]
- ticket_workfows = ticket.ticket_workflow_processes.where process_id: params[:process_id]
- job_engineers =  ticket.ticket_engineers.where(workflow_process_id: ticket_workfows.first.try(:id))

= simple_nested_form_for ticket, url: update_check_fsr_ticket_path(ticket.id), method: :post do |f|

  = hidden_field_tag :process_id, Rails.cache.fetch([uri.path, params[:task_id]])[:process_id]
  = hidden_field_tag :task_id, Rails.cache.fetch([uri.path, params[:task_id]])[:task_id]
  = hidden_field_tag :owner, Rails.cache.fetch([uri.path, params[:task_id]])[:owner]

  - Rails.cache.fetch([uri.path, params[:task_id]])[:bpm_input_variables].each do |bpm_input_variable|
    = hidden_field_tag bpm_input_variable[0], bpm_input_variable[1]


  .row
    - if ticket.re_open_count > 0
      .col-md-3
        Current Re-Open No.:
        %strong= job_engineers.first.try(:re_open_index)

    .col-md-6.col-xs-6
      %h4 Job belongs to: #{job_engineers.map{|eng| eng.user.full_name}.join(", ")}
      Job Completed (Approve To Close):
      = check_box_tag :job_close_approved, true, true, id: "ticket_close_approved_check", class: "hide"
      %strong.check_box_value_label

    .col-md-6.col-xs-6#close_approve_reject_reason
      = f.label "Reject Reason"
      = select_tag :reject_reason_id,  options_for_select(Reason.where(reject_close: true).map {|r| [r.reason, r.id] }), include_blank: false
  .row.col-md-12.col-xs-12
    %fieldset
      %legend
        Parts Ordered
      .row.col-md-12
        .col-md-3
          Replaced parts
        .col-md-4
          %h4 Manufacture Parts Return Required: #{CompanyConfig.first.sup_mf_parts_return_required ? 'Yes' : 'No'}
          %strong No of Return pending parts:
          = f.object.ticket_spare_parts.where(part_terminated: false, part_returned: false, engineer_id: job_engineers.ids).count

        .col-md-4
          %strong No of un-closed events:
          = f.object.ticket_spare_parts.joins(:ticket_spare_part_manufacture).where(spt_ticket_spare_part_manufacture: {event_closed: false}, engineer_id: job_engineers.ids).count

      - if f.object.ticket_spare_parts.present?
        %hr
        %h4 Requested manufacture and store spare parts
        %table.table
          %thead
            %tr
              %th No
              %th Part No
              %th Description
              %th Request Type
              %th Status
              %th Used status
              %th Part Returned
              %th Quantity
              %th Return Accepted
              %th Event No
              %th Event Closed
              %th Return Part S/N
              %th PO Required
              %th Note
              %th Approved
          %tbody
            - f.object.ticket_spare_parts.where(part_terminated: false, engineer_id: job_engineers.ids).each_with_index do |tsp, i|
              %tr
                %th= i+1
                %td #{tsp.spare_part_no}
                %td #{tsp.spare_part_description}
                %td= tsp.request_from == "M" ? "Manufacture" : tsp.request_from == "S" ? "Store" : "Non stock"
                %td= tsp.spare_part_status_action.name
                %td= tsp.spare_part_status_use.name
                %td= tsp.part_returned ? 'Yes' : 'No'
                %td= tsp.request_from == "M" ? tsp.ticket_spare_part_manufacture.requested_quantity : tsp.request_from == "S" ? tsp.ticket_spare_part_store.approved_quantity : tsp.ticket_spare_part_non_stock.approved_quantity
                %td= tsp.returned_part_accepted ? 'Yes' : 'No'
                %td= tsp.request_from == 'M' ? tsp.ticket_spare_part_manufacture.try(:event_no) : "-"
                %td= tsp.ticket_spare_part_manufacture.try(:event_closed) ? "Yes" : "No"
                %td= tsp.return_part_serial_no
                %td= tsp.ticket_spare_part_manufacture.try(:po_required) ? "Yes" : "No"
                %td{"type"=> "button", "class"=> "btn btn-link has-popover", "data-toggle"=> "popover", "title"=> "Spare Part Note", "data-content"=> simple_format(tsp.note), "data-html" => "true", "data-trigger" => "hover", "data-placement" => "right"}= truncate(tsp.note, length: 10)
                %td= check_box_tag :ticket_spare_part_ids, tsp.id, tsp.close_approved, name: "ticket_spare_part_ids[]", class: "dynamic_check"

      - if f.object.ticket_on_loan_spare_parts.present?
        %h4 Requested On loan spare parts
        %table.table
          %thead
            %tr
              %th No
              %th Description
              %th Quantity
              %th Status
              %th Used Status
              %th Part Returned
              %th Return Accepted
              %th Return Part S/N
              %th Approved
          %tbody
            - f.object.ticket_on_loan_spare_parts.where(part_terminated: false, engineer_id: job_engineers.ids).each_with_index do |tsp, i|
              %tr
                %th= i+1
                %td= simple_format tsp.approved_inventory_product.try(:description)
                %td= tsp.approved_quantity
                %td #{tsp.spare_part_status_action.name}
                %td #{tsp.spare_part_status_use.name}
                %td= tsp.part_returned ? 'Yes' : 'No'
                %td= tsp.ret_part_received ? 'Yes' : 'No'
                %td= tsp.return_part_serial_no
                %td= check_box_tag :ticket_on_loan_spare_part_ids, tsp.id, tsp.close_approved, name: "ticket_on_loan_spare_part_ids[]", class: "dynamic_check"
      .row.col-md-12.col-xs-12
        %p FSR Information
        = f.simple_fields_for :ticket_fsrs do |ff|
          - fsr = ff.object
          - if job_engineers.ids.include?(fsr.engineer_id.to_i)
            = ff.input :current_user_id, as: :hidden, input_html: {value: current_user.id}

            %button.btn.btn-info{"data-target" => "##{fsr.id}", "data-toggle" => "collapse", :type => "button"} FSR #{fsr.ticket_fsr_no.to_s.rjust(6, INOCRM_CONFIG["fsr_no_format"])}
            .collapse{:id => "#{fsr.id}"}
              .col-md-12
                %fieldset
                  %legend
                    FSR #{fsr.ticket_fsr_no.to_s.rjust(6, INOCRM_CONFIG["fsr_no_format"])}
                  .row
                    .col-md-3
                      %strong Form No:
                      = fsr.form_no
                  .row
                    .col-md-3
                      %strong Work Started:
                      = fsr.work_started_at.try(:strftime, "#{INOCRM_CONFIG['short_date_format']} #{INOCRM_CONFIG['time_format']}")
                    .col-md-3
                      %strong Work Finished:
                      = fsr.work_finished_at.try(:strftime, "#{INOCRM_CONFIG['short_date_format']} #{INOCRM_CONFIG['time_format']}")

                    .col-md-3
                      %strong Office In At:
                      = fsr.office_in_at.try(:strftime, "#{INOCRM_CONFIG['short_date_format']} #{INOCRM_CONFIG['time_format']}")
                    .col-md-3
                      %strong Office Out At:
                      = fsr.office_out_at.try(:strftime, "#{INOCRM_CONFIG['short_date_format']} #{INOCRM_CONFIG['time_format']}")
                  .row
                    .col-md-3
                      %strong FSR No:
                      = fsr.ticket_fsr_no.to_s.rjust(6, INOCRM_CONFIG["fsr_no_format"])
                    .col-md-3
                      %strong Hours Worked(hours):
                      = fsr.hours_worked
                    .col-md-3
                      %strong Down Time(hours):
                      = fsr.down_time
                    .col-md-3
                      %strong Travel(hours):
                      = fsr.travel_hours
                %hr
                - if fsr.ticket_fsr_support_engineers.present?
                  .col-md-6
                    %table.table
                      %thead
                        %tr
                          %th Engineer
                          %th Hours Worked (Hrs)
                      %tbody
                        - fsr.ticket_fsr_support_engineers.each_with_index do |eng, index|
                          %tr
                            %td= eng.ticket_support_engineer.user.full_name
                            %td= eng.hours_worked

                %hr
                .col-md-12
                  %h4 For Invoicing
                .col-md-3
                  %strong Engineer Time Travel:
                  = fsr.engineer_time_travel
                .col-md-3
                  %strong Engineer Time On-site:
                  = fsr.engineer_time_on_site
                .col-md-3
                  %strong Other Charges Mileage:
                  = fsr.other_mileage
                .col-md-3
                  %strong Other Charges Repairs:
                  = fsr.other_repairs
                .col-md-6
                  %strong Resolution:
                  = simple_format fsr.resolution
                .col-md-6
                  %strong Level of Completion:
                  = fsr.completion_level
                .col-md-12{style: "margin-top: 15px;"}
                  %p Replaced Parts
                  .col-md-12
                    %table.table
                      %thead
                        %tr
                          %th No
                          %th Part No
                          %th Description
                          %th Quantity
                          %th Return Accepted
                          %th Return Part S/N
                          %th Event No.
                          %th Event Closed
                      %tbody
                        - fsr.ticket_spare_parts.each_with_index do |tsp, i|
                          %tr
                            %th= i+1
                            %td= tsp.spare_part_no
                            %td= tsp.spare_part_description
                            %td= tsp.request_from == "M" ? tsp.ticket_spare_part_manufacture.requested_quantity : tsp.request_from == "S" ? tsp.ticket_spare_part_store.approved_quantity : tsp.ticket_spare_part_non_stock.approved_quantity

                            %td= tsp.returned_part_accepted ? "Yes" : "No"
                            %td= tsp.return_part_serial_no
                            %td= tsp.request_from == 'M' ? tsp.ticket_spare_part_manufacture.try(:event_no) : ""
                            %td= tsp.ticket_spare_part_manufacture.try(:event_closed) ? "Yes" : "No"

                  .col-md-3
                    = ff.label "Approve FSR"
                    = ff.check_box :approved, class: "dynamic_check"
                  .col-md-9
                    = ff.input :remarks, input_html: {value: nil}, label: "Fsr Remarks"
                    = simple_format ff.object.remarks
      .row.col-md-12.col-xs-12{style: "margin-top:20px; margin-bottom:20px;"}
        .col-md-6
          = f.label "Ticket owner engineer:"
          = f.select :owner_engineer_id, ticket.ticket_engineers.map{ |e| [e.user.full_name, e.id] }
        .col-md-12
          = f.input :remarks, input_html: {value: nil}, label: "Ticket Remarks"
          = simple_format f.object.remarks

        .col-md-6.col-xs-6
          = f.submit "Save", class: "btn btn-success"