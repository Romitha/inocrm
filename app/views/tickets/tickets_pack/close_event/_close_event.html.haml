- uri = URI(request.url)

- spare_part = @spare_part
- product = @product
.row
  .col-md-12
    %strong Activity: Close Event
%br
.row
  .col-md-3
    %strong Spare Part No:
    #{spare_part.spare_part_no}
  .col-md-3
    %strong Status:
    #{spare_part.spare_part_status_action.try(:name)}
  .col-md-3
    %strong Product Brand:
    #{product.product_brand.name}
  .col-md-3
    %strong Repair Time:
    - if spare_part.repare_start and spare_part.repare_end 
      %em{title: "#{spare_part.repare_start.strftime(INOCRM_CONFIG['short_date_format']+' '+INOCRM_CONFIG['time_format'])} - #{spare_part.repare_end.strftime(INOCRM_CONFIG['short_date_format']+' '+INOCRM_CONFIG['time_format'])} (#{convert_hours_minutes(spare_part.repare_end - spare_part.repare_start)})"}
        = distance_of_time_in_words spare_part.repare_start, spare_part.repare_end
    - elsif spare_part.repare_start
      %em= spare_part.repare_start.strftime("#{INOCRM_CONFIG['short_date_format']} #{INOCRM_CONFIG['time_format']}")

.row
  .col-md-3
    %strong Part Order No:
    #{spare_part.ticket_spare_part_manufacture.try(:order_no)}
  .col-md-3
    %strong Part Event No:
    #{spare_part.ticket_spare_part_manufacture.try(:event_no)}
  .col-md-3
    %strong Part Serial No:
    #{spare_part.faulty_serial_no}
  .col-md-3
    %strong Return Part Serial No:
    #{spare_part.return_part_serial_no}

.row
  .col-md-3
    %strong Part CT No:
    #{spare_part.faulty_ct_no}
  .col-md-3
    %strong Return CT No:
    #{spare_part.return_part_ct_no}
  .col-md-3
    %strong Part Description:
    #{spare_part.spare_part_description}
  .col-md-3
    %strong Requested quantity:
    = spare_part.ticket_spare_part_manufacture.try(:requested_quantity)

.row
  .col-md-3
    %strong Part used status:
    #{spare_part.spare_part_status_use.name}

  - if !["NAP", "USD"].include?(spare_part.spare_part_status_use.code)
    .col-md-3
      %strong Un Used Return Reason:
      #{Reason.find_by_id(spare_part.unused_reason_id).try(:reason)}
  .col-md-3
    %strong Part Returned :
    #{boolean_in_word spare_part.part_returned, "Yes", "No"}
  .col-md-3
    %strong Part Returned Date :
    #{spare_part.part_returned_at.try(:strftime, "#{INOCRM_CONFIG['short_date_format']} #{INOCRM_CONFIG['time_format']}")}

.row
  .col-md-3
    %strong Part Bundled Date :
    #{ticket.user_ticket_actions.select{|u| u.action_id == 45}.first.try(:strftime, "#{INOCRM_CONFIG['short_date_format']} #{INOCRM_CONFIG['time_format']}")}
  .col-md-3
    %strong Bundle Deliver Date :
    #{ticket.user_ticket_actions.select{|u| u.action_id == 46}.first.try(:strftime, "#{INOCRM_CONFIG['short_date_format']} #{INOCRM_CONFIG['time_format']}")}

.row
  .col-md-12
    %strong Problem Description :
    #{ticket.problem_description}

.row.small_scale_margin-top1
  .col-md-12
    = simple_nested_form_for spare_part, url: update_close_event_tickets_path, method: :post do |f|
      = f.simple_fields_for :ticket_spare_part_manufacture do |tm|
        = hidden_field_tag :process_id, Rails.cache.fetch([uri.path, params[:task_id]])[:process_id]
        = hidden_field_tag :task_id, Rails.cache.fetch([uri.path, params[:task_id]])[:task_id]
        = hidden_field_tag :owner, Rails.cache.fetch([uri.path, params[:task_id]])[:owner]
        - Rails.cache.fetch([uri.path, params[:task_id]])[:bpm_input_variables].each do |bpm_input_variable|
          = hidden_field_tag bpm_input_variable[0], bpm_input_variable[1]
        .row
          .col-md-6
            = tm.input :event_closed, label: "Event Closed (Claim Completed)",wrapper: :append, input_html: {checked: true, class: "hide"}
          .col-md-6
            = tm.input :po_required, label: "PO Required", wrapper: :append, input_html: { checked: true }
          .col-md-12
            = tm.input :payment_expected_manufacture, label: "Payment Expected (#{product.product_brand.currency.try(:code)})", input_html: {class: "only_float"}
          .col-md-12
            = f.input :note, input_html: {value: nil}
            = simple_format f.object.note
          .col-md-12
            = f.submit "Save", class: "btn btn-success", data: {disable_with: "Please wait..."}