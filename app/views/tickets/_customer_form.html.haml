- display_select_option = @display_select_option
- ticket = @ticket
- customer_contact_types = capture do
  - if existing_customer
    - existing_customer.contact_type_values.each do |contact_type_value|
      %strong= contact_type_value.contact_type.try(:name)
      = contact_type_value.value
      %br/

- priority = link_to "#", class: "inline_edit", data: {type: "select", source: INOCRM_CONFIG["priority"].collect{ |key,value| {value: value, text: key} }, resource: "ticket", name: "priority", url: ticket_update_tickets_path, "original-title" => "Update priority"} do
  = INOCRM_CONFIG["priority"].key(ticket.priority.to_i)

- problemcategory = link_to "#", class: "inline_edit", data: {type: "select", source: ProblemCategory.all.collect{|warranty| {value: warranty.id, text: warranty.name}}, resource: "ticket", name: "problem_category_id", url: ticket_update_tickets_path, "original-title" => "Update problem category"} do
  = ticket.problem_category.name

- problemdescription = link_to "#", class: "inline_edit", data: {type: "text", resource: "ticket", name: "problem_description", url: ticket_update_tickets_path, "original-title" => "Update problem description"} do
  = ticket.problem_description

- warranty = link_to "#", class: "inline_edit", data: {type: "select", source: WarrantyType.all.collect{|warranty| {value: warranty.id, text: warranty.name}}, resource: "ticket", name: "warranty_type_id", url: ticket_update_tickets_path, "original-title" => "Update Warranty type"} do
  = ticket.warranty_type.name

- tickettype = link_to "#", class: "inline_edit", data: {type: "select", source: TicketType.all.collect{|warranty| {value: warranty.id, text: warranty.name}}, resource: "ticket", name: "ticket_type_id", url: ticket_update_tickets_path, "original-title" => "Update ticket type"} do
  = ticket.ticket_type.name

- customerchargeable = link_to "#", class: "inline_edit", data: {type: "select", source: [{value: 1, text: "yes"},{value: 0, text: "no"}], resource: "ticket", name: "cus_chargeable", url: ticket_update_tickets_path, "original-title" => "Update cus chargeable"} do
  - if ticket.cus_chargeable == false
    no
  - else
    yes

- jobtype = link_to "#", class: "inline_edit", data: {type: "select", source: JobType.all.collect{|category| {value: category.id, text: category.name}}, resource: "ticket", name: "job_type_id", url: ticket_update_tickets_path, "original-title" => "Update Job Type"} do
  = ticket.job_type.name


.col-md-2.col-xs-12.col-sm-2{style: "padding-left:0;"}
  = tab_nav_tab({class: "tabs-left", id: "secondary_tab"}, job_info: {content: "Job info", active_class: "job_c"}, customer: {content: "Customer", active_class: "active customer_c"})
.col-md-10.col-xs-12.col-sm-10
  .tab-content
    = tab_content tabpointer: :job_info do
      = initiate_table table_type: "table-hover table-bordered" do
        = table_header ["Priority", "Problem category", "Problem description", "Warranty", "Ticket type", "Customer chargeable", "Job Type"]
        = table_body [priority, problemcategory, problemdescription, warranty, tickettype, customerchargeable, jobtype]
    = tab_content tabpointer: :customer, active_class: "active" do
      - if existing_customer
        = initiate_table table_type: "table-hover table-bordered" do
          = table_header ["Name", "Address", "Contacts"]
          = table_body ["#{existing_customer.mst_title.try(:name)} #{existing_customer.name}", "#{existing_customer.address1}, #{existing_customer.address2}, #{existing_customer.address3}, #{existing_customer.address4}, #{existing_customer.district.try(:name)}", customer_contact_types]

- unless ticket.ticket_contract.present?
  %strong.name_validate Customer
  = label_tag "Select Customer", class: "small_scale_margin-right1 small_scale_margin-left2" do
    = radio_button_tag "customer_select", "select", false, class: "radio_for_customer_select", onchange: "Tickets.customer_select('select'); false;"
    Select
  = label_tag "New Customer" do
    = radio_button_tag "customer_select", "create", false, class: "radio_for_customer_select", onchange: "Tickets.customer_select('create'); false;"
    New

- if display_select_option
  #new_customer_form
    - if @notice
      .alert.alert-success= @notice
    - elsif customer.errors.present?
      .alert.alert-danger{:role => "alert"}
        %button.close{"aria-label" => "Close", "data-dismiss" => "alert", :type => "button"}
          %span{"aria-hidden" => "true"} &times;
        %ul
          - customer.errors.full_messages.each do |error|
            %li= error
    %fieldset
      %legend New customer
      = simple_nested_form_for customer, url: create_customer_tickets_path, method: :post, remote: true, html: {id: "validate_contact_type", class: "validate_form"} do |f|
        = f.input :organization_id, as: :hidden
        .row
          .col-md-2
            = f.association :mst_title, label:"Title", collection: MstTitle.all.map{|t| [t.title, t.id]}, selected: 1
          .col-md-10
            = f.input :name
        .row
          .col-md-6
            .row
              .col-md-12
                = f.input :address1, label: "Address", placeholder: "Line 1"
              .col-md-12
                = f.input :address2, label: false, placeholder: "Line 2"
              .col-md-12
                = f.input :address3, label: false, placeholder: "Line 3"
              .col-md-12

                = f.input :address4, label: false, placeholder: "City"
              .col-md-12
                = f.association :district, label:"District"

          .col-md-6
            = f.simple_fields_for :contact_type_values do |fc|
              .row
                .col-md-1.padding-top1
                  = fc.link_to_remove class: "remove_c_t_v_link" do
                    %span.glyphicon.glyphicon-remove-sign
                .col-md-5
                  =label_tag "Contact type"
                  = fc.select :contact_type_id, ContactType.all.map {|c| [c.name, c.id]}, {}, class: "form-control", readonly: (fc.object.contact_type_id == 3)
                .col-md-6
                  = fc.input :value, required: (fc.object.contact_type_id == 3)

            .add_sign{style: "width: 100%;"}
              = f.link_to_add :contact_type_values, style: "clear: both;display: block;" do
                Add a contact type
                %span.glyphicon.glyphicon-plus-sign
        = link_to "Cancel", create_customer_tickets_path(customer_id: existing_customer.id), remote: true, method: :post, class: "btn btn-link", data: {disable_with: "Please wait..."} if existing_customer
        = f.submit "Save", class: "btn btn-success btn-sm", data: {disable_with: "Please wait..."}
- else
  .row
    .col-md-12
      = link_to "Back", find_by_serial_tickets_path(serial_search: product.serial_no, contract_id: ticket.contract_id), remote: true, method: :post, data: {disable_with: "Please wait..."}

      / "customer_id"=>"", "organization_id"=>"11", "function_param"=>"create"
      - if existing_customer.organization.present?
        = link_to "Next", create_customer_tickets_path(organization_id: existing_customer.organization.id, "function_param"=>"create"), remote: true, method: :post, class: "btn btn-success small_scale_margin-top2 small_scale_margin-bottom2", data: {disable_with: "Please wait..."}
      - elsif existing_customer
        = link_to "Next", create_customer_tickets_path(customer_id: existing_customer.id), remote: true, method: :post, class: "btn btn-success small_scale_margin-top2 small_scale_margin-bottom2", data: {disable_with: "Please wait..."}

#customer_modal.modal.fade{tabindex: -1, role: "dialog", "aria-labelledby" => "customer_modal", "aria-hidden" => true}
  .modal-dialog
    .modal-content