- display_select_option = @display_select_option
- ticket = @ticket
- customer_contact_types = capture do
  - if existing_customer
    - existing_customer.contact_type_values.each do |contact_type_value|
      %strong= contact_type_value.contact_type.try(:name)
      = contact_type_value.value
      %br/

- priority = link_to "#", class: "inline_edit", data: {type: "select", source: INOCRM_CONFIG["priority"].collect{ |key,value| {value: value, text: key} }, resource: "ticket", name: "priority", url: ticket_update_tickets_path, "original-title" => "Update priority"} do
  = INOCRM_CONFIG["priority"].key(ticket.priority.to_i)

- problemcategory = link_to "#", class: "inline_edit", data: {type: "select", source: ProblemCategory.all.collect{|warranty| {value: warranty.id, text: warranty.name}}, resource: "ticket", name: "problem_category_id", url: ticket_update_tickets_path, "original-title" => "Update problem category"} do
  = ticket.problem_category.name

- problemdescription = link_to "#", class: "inline_edit", data: {type: "text", resource: "ticket", name: "problem_description", url: ticket_update_tickets_path, "original-title" => "Update problem description"} do
  = ticket.problem_description

- warranty = link_to "#", class: "inline_edit", data: {type: "select", source: WarrantyType.all.collect{|warranty| {value: warranty.id, text: warranty.name}}, resource: "ticket", name: "warranty_type_id", url: ticket_update_tickets_path, "original-title" => "Update Warranty type"} do
  = ticket.warranty_type.name

- tickettype = link_to "#", class: "inline_edit", data: {type: "select", source: TicketType.all.collect{|warranty| {value: warranty.id, text: warranty.name}}, resource: "ticket", name: "ticket_type_id", url: ticket_update_tickets_path, "original-title" => "Update ticket type"} do
  = ticket.ticket_type.name

- customerchargeable = link_to "#", class: "inline_edit", data: {type: "select", source: [{value: 1, text: "yes"},{value: 0, text: "no"}], resource: "ticket", name: "cus_chargeable", url: ticket_update_tickets_path, "original-title" => "Update cus chargeable"} do
  = ticket.cus_chargeable

- informmethod = link_to "#", class: "inline_edit", data: {type: "select", source: InformMethod.all.collect{|category| {value: category.id, text: category.name}}, resource: "ticket", name: "informed_method_id", url: ticket_update_tickets_path, "original-title" => "Update Informed method name"} do
  = ticket.inform_method.name


= initiate_table table_type: "table-hover" do
  = table_header ["Priority", "Problem Category", "Problem description", "Warranty", "Ticket type", "Customer chargeable", "Informed Method"]
  = table_body [priority, problemcategory, problemdescription, warranty, tickettype, customerchargeable, informmethod]

- if existing_customer
  = initiate_table table_type: "table-hover" do
    = table_header ["Name", "Address", "Contacts"]
    = table_body ["#{existing_customer.mst_title.try(:name)} #{existing_customer.name}", "#{existing_customer.address1}, #{existing_customer.address2}, #{existing_customer.address3} #{existing_customer.address4}, #{existing_customer.district.try(:name)}", customer_contact_types]

= label_tag "Select Customer" do
  = radio_button_tag "customer_select", "select", false, class: "radio_for_customer_select", onchange: "Tickets.customer_select('select'); false;"
  Select Customer
= label_tag "New Customer" do
  = radio_button_tag "customer_select", "create", false, class: "radio_for_customer_select", onchange: "Tickets.customer_select('create'); false;"
  New Customer

- if display_select_option
  #new_customer_form
    - if @notice
      .alert.alert-success= @notice
    - elsif customer.errors.present?
      .alert.alert-danger{:role => "alert"}
        %button.close{"aria-label" => "Close", "data-dismiss" => "alert", :type => "button"}
          %span{"aria-hidden" => "true"} &times;
        %ul
          - customer.errors.full_messages.each do |error|
            %li= error
    %fieldset
      %legend New Customer
      = simple_nested_form_for customer, url: create_customer_tickets_path, method: :post, remote: true do |f|
        = f.input :organization_id, as: :hidden
        .row
          = f.association :mst_title, label:"Title", collection: MstTitle.all.map{|t| [t.title, t.id]},wrapper_html: {class:"col-md-1"}
          = f.input :name, wrapper_html: {class:"col-md-11"}
        .row
          = f.input :address1, wrapper_html: {class:"col-md-4"}
          = f.input :address2, wrapper_html: {class:"col-md-4"}
          = f.input :address3, wrapper_html: {class:"col-md-4"}
        .row
          = f.input :address4, label: "City", wrapper_html: {class:"col-md-6"}
          = f.association :district, label:"District", wrapper_html: {class:"col-md-6"}

        .row
          = f.simple_fields_for :contact_type_values do |fc|
            .col-md-6
              .add_sign
                = fc.link_to_remove class: "remove_c_t_v_link" do
                  %span.glyphicon.glyphicon-remove-sign
              .col-md-4
                %strong Contact Type
                %br/
                = fc.select :contact_type_id, ContactType.all.map {|c| [c.name, c.id]}, {}, class: "col-md-12 small_scale_margin-top5"

              = fc.input :value, wrapper_html: {class:"col-md-7"}

        .add_sign{style: "width: 100%;"}
          = f.link_to_add :contact_type_values, style: "clear: both;display: block;" do
            Add a Contact Type
            %span.glyphicon.glyphicon-plus-sign
        = f.submit "Customer"

- if existing_customer
  .row
  = link_to "Next", create_customer_tickets_path(customer_id: existing_customer.id), remote: true, method: :post, class: "btn-success btn", data: {disable_with: "Please wait..."}

#customer_modal.modal.fade{tabindex: -1, role: "dialog", "aria-labelledby" => "customer_modal", "aria-hidden" => true}
  .modal-dialog
    .modal-content