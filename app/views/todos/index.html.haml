- formatted_workflow_mapping_for_role = @formatted_workflow_mapping_for_role
- formatted_workflow_mapping_for_user = @formatted_workflow_mapping_for_user
- count = 0

- tab_hash = {user_details: {active_class: "active", content: "User (#{formatted_workflow_mapping_for_user.try(:count).to_i})"}}
- formatted_workflow_mapping_for_role.each{|k, v| count += v[:count].to_i; tab_hash.merge!({"role_#{k}" => {content: "#{v[:role_name]} (#{v[:count]})"}}) }

- if @err_message.present?
  .alert.alert-danger
    = @err_message

.row
  .col-xs-12.col-sm-6.col-md-8
    #todo_list 
      %p To Do list (#{@formatted_workflow_mapping_for_user.try(:count).to_i+count})
      %a{:href => todos_path} 
        %i.fa.fa-repeat

  .col-xs-6.col-md-4.hide
    #sort_by
      %p Sort by
      = select(:todolist, :sorted, options_for_select([["Date", "1"], ["Priority", "2"], ["Module", "3"]]))

#table
  = tab_panel do
    = tab_nav_tab({}, tab_hash)
    .tab-content
      = tab_content active_class: "active", tabpointer: "user_details" do
        .product
          - if formatted_workflow_mapping_for_user.is_a?(Array)
            - formatted_workflow_mapping_for_user.sort{|pf, lf| lf[:task_content]["created_on"].to_time <=> pf[:task_content]["created_on"].to_time}.each do |formatted_workflow_mapping|
              = render "to_do_list", formatted_workflow_mapping: formatted_workflow_mapping

      - formatted_workflow_mapping_for_role.each do |k, v|
        = tab_content tabpointer: "role_#{k}" do
          .product
            - if v[:role_content].is_a?(Array)

              - v[:role_content].sort{|pf, lf| lf[:task_content]["created_on"].to_time <=> pf[:task_content]["created_on"].to_time}.each do |formatted_workflow_mapping|
                = render "to_do_list", formatted_workflow_mapping: formatted_workflow_mapping