= render "admins/searches/inventory/serial_batch_non_header"

.row
  %table.table.table-striped
    %thead
      %tr
        %th No
        %th GRN No
        %th GRN Date
        %th Serial No
        %th CT No
        %th Condition
        %th Currency
        %th Current GRN Cost
        %th Addition Cost:
        %th Total Cost:
        %th Available:
        %th Action

    %tbody
      - @inventory_serial_items.each_with_index do |inventory_serial_item, index|
        - content_for :grn_more, flush: true do
          %ul
            / - unless @store.present?
            %strong Store:
            = inventory_serial_item.inventory.store_name
            / = Organization.find_by_id(inventory_serial_item.inventory_id).name
            %li
              %strong Repaired:
              = boolean_in_word inventory_serial_item.repaired, "Yes", "No"
            %li
              %strong Reserved:
              = boolean_in_word inventory_serial_item.reserved, "Yes", "No"
            - if inventory_serial_item.manufatured_date
              %li
                %strong Manufactured date:
                = inventory_serial_item.manufatured_date.to_date.strftime(INOCRM_CONFIG["short_date_format"])
            - if inventory_serial_item.expiry_date
              %li
                %strong Expiry date:
                = inventory_serial_item.expiry_date.to_date.strftime(INOCRM_CONFIG["short_date_format"])
            %li
              %strong Status
              = inventory_serial_item.inventory_serial_item_status.try(:name)
            %li
              %strong{title: "Parts Not Completed"} P.N.Compl.
              = boolean_in_word inventory_serial_item.parts_not_completed, "Yes", "No"
            %li
              %strong Scavenge
              = boolean_in_word inventory_serial_item.scavenge, "Yes", "No"
            %li
              %strong Used
              = boolean_in_word inventory_serial_item.used, "Yes", "No"
            %li
              %strong Damaged
              = boolean_in_word inventory_serial_item.damage, "Yes", "No"

          %strong Remarks:
          #{simple_format inventory_serial_item.remarks}

        %tr
          %td{ "type"=> "button", "class"=> "btn btn-link has-popover", "data-toggle"=> "popover", "title"=> "Serial No: #{inventory_serial_item.serial_no}", "data-content"=> "#{yield(:grn_more)}", "data-html" => "true", "data-trigger" => "hover", "data-placement" => "top" }
            - if params[:page]
              = (index+1) + 10*(params[:page].to_i-1)
            - else
              = (index+1)

          %td
            - inventory_serial_item.remaining_grn_items.each do |grn_item|
              = grn_item.grn.grn_no
          %td
            - inventory_serial_item.remaining_grn_items.each do |grn_item|
              = grn_item.created_at.to_date.strftime(INOCRM_CONFIG["short_date_format"])

          %td
            = inventory_serial_item.serial_no
          %td
            = inventory_serial_item.ct_no
          %td
            = inventory_serial_item.product_condition.try :condition

          %td
            - inventory_serial_item.remaining_grn_items.each do |grn_item|
              = grn_item.currency.code
          %td
            - inventory_serial_item.remaining_grn_items.each do |grn_item|
              = number_with_precision grn_item.current_unit_cost, precision: 2

          %td
            = number_with_precision inventory_serial_item.inventory_serial_items_additional_costs.sum{|c| c.cost.to_f }, precision: 2

          
          %td
            - inventory_serial_item.remaining_grn_items.each do |grn_item|
              = number_with_precision (inventory_serial_item.inventory_serial_items_additional_costs.sum{|c| c.cost.to_f } + grn_item.current_unit_cost.to_f), precision: 2
          %td
            = inventory_serial_item.inventory_serial_item_status.name

          %td
            = link_to "Select", inventories_admins_searches_path(select_action: "select_serial_item_more", inventory_serial_item_id: inventory_serial_item.id, store_id: @store.try(:id) )

.row
  .col-md-3.pull-right.text-right
    %strong Total Stock Cost : #{number_with_precision @total_stock_cost, precision: 2}

= paginate @inventory_serial_items, remote: false, method: :get