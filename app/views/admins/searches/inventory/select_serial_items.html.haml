- pr = @inv_pro
.col-md-12
  / %h4.strong Store: #{Inventory.find_by_store_id(@store).store_name}
.col-md-4
  Item Code:
  = pr.generated_item_code
.col-md-8
  Item Description:
  = pr.description
%strong
  .col-md-4
    Stock Quantity : #{Inventory.find_by_store_id(@store).stock_quantity}
  .col-md-4
    Reserved Quantity : #{Inventory.find_by_store_id(@store).reserved_quantity}
  .col-md-4
    Max Quantity : #{Inventory.find_by_store_id(@store).max_quantity}
.col-md-4
  Unit: #{pr.inventory_unit.unit}
.col-md-4
  Currency : #{pr.inventory_product_info.currency_type}
%strong
  .col-md-4
    Issue Type: #{pr.fifo == true ? "FIFO" : "Not FIFO"}

= paginate @inventory_serial_items, remote: false, method: :get

.row
  .col-md-1{style: "text-align:center"}
    %strong No
  .col-md-1
    %strong GRN No
  .col-md-1
    %strong GRN Date
  .col-md-1
    %strong Serial No
  .col-md-1
    %strong CT No
  .col-md-1
    %strong Condition
  .col-md-1
    %strong Status
  .col-md-1
    %strong{title: "Parts Not Completed"} P.N.Compl.
  .col-md-1
    %strong Scavenge
  .col-md-1
    %strong Damaged
  .col-md-1
    %strong Used
  .col-md-1
    %strong Action
%hr

- @inventory_serial_items.each_with_index do |inventory_serial_item, index|
  - content_for :grn_more, flush: true do
    %ul
      %li
        %strong Repaired:
        = boolean_in_word inventory_serial_item.repaired, "Yes", "No"
      %li
        %strong Reserved:
        = boolean_in_word inventory_serial_item.reserved, "Yes", "No"
      - if inventory_serial_item.manufatured_date
        %li
          %strong Manufactured date:
          #{inventory_serial_item.manufatured_date.to_date.strftime(INOCRM_CONFIG["short_date_format"])}
      - if inventory_serial_item.expiry_date
        %li
          %strong Expiry date:
          #{inventory_serial_item.expiry_date.to_date.strftime(INOCRM_CONFIG["short_date_format"])}
      %li
        %strong Currency:
        / = inventory_serial_item.inventory_product.inventory_product_info.try(:currency).try(:currency)
        - inventory_serial_item.grn_items.each do |grn_item|
          #{grn_item.currency.currency}

      %li
        %strong Current GRN Cost:
        - inventory_serial_item.grn_items.each do |grn_item|
          = number_with_precision grn_item.current_unit_cost, precision: 2
      %li
        %strong Addition Cost:
        = number_with_precision inventory_serial_item.inventory_serial_items_additional_costs.sum(:cost), precision: 2
      %li
        %strong Total Cost:
        - add_cost = inventory_serial_item.inventory_serial_items_additional_costs.sum(:cost)
        - inventory_serial_item.grn_items.each do |grn_item|
          - rem_q = grn_item.remaining_quantity
          - crnt_ucost = grn_item.current_unit_cost
          - tot_cost = add_cost+(rem_q*crnt_ucost)
          = number_with_precision tot_cost, precision: 2

      %li
        %strong Available:
        - inventory_serial_item.grn_items.each do |grn_item|
          = grn_item.remaining_quantity

    %strong Remarks:
    #{simple_format inventory_serial_item.remarks}
  .row
    .col-md-1{ "type"=> "button", "class"=> "btn btn-link has-popover", "data-toggle"=> "popover", "title"=> "Serial No: #{inventory_serial_item.serial_no}", "data-content"=> yield(:grn_more), "data-html" => "true", "data-trigger" => "hover", "data-placement" => "bottom" }
      - if params[:page]
        = (index+1) + 10*(params[:page].to_i-1)
      - else
        = (index+1)

    .col-md-1
      - inventory_serial_item.grn_items.each do |item|
        = item.grn.grn_no
        %br/
    .col-md-1
      - inventory_serial_item.grn_items.each do |item|
        = item.grn.created_at.to_date.strftime(INOCRM_CONFIG["short_date_format"])
        %br/
    .col-md-1
      = inventory_serial_item.serial_no
    .col-md-1
      = inventory_serial_item.ct_no
    .col-md-1
      = inventory_serial_item.product_condition.try :condition
    .col-md-1
      = inventory_serial_item.inventory_serial_item_status.try(:name)
    .col-md-1
      = boolean_in_word inventory_serial_item.parts_not_completed, "Yes", "No"
    .col-md-1
      = boolean_in_word inventory_serial_item.scavenge, "Yes", "No"
    .col-md-1
      = boolean_in_word inventory_serial_item.damage, "Yes", "No"
    .col-md-1
      = boolean_in_word inventory_serial_item.used, "Yes", "No"
    .col-md-1
      = link_to "Select", inv_searched_by_admins_searches_path(select_action: "select_serial_item_more", inventory_serial_item_id: inventory_serial_item.id, store: @store ), class: "btn btn-default btn-sm"
  %hr
= paginate @inventory_serial_items, remote: false, method: :get