- pr = @inv_pro
- inventories = pr.inventories
.row
  .col-md-12
    %strong Store:
    %span
      - if @store.present?
        = @store.name
      - else
        All stores

  .col-md-12
    = panels panel_type: "success", header_content: "#{pr.generated_item_code}" do
      .row
        .col-md-3
          %strong Item Code:
          = pr.generated_item_code
        .col-md-6
          %strong Item Description:
          = pr.description
        .col-md-3
          %strong Issue type:
          = boolean_in_word pr.fifo, "FIFO", "No FIFO"
        .col-md-3
          %strong Stock quantity:
          = inventories.sum(:stock_quantity)
        .col-md-3
          %strong Reserved quantity:
          = inventories.sum(:reserved_quantity)
        .col-md-3
          %strong Unit:
          = pr.inventory_unit.unit
        .col-md-3
          %strong Currency:
          = pr.inventory_product_info.currency_type

.row
  .col-md-1
    %strong No
  .col-md-1
    %strong GRN No
  .col-md-1
    %strong GRN Date
  .col-md-1
    %strong Serial No
  .col-md-1
    %strong CT No
  .col-md-1
    %strong Condition
  .col-md-1
    %strong Currency
  .col-md-1.text-right
    %strong Current GRN Cost
  .col-md-1.text-right
    %strong Addition Cost:
  .col-md-1.text-right
    %strong Total Cost:
  .col-md-1
    %strong Available:
  .col-md-1
    %strong Action
%hr

- @grn_serial_items.each_with_index do |grn_serial_item, index|
  - content_for :grn_more, flush: true do
    %ul
      %li
        %strong Repaired:
        = boolean_in_word grn_serial_item.inventory_serial_item.repaired, "Yes", "No"
      %li
        %strong Reserved:
        = boolean_in_word grn_serial_item.inventory_serial_item.reserved, "Yes", "No"
      - if grn_serial_item.inventory_serial_item.manufatured_date
        %li
          %strong Manufactured date:
          = grn_serial_item.inventory_serial_item.manufatured_date.to_date.strftime(INOCRM_CONFIG["short_date_format"])
      - if grn_serial_item.inventory_serial_item.expiry_date
        %li
          %strong Expiry date:
          = grn_serial_item.inventory_serial_item.expiry_date.to_date.strftime(INOCRM_CONFIG["short_date_format"])
      %li
        %strong Status
        = grn_serial_item.inventory_serial_item.inventory_serial_item_status.try(:name)
      %li
        %strong{title: "Parts Not Completed"} P.N.Compl.
        = boolean_in_word grn_serial_item.inventory_serial_item.parts_not_completed, "Yes", "No"
      %li
        %strong Scavenge
        = boolean_in_word grn_serial_item.inventory_serial_item.scavenge, "Yes", "No"
      %li
        %strong Used
        = boolean_in_word grn_serial_item.inventory_serial_item.used, "Yes", "No"
      %li
        %strong Damaged
        = boolean_in_word grn_serial_item.inventory_serial_item.damage, "Yes", "No"

    %strong Remarks:
    #{simple_format grn_serial_item.inventory_serial_item.remarks}
  .row
    .col-md-1{ "type"=> "button", "class"=> "btn btn-link has-popover", "data-toggle"=> "popover", "title"=> "Serial No: #{grn_serial_item.inventory_serial_item.serial_no}", "data-content"=> yield(:grn_more), "data-html" => "true", "data-trigger" => "hover", "data-placement" => "bottom" }
      - if params[:page]
        = (index+1) + 10*(params[:page].to_i-1)
      - else
        = (index+1)

    .col-md-1
      = grn_serial_item.grn_item.grn.grn_no
    .col-md-1
      = grn_serial_item.grn_item.created_at.to_date.strftime(INOCRM_CONFIG["short_date_format"])
    .col-md-1
      = grn_serial_item.inventory_serial_item.serial_no
    .col-md-1
      = grn_serial_item.inventory_serial_item.ct_no
    .col-md-1
      = grn_serial_item.inventory_serial_item.product_condition.try :condition
    .col-md-1
      = grn_serial_item.grn_item.currency.code
    .col-md-1.text-right
      = number_with_precision grn_serial_item.grn_item.current_unit_cost, precision: 2
    .col-md-1.text-right
      = number_with_precision grn_serial_item.inventory_serial_item.inventory_serial_items_additional_costs.sum(:cost), precision: 2

    .col-md-1.text-right
      = number_with_precision (grn_serial_item.inventory_serial_item.inventory_serial_items_additional_costs.sum(:cost) + (grn_serial_item.grn_item.remaining_quantity * grn_serial_item.grn_item.current_unit_cost)), precision: 2
    .col-md-1
      = boolean_in_word grn_serial_item.grn_item.remaining_quantity, "Yes", "No"

    .col-md-1
      = link_to "Select", inventories_admins_searches_path(select_action: "select_serial_item_more", inventory_serial_item_id: grn_serial_item.inventory_serial_item.id, store_id: @store )
  %hr
.row
  .col-md-3.pull-right.text-right
    %strong Total Stock Cost : #{number_with_precision @total_stock_cost, precision: 2}

= paginate @grn_serial_items, remote: false, method: :get