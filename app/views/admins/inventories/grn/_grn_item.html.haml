- if @po_item
  - need_serial = @po_item.inventory_prn_item.inventory_product.inventory_product_info.need_serial.present?
  - need_batch = @po_item.inventory_prn_item.inventory_product.inventory_product_info.need_batch.present?
  - inventory_product = @po_item.inventory_prn_item.inventory_product
  - inventory = inventory_product.inventories.find_by_store_id session[:store_id]
  - url = initialize_grn_admins_inventories_path(po_item_id: @po_item.try(:id), inventory_product_id: @inventory_product.try(:id))
- elsif @inventory_product
  - need_serial = @inventory_product.inventory_product_info.need_serial.present?
  - need_batch = @inventory_product.inventory_product_info.need_batch.present?
  - inventory_product = @inventory_product
  - inventory = inventory_product.inventories.find_by_store_id session[:store_id]
  - url = initiate_grn_for_i_product_admins_inventories_path(inventory_product_id: @inventory_product.try(:id))

- if @po_item.present?
  - resource_reference_id = @po_item.id
  - resource_reference_class = @po_item.class
- else
  - resource_reference_id = @inventory_product.id
  - resource_reference_class = @inventory_product.class

= simple_nested_form_for @grn_item, url: url, method: :post, remote: true, html: {class: "validate_form"} do |g|

  .row.small_scale_padding-top1.small_scale_padding-bottom1
    .col-md-4
      %strong Item Code:
      =inventory_product.generated_item_code
    .col-md-4
      %strong Item Description:
      =inventory_product.description
    .col-md-4
      %strong Balance Qty To Be Received:
    .col-md-4
      %strong Received Quantity:
      / =(need_serial and !need_batch ? 1 : 0 )
    .col-md-4
      %strong Received Unit:
      / =inventory_product.inventory_unit
    .col-md-4
      %strong PO Remarks:
      =inventory.remarks
    .col-md-4
      %strong Rack:
      =inventory.inventory_bin.inventory_shelf.inventory_rack.description
    .col-md-4
      %strong Shelf:
      =inventory.inventory_bin.inventory_shelf.description
    .col-md-4
      %strong BIN:
      =inventory.inventory_bin.description
    .col-md-4
      %strong Stock In Hand:
      =inventory.stock_quantity
    .col-md-4
      %strong Remarks:

  - if !need_serial and need_batch
    %fieldset
      %legend GRN Batches
      = g.simple_fields_for :grn_batches do |b|
        - b.object.build_inventory_batch unless b.object.inventory_batch.present?
        = b.simple_fields_for :inventory_batch do |ib|
          = ib.input :inventory_id, as: :hidden, input_html: {value: inventory.id }
          = ib.input :product_id, as: :hidden, input_html: {value: inventory_product.id }
          = ib.input :created_by, as: :hidden, input_html: {value: current_user.id }
          %fieldset
            %legend New Batch
            .row
              .col-md-6
                = ib.input :lot_no
              .col-md-6
                = ib.input :batch_no
              .col-md-6
                = ib.input :manufatured_date, as: :string, input_html: {class: "datepicker", onblur: "Warranties.update_end_at(this); return false;"}
              .col-md-6
                = ib.input :expiry_date, as: :string, input_html: {class: "datepicker updateable_end_at"}
              .col-md-12
                = ib.input :remarks

            %fieldset
              %legend Warranty
              = ib.simple_fields_for :inventory_batch_warranties do |iw|
                - iw.object.build_inventory_warranty unless iw.object.inventory_warranty.present?
                = iw.simple_fields_for :inventory_warranty do |w|
                  = w.input :created_by, as: :hidden, input_html: {value: current_user.id }
                  .row
                    .col-md-4
                      = w.association :inventory_warranty_type
                    .col-md-4
                      = w.input :start_at, as: :string, input_html: {class: "datepicker", onblur: "Warranties.update_end_at(this); return false;"}
                    .col-md-4
                      = w.input :end_at, as: :string, input_html: {class: "datepicker updateable_end_at"}
                    .col-md-4
                      = w.input :period_part, as: :integer
                    .col-md-4
                      = w.input :period_labour, as: :integer
                    .col-md-4
                      = w.input :period_onsight, as: :integer
                    .col-md-12
                      = w.input :remarks
                = iw.link_to_remove "remove warranty", class: "remove_warranty", onclick: "Inventories.remove_warranty_click(this);"
              = ib.link_to_add "Add warranty", :inventory_batch_warranties, class: "add_warranty add_grn_items #{'hide' if ib.object.inventory_batch_warranties.any? { |w| w.new_record? }}", onclick: "Inventories.add_warranty_click(this);"

          = b.input :recieved_quantity, as: :float, input_html: {value: 0, required: true }, label: "Received quantity"
        = b.link_to_remove "Remove"
      = g.link_to_add "Add", :grn_batches, class: "add_grn_items", onclick: "Inventories.add_warranty_click(this);"

  - if need_serial and !need_batch

    = tab_panel do
      = tab_nav_tab({class: "small_scale_margin-bottom1"}, single_serial_item: {content: "Item by item", active_class: "active"}, bulk_update: {content: "Bulk update"})
      .tab-content
        = tab_content tabpointer: :single_serial_item, active_class: "active" do
          %fieldset
            %legend GRN Serial items
            = g.simple_fields_for :grn_serial_items do |b|
              - b.object.build_inventory_serial_item unless b.object.inventory_serial_item.present?

              = b.input :remaining, as: :hidden, input_html: {value: true }

              = b.simple_fields_for :inventory_serial_item do |ib|
                = ib.input :inventory_id, as: :hidden, input_html: {value: inventory.id }
                = ib.input :product_id, as: :hidden, input_html: {value: inventory_product.id }
                = ib.input :created_by, as: :hidden, input_html: {value: current_user.id }
                = ib.input :inv_status_id, as: :hidden, input_html: {value: InventorySerialItemStatus.find_by_code("AV").id }
                %fieldset
                  %legend New serial item
                  .row
                    .col-md-4
                      = ib.association :product_condition, label_method: :condition, value_method: :id
                    .col-md-4
                      = ib.input :serial_no
                    .col-md-4
                      = ib.input :ct_no, as: :integer, label: "CT No"
                    .col-md-6
                      = ib.input :manufatured_date, as: :string, input_html: {class: "datepicker", onblur: "Warranties.update_end_at(this); return false;"}
                    .col-md-6
                      = ib.input :expiry_date, as: :string, input_html: {class: "datepicker updateable_end_at"}
                    .col-md-4
                      = ib.input :scavenge, wrapper: :append
                    .col-md-4
                      = ib.input :parts_not_completed, wrapper: :append
                    .col-md-4
                      = ib.input :damage, wrapper: :append
                    .col-md-4
                      = ib.input :used, wrapper: :append
                    .col-md-4
                      = ib.input :repaired, wrapper: :append
                    .col-md-4
                      = ib.input :reserved, wrapper: :append
                    .col-md-12
                      = ib.input :remarks

                  %fieldset
                    %legend Warranty
                    = ib.simple_fields_for :inventory_serial_warranties do |iw|
                      - iw.object.build_inventory_warranty unless iw.object.inventory_warranty.present?
                      = iw.simple_fields_for :inventory_warranty do |w|
                        = w.input :created_by, as: :hidden, input_html: {value: current_user.id }
                        .row
                          .col-md-4
                            = w.association :inventory_warranty_type, label: "Warranty Type"
                          .col-md-4
                            = w.input :start_at, as: :string, input_html: {class: "datepicker", onblur: "Warranties.update_end_at(this); return false;"}
                          .col-md-4
                            = w.input :end_at, as: :string, input_html: {class: "datepicker updateable_end_at"}
                          .col-md-4
                            = w.input :period_part, as: :integer
                          .col-md-4
                            = w.input :period_labour, as: :integer
                          .col-md-4
                            = w.input :period_onsight, as: :integer
                          .col-md-12
                            = w.input :remarks
                      = iw.link_to_remove "remove warranty", class: "remove_warranty", onclick: "Inventories.remove_warranty_click(this);"
                    = ib.link_to_add "Add warranty", :inventory_serial_warranties, class: "add_warranty add_grn_items #{'hide' if ib.object.inventory_serial_warranties.any? { |w| w.new_record? }}", onclick: "Inventories.add_warranty_click(this);"

                  = b.link_to_remove "remove"

            = g.link_to_add "Add GRN Serial item", :grn_serial_items, class: "add_grn_items", onclick: "Inventories.add_warranty_click(this);"
          
        = tab_content tabpointer: :bulk_update do
          .row
            .col-md-8
              .btn.btn-info.btn-mini.fileinput-button{style: "min-height: 10px;"}
                %span Import CSV
                = file_field_tag "import_csv", id: "import_csv_upload"
                #data_carrier{data: {"referenceId" => resource_reference_id, "referenceClass" => resource_reference_class, inventoryid: inventory.id, inventoryproductid: inventory_product.id, grnobjectid: g.object.object_id }}
              .import_csv_wrapper.small_scale_margin-bottom1
              .control-buttons
                - if Rails.cache.fetch([ :serial_item, :i_product, inventory_product.id ]).present?
                  = link_to "Clear", upload_grn_file_admins_inventories_path(clear_import: true, inventory_product_id: inventory_product.id), remote: true, class: "clear_import"
                - else
                = initiate_table table_type: "table-bordered" do
                  = table_header ["No", "Serial No", "CT No"]
                  = multi_table_body do
                    - Rails.cache.fetch([ :serial_item, :i_product, inventory_product.id ]).to_a.each_with_index do |is, index|
                      = multi_table_row [index+1]+[is.serial_no, is.ct_no]
            .col-md-4
              = panels panel_type: "warning", header_content: "Instruction" do
                %ul
                  %li Upload file must be <strong>XLSX</strong> format (Eg: Microsoft Excel sheet)
                  %li File capacity must be less than <strong>1Mb</strong>
                  %li Format must be <strong>Serial No, CT No</strong> order
                  %li First row of sheet must be header with <strong>Serial No, CT No</strong>

          %script#import_csv_upload_output{type: "text/x-tmpl"}
            .import_csv_upload.span12
              {%= o.name %}
              .progress
                .progress-bar.progress-bar-success.progress-bar-striped{role: "progressbar", "aria-valuemax" => 100, "aria-valuemin" => 0, "aria-valuenow" => 0}

  - if !(need_serial or need_batch)
    = g.input :recieved_quantity, as: :decimal, input_html: {value: (g.object.recieved_quantity || 0), required: true }, label: "Received quantity"
  - else
    = g.input :recieved_quantity, as: :hidden, input_html: {value: (need_serial and !need_batch ? 1 : 0 )}
  = g.input :unit_cost, as: :float, label: "Unit cost (#{inventory_product.inventory_product_info.currency.code})", input_html: { required: true, class: "after_two_decimal" } if @inventory_product.present?
  = g.input :remarks, label: "GRN Item remarks"

  = g.submit "Remove", class: "btn btn-link", name: "cancel", data: {disable_with: "Please wait..."}
  = g.submit "Add", class: "btn btn-success btn-sm", name: "next", data: {disable_with: "Please wait..."}


#bulk_serial_item_render.modal.fade{tabindex: -1, role: "dialog", "aria-labelledby" => "bulk_serial_item_render", "aria-hidden" => true}
  .modal-dialog.modal-lg
    .modal-content
      .modal-header
        %h4.modal-title Bulk update
      .modal-body
      .modal-footer

= javascript_tag do
  $(".validate_form").validate()