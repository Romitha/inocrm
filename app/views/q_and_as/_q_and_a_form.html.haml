- ticket = @ticket
- problem_category = @problem_category
- ticket_action_id = @ticket_action_id
- ge_questions = @ge_questions
- unless ticket.q_and_answers.present?
  - ticket.problem_category.q_and_as.each do |q_and_a|
    - if q_and_a.task_action.action_no == 1
      - ticket.q_and_answers.build problematic_question_id: q_and_a.id

- unless ticket.ge_q_and_answers.present?
  - ge_questions.each do |ge_q_and_a|
    - ticket.ge_q_and_answers.build general_question_id: ge_q_and_a.id

= simple_nested_form_for ticket, url: q_and_answer_save_tickets_path, remote: true do |f|
  %h4 General questions
  = f.simple_fields_for :ge_q_and_answers do |qa|
    .col-md-6
      .strong= qa.object.ge_q_and_a.question
      = qa.input :general_question_id, as: :hidden
      - if qa.object.ge_q_and_a.answer_type == "YN"
        = qa.input :answer, as: :radio_buttons, collection: ["Yes", "No"], include_blank: false, wrapper: :for_radio_button, required: qa.object.ge_q_and_a.compulsory
      - elsif qa.object.ge_q_and_a.answer_type == "TX"
        = qa.input :answer, required: qa.object.ge_q_and_a.compulsory
  %hr
  %h4 Problematic questions
  = f.simple_fields_for :q_and_answers do |qa|
    .col-md-6
      .strong= qa.object.q_and_a.question
      = qa.input :problematic_question_id, as: :hidden
      - if qa.object.q_and_a.answer_type == "YN"
        = qa.input :answer, as: :radio_buttons, collection: ["Yes", "No"], include_blank: false, wrapper: :for_radio_button, required: qa.object.q_and_a.compulsory, input_html: {rows: 1}
      - elsif qa.object.q_and_a.answer_type == "TX"
        = qa.input :answer, required: qa.object.q_and_a.compulsory, input_html: {rows: 1}
  .row
    .col-md-12
      = link_to "Back", create_customer_tickets_path(customer_id: customer.id), remote: true, method: :post
      = f.submit "Next", class: "btn btn-sm btn-success", data: { disable_with: "Please wait..." }, class: "btn btn-success", "id"=>"save_next"