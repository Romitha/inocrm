= simple_nested_form_for organization, html: {class: "form-horizontal"} do |f|
  - if organization.errors.present?
    .row
      = panels header_content: "Something gone wrong", panel_type: "danger" do
        %ul
          - organization.errors.full_messages.each do |message|
            %li= message
  .row
    .col-md-2
      = image_tag organization.logo.url, class: "img-responsive" if organization.logo.present?
      .btn.btn-success.btn-file.has-tooltip{data: {toggle: "tooltip", placement: "left"}, title: "Upload organization Logo"}
        Upload Logo
        = f.input :logo, label: false, placeholder: "Upload organization Logo", wrapper_html: {class: "margin-none"}
    .col-md-9.pull-right
      = f.input :name, label: false, placeholder: "Name of Organization", input_html: {class: "has-tooltip", data: {toggle: "tooltip", placement: "left"}, title: "Organization Name"}
      %blockquote
        = f.input :short_name, label: false, placeholder: "Short name of Organization", input_html: {class: "has-tooltip", data: {toggle: "tooltip", placement: "left"}, title: "Short name of Organization"}
  .row
    .col-md-4
      = f.input :vat_number, label: false, placeholder: "Vat Number", input_html: {class: "has-tooltip", data: {toggle: "tooltip", placement: "left"}, title: "Vat Number"}
    .col-md-4.pull-right
      = f.input :web_site, label: false, placeholder: "Web Site", input_html: {class: "has-tooltip", data: {toggle: "tooltip", placement: "left"}, title: "Web Site"}
  .row
    .col-md-12
      = f.input :description, label: false, placeholder: "Description", input_html: {class: "has-tooltip", data: {toggle: "tooltip", placement: "left"}, title: "Description"}
      = f.input :category, as: :hidden

  .row
    .pull-right
      = f.submit nil, class: "btn btn-success"
- if organization.persisted?
  .row
    %ul.nav.nav-tabs{role: "tablist"}
      - [["Address", "#addresses#{organization.id}"], ["Contact Details", "#contacts#{organization.id}"], ["Employees", "#contact_persons#{organization.id}"], ["Documents & Attachements", "#documents#{organization.id}"], ["Designations", "#designations#{organization.id}"], ["Organization Relations", "#organization_relations#{organization.id}"]].each do |link_info|
        %li= link_to link_info[0], link_info[1], role: "tab", data: {toggle: "tab"}
  .tab-content.small_scale_margin-top1
    .tab-pane.limit-height{id: "addresses#{organization.id}"}
      = render "addresses/form", address: organization.addresses.build

      .fixed-height
        - organization.addresses.order("created_at DESC").each do |address|
          = render "addresses/address", address: address

    .tab-pane.limit-height{id: "contacts#{organization.id}"}
      = render "contact_numbers/form", contact_number: organization.contact_numbers.build

      .fixed-height
        - organization.contact_numbers.order("created_at DESC").each do |contact_number|
          = render "contact_numbers/contact_number", contact_number: contact_number

    .tab-pane.limit-height{id: "contact_persons#{organization.id}"}
      = link_to "Add Employee", new_user_path(organization_id: encrypt_org(organization.id))
      .limit-height
        - organization.users.order("created_at DESC").each do |user|
          = render "users/user", user: user

    .tab-pane.limit-height{id: "designations#{organization.id}"}
      = render "designations/form", designation: organization.designations.build

      .fixed-height
        - organization.designations.order("created_at DESC").each do |designation|
          = render "designations/designation", designation: designation

    .tab-pane{id: "organization_relations#{organization.id}"}
      = render "organizations/parent_member", parent_member: organization
      .fixed-height
        = render "organizations/member",organization: organization.parent_organization, relation: "Parent", relation_organization: organization if organization.parent_organization.present?
        - organization.members.order("created_at DESC").each do |member|
          = render "organizations/member", organization: member, relation: "Member", relation_organization: organization
