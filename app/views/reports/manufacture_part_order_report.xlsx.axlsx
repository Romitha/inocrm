wb = xlsx_package.workbook
user_ticket_action_list = [ 16, 17, 19, 31, 34, 36, 37, 38, 42, 43, 44, 56 ]


headers = ["No", "Order Date & Time (Eng)", "Order Updated Time (Sup.cor)", "Order Time by (Sup.cor)", "Collected Time (Del.cor)", "Receive Date & Time (Sup.cor)", "Issue Date & Time (Sup.cor)", "Receive Date & Time (Eng)", "Spare Part Description", "Spare Part No", "Ticket No", "Event No (11)", "Machine Model", "Machine product", "Machine Serial No", "SBU", "Engineer", "Part Status", "Terminated Status", "Terminated By", "Terminated Date & Time", "Terminated Reason", "Part Used Status", "Last Return Date By Eng", "Last Return Part Rejected Date", "Return Part Accepted Date", "Return part Accepted By", "Part Note", "Event Close Date (Sup.cor)", "Event Close by (Sup.cor)", "Expected PO Amount", "Bundled By", "Ticket Close Approval Date", "Bundle No", "Bundle Date", "Bundle Delivery Date", "PO Create Date", "PO No", "Actual PO Amount", "PO Created By"]

wb.add_worksheet(name: "Quotation report") do |sheet|
  sheet.add_row headers

  @part_orders.each_with_index do |part_order, index|

    part_order_content = [ (index+1), part_order.spare_part_description, part_order.spare_part_no, part_order.ticket.support_ticket_no, part_order.ticket_spare_part_manufacture.event_no, part_order.ticket.product_info['model_no'], part_order.ticket.product_info['serial_no'], part_order.ticket.product_info['product_no'], part_order.engineer.sbu_name, part_order.engineer.full_name, part_order.status_action_name, boolean_in_word(part_order.part_terminated, "Yes", "No") ]
    part_order_content.insert(1, (part_order.requested_at.present? ? part_order.requested_at.to_datetime.strftime("#{INOCRM_CONFIG['short_date_format']} #{INOCRM_CONFIG['time_format']}") : '' ))

    part_order_content.insert(2, (part_order.ticket_spare_part_manufacture.order_pending_at.present? ? part_order.ticket_spare_part_manufacture.order_pending_at.to_datetime.strftime("#{INOCRM_CONFIG['short_date_format']} #{INOCRM_CONFIG['time_format']}") : '' ))
    part_order_content.insert(3,  User.cached_find_by_id(part_order.ticket_spare_part_manufacture.order_pending_by).try(:full_name))

    part_action = {}
    part_order.ticket.user_ticket_actions.select{ |u| user_ticket_action_list.include?(u.action_id) }.each do |u|
      if [19, 34].include?(u.action_id)
        unless part_action[19].present? and (part_action[19][:date].to_datetime < u.action_at.to_datetime)
          part_action[19] = { date: u.action_at.to_datetime.strftime("#{INOCRM_CONFIG['short_date_format']} #{INOCRM_CONFIG['time_format']}"), by: u.action_by_name, terminate_reason: u.terminate_reason }
        end
      else
        part_action[u.action_id] = { date: u.action_at.to_datetime.strftime("#{INOCRM_CONFIG['short_date_format']} #{INOCRM_CONFIG['time_format']}"), by: u.action_by_name, terminate_reason: u.terminate_reason }
      end
    end

    user_ticket_action_list.each{ |e| part_action[e] ||= { date: '', by: '', terminate_reason: '' } }

    user_ticket_action_list.each do |e|
      case e
      when 36 # collected
        part_order_content.insert(4, part_action[e][:date])
      when 37 # received by sco
        part_order_content.insert(5, part_action[e][:date])
      when 38 # issued
        part_order_content.insert(6, part_action[e][:date])
      when 16 # received by eng
        part_order_content.insert(4, part_action[e][:by])
      when 19 # Terminated at
        part_order_content.insert(16, part_action[e][:by], part_action[e][:date])
        
      end
    end

    part_order_content << part_action[19][:terminate_reason]

    part_order_content << part_order.ticket_use_status

    part_order_content << part_action[17][:date] # last return date
    part_order_content << part_action[42][:date] # last return part reject date

    part_order_content << part_action[43][:date] # return part accepted date
    part_order_content << part_action[43][:by] # return part accepted by

    part_order_content << strip_tags(part_order.note)
    part_order_content << part_action[44][:date] # event closed at
    part_order_content << part_action[44][:by] # event closed by
    part_order_content << (part_order.ticket_spare_part_manufacture.payment_expected_manufacture || '') # Expected PO Amount
    part_order_content << User.cached_find_by_id( part_order.ticket_spare_part_manufacture.add_bundle_by).try(:full_name)
    part_order_content << part_action[56][:date]
    part_order_content << part_order.ticket_spare_part_manufacture.return_part_bundle_no
    part_order_content << (part_order.ticket_spare_part_manufacture.add_bundle_at.present? ? part_order.ticket_spare_part_manufacture.add_bundle_at.to_datetime.strftime("#{INOCRM_CONFIG['short_date_format']} #{INOCRM_CONFIG['time_format']}") : "")
    part_order_content << (part_order.ticket_spare_part_manufacture.return_parts_bundle.try(:delivered_at).present? ? part_order.ticket_spare_part_manufacture.return_parts_bundle.delivered_at.to_datetime.strftime("#{INOCRM_CONFIG['short_date_format']} #{INOCRM_CONFIG['time_format']}") : "")

    if part_order.so_po_items.any?
      part_order_content << part_order.so_po_items.first.po_info.created_at.to_datetime.strftime("#{INOCRM_CONFIG['short_date_format']} #{INOCRM_CONFIG['time_format']}")
      part_order_content << part_order.so_po_items.first.po_info['po_no_format']
      part_order_content << part_order.so_po_items.first.po_info['amount']
      part_order_content << User.cached_find_by_id(part_order.so_po_items.first.po_info['created_by']).try(:full_name)
    else
      part_order_content << ''
      part_order_content << ''
      part_order_content << ''
    end

    sheet.add_row part_order_content

  end
end
